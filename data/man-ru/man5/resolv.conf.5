.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 1986 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %%%LICENSE_START(PERMISSIVE_MISC)
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\" %%%LICENSE_END
.\"
.\"	@(#)resolver.5	5.9 (Berkeley) 12/14/89
.\"	$Id: resolver.5,v 8.6 1999/05/21 00:01:02 vixie Exp $
.\"
.\" Added ndots remark by Bernhard R. Link - debian bug #182886
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH RESOLV.CONF 5 2019\-03\-06 "" "Руководство программиста Linux"
.UC 4
.SH ИМЯ
resolv.conf \- файл настройки для процедур определения имён (resolver)
.SH ОБЗОР
\fB/etc/resolv.conf\fP
.SH ОПИСАНИЕ
\fIresolver\fP — это набор функций из библиотеки Си, который предоставляет
доступ к системе доменных имён интернет (DNS). Файл настройки определителя
(resolver) содержит информацию, которая читается функциями разрешения имён
при первом их вызове процессом. Файл разрабатывался в понятном человеку
формате, и содержит список ключевых слов со значениями, которые
предоставляют различного рода информацию для функций разрешения имён. Файл
настройки считается надёжным источником информации DNS (например, информация
об AD\-бите DNSSEC будет возвращаться в неизменном виде из этого источника).
.PP
Если этот файл не существует, то будет опрашиваться только служба имён на
локальной машине; доменное имя определяется из имени узла, а домен поиска
создаётся из имени домена.
.PP
Поддерживаются следующие параметры настройки:
.TP 
\fBnameserver\fP IP\-адрес сервера имён
Задает интернет\-адрес сервера имён, на который надо переправлять все
запросы, или в виде адреса IPv4 (в точечном формате), или в виде адреса IPv6
в формате с двоеточиями (и, возможно, точками), определённом в RFC
2373. Может быть указано до \fBMAXNS\fP (в настоящее время 3,
см. \fI<resolv.h>\fP) серверов имён, повторяя каждый раз ключевое
слово. Если указано несколько серверов, функции разрешения имён будут
обращаться к серверам имен в порядке перечисления. Если в файле нет строк
\fBnameserver\fP, то функции разрешения имён используют сервер имён на
локальной машине. (Функции разрешения имён работают по следующему алгоритму:
попробовать обратиться к первому указанному серверу имён. Если нет ответа в
отведённое время, попробовать обратиться к следующему серверу, и т.д. пока
не будет исчерпан список серверов.)
.TP 
\fBdomain\fP локальное доменное имя
Для большинства запросов имён с доменом можно использовать короткие имена
относительно локального домена. Если значение равно \(aq.\(aq, то это
считается корневым доменом. Если строки \fBdomain\fP в файле настройки нет,
домен определяется из локального имени узла, возвращаемого
\fBgethostname\fP(2); доменной частью считается всё после первой точки
\(aq.\(aq. Наконец, если имя узла не содержит доменной части, то
предполагается корневой домен.
.TP 
\fBsearch\fP список поиска
.\" When having a resolv.conv with a line
.\"  search subdomain.domain.tld domain.tld
.\" and doing a hostlookup, for example by
.\"  ping host.anothersubdomain
.\" it sends dns-requests for
.\"  host.anothersubdomain.
.\"  host.anothersubdomain.subdomain.domain.tld.
.\"  host.anothersubdomain.domain.tld.
.\" thus not only causing unnecessary traffic for the root-dns-servers
.\" but broadcasting information to the outside and making man-in-the-middle
.\" attacks possible.
Список поиска обычно определяется по имени локального домена; по умолчанию
он содержит только имя локального домена. Это можно изменить, перечислив
имена доменов, в которых нужно вести поиск, с ключевым полем \fIsearch\fP через
пробел или символ табуляции. При разрешении запросов имён, в которых меньше
точек чем указано в \fIndots\fP (по умолчанию 1), будет использован каждый
компонент пути поиска пока не будет найдено соответствующее имя.
.IP
.\" glibc commit 3f853f22c87f0b671c0366eb290919719fa56c0e
В  glibc 2.25 и старее список поиска может содержать не более шести доменов
и не может быть длиннее 256 символов. Начиная с glibc 2.26 список поиска
безграничен.
.TP 
\fBsortlist\fP
Вызывает сортировку адресов, возвращаемых функцией
\fBgethostbyname\fP(3). Список сортировки задается в виде пар IP\-адрес/маска
сети. Маску сети указывать не обязательно \(em по умолчанию используется
естественная маска сети. IP\-адрес и необязательная маска сети разделяются
косой чертой. В списке можно указывать до 10 пар. Пример:
.IP
.in +4n
sortlist 130.155.160.0/255.255.240.0 130.155.0.0
.in
.TP 
\fBoptions\fP
С помощью параметров изменяются некоторые внутренние переменные функций
определения имён. Синтаксис
.RS
.IP
\fBoptions\fP \fIпараметр\fP \fI...\fP
.PP
где \fIпараметр\fP может иметь следующие значения:
.TP 
\fBdebug\fP
.\" Since glibc 2.2?
Задаёт \fBRES_DEBUG\fP в \fI_res.options\fP (только, если glibc собрана с
поддержкой отладки; смотрите \fBresolver\fP(3)).
.TP 
\fBndots:\fP\fIn\fP
.\" Since glibc 2.2
Задаёт минимальное количество точек, которые должны обязательно
присутствовать в имени, переданном функции \fBres_query\fP(3)
(см. \fBresolver\fP(3)) прежде чем будет выполнен \fIначальный абсолютный
запрос\fP. По умолчанию \fIn\fP равно 1, поэтому если в имени есть точки, сначала
имя пытаются разрешить как абсолютное, прежде чем добавлять к нему элементы
из \fIсписка поиска\fP. Значение этого параметра внутренне доходит до 15.
.TP 
\fBtimeout:\fP\fIn\fP
.\" Since glibc 2.2
Задаёт промежуток времени, который функции определения имён будут ждать
ответа от удалённого сервера имён перед тем как повторить запрос другому
серверу имён. Он \fIне\fP может быть равным общему времени, затрачиваемым
вызовом программного интерфейса определителя, и не гарантируется, что один
вызов программного интерфейса определителя соответствует одному
промежутку. Измеряется в секундах, по умолчанию \fBRES_TIMEOUT\fP (в настоящее
время равно 5, смотрите \fI<resolv.h>\fP). Значение этого параметра
внутренне доходит до 30.
.TP 
\fBattempts:\fP\fIn\fP
Задаёт количество раз, которое функции определения имён будут посылать
запрос серверам имён перед тем как закончить работу и вернуть ошибку
вызывавшему их приложению. По умолчанию равно \fBRES_DFLRETRY\fP (в настоящее
время 2, см. \fI<resolv.h>\fP). Значение этого параметра внутренне
доходит до 5.
.TP 
\fBrotate\fP
.\" Since glibc 2.2
Задаёт значение \fBRES_ROTATE\fP в \fI_res.options\fP, что приводит к циклическому
выбору указанных серверов имён. Это приводит к распределению нагрузки среди
серверов, чтобы исключить использование каждый раз только первого сервера
всеми клиентами.
.TP 
\fBno\-check\-names\fP
.\" since glibc 2.2
Задаёт значение \fBRES_NOCHECKNAME\fP в \fI_res.options\fP, что приводит к
выключению в современном BIND проверки в поступающих именах узлов и почтовых
именах недопустимых символов, таких как символы подчёркивания (_), не\-ASCII
или управляющие символы.
.TP 
\fBinet6\fP
.\" Since glibc 2.2
.\" b76e065991ec01299225d9da90a627ebe6c1ac97
Задаёт значение \fBRES_USE_INET6\fP в \fI_res.options\fP. Это приводит к
выполнению запроса AAAA раньше запроса A внутри функции \fBgethostbyname\fP(3),
и отображению ответов IPv4 в «туннелированную форму» IPv6, если записи AAAA
не были обнаружены, но есть запись типа A. Начиная с glibc 2.25 этот
параметр считается устаревшим; приложения должны использовать
\fBgetaddrinfo\fP(3), а не \fBgethostbyname\fP(3).
.TP 
\fBip6\-bytestring\fP (начиная с glibc 2.3.4)
Задаёт значение \fBRES_USE_BSTRING\fP в \fI_res.options\fP. Это приводит к поиску
обратной записи IPv6 с помощью формата значимых битов, описанного в RFC\ 2673; если этот параметр не задан (по умолчанию), то используется
полубайтовый формат. Данный параметр был удалён в glibc 2.25, так как он
полагается на обратно несовместимое расширение DNS, которое никогда не
разворачивалось в Интернете.
.TP 
\fBip6\-dotint\fP/\fBno\-ip6\-dotint\fP (glibc 2.3.4 по 2.24)
Устанавливает/сбрасывает значение \fBRES_NOIP6DOTINT\fP в \fI_res.options\fP. Если
указан сброс (\fBip6\-dotint\fP), то выполняется поиск обратной записи IPv6
(устарел) в зоне \fIip6.int\fP; если задана установка (\fBno\-ip6\-dotint\fP), то по
умолчанию выполняется поиск обратной записи IPv6 в зоне \fIip6.arpa\fP. Данные
параметры доступны в glibc до версии 2.24, где \fBno\-ip6\-dotint\fP используется
по умолчанию. Так как поддержка \fBip6\-dotint\fP давно приостановлена в
Интернете, то эти параметры удалены в glibc 2.25.
.TP 
\fBedns0\fP (начиная с glibc 2.6)
Задаёт значение \fBRES_USE_EDNSO\fP в \fI_res.options\fP. Включает поддержку
расширений DNS, описанных в RFC\ 2671.
.TP 
\fBsingle\-request\fP (начиная с glibc 2.10)
Задаёт значение \fBRES_SNGLKUP\fP в \fI_res.options\fP. По умолчанию, glibc
начиная с версии 2.9 выполняет поиск по IPv4 и IPv6 параллельно. Некоторые
приложения DNS\-серверов не могут обработать такие запросы должным образом и
делают паузу между ответами на запрос. Этот параметр отключает данное
поведение, что заставляет glibc делать запросы IPv6 и IPv4 последовательно
(что замедляет процесс определения имени).
.TP 
\fBsingle\-request\-reopen\fP (начиная с glibc 2.9)
Задаёт \fBRES_SNGLKUPREOP\fP в \fI_res.options\fP. Для разрешения имён
используется единый сокет для запросов A а AAAA. Некоторая аппаратура
ошибочно посылает обратно только один ответ. Когда это происходит, клиент
остаётся ждать второго ответа. Указание этого параметра изменяет такое
поведение так, что если два запроса с одного порта не обрабатываются
правильно, то сокет будет закрыт и открыт новый перед посылкой второго
запроса.
.TP 
\fBno\-tld\-query\fP (начиная с glibc 2.14)
Задаёт значение RES_NOTLDQUERY в \fI_res.options\fP. Этот параметр указывает
\fBres_nsearch\fP() не пытаться определить неполное имя как если бы это домен
верхнего уровня. Данный параметр может привести к проблемам, если сайт
указал «localhost» как TLD, но содержит localhost в одном или более
элементах списка поиска. Данный параметр не действует, если не установлен
RES_DEFNAMES или RES_DNSRCH.
.TP 
\fBuse\-vc\fP (начиная с glibc 2.14)
.\" aef16cc8a4c670036d45590877d411a97f01e0cd
Задаёт \fBRES_USEVC\fP в \fI_res.options\fP. Данный параметр включает
принудительное использование TCP для запросов DNS.
.TP 
\fBno\-reload\fP (начиная с glibc 2.26)
Устанавливает \fBRES_NORELOAD\fP в \fI_res.options\fP.  Этот параметр выключает
автоматическую перезагрузку изменённого файла настройки.
.RE
.PP
Ключевые слова \fIdomain\fP и \fIsearch\fP являются взаимоисключающими. Если они
указаны более одного раза, то используется значение последнего.
.PP
Значение ключевого слова \fIsearch\fP в системном файле \fIresolv.conf\fP может
быть изменено назначением переменной окружения для определённого процесса
\fBLOCALDOMAIN\fP списка доменов, разделённых пробелами.
.PP
Значение ключевого слова \fIoptions\fP в системном файле \fIresolv.conf\fP может
быть дополнено назначением переменной окружения для определённого процесса
\fBRES_OPTIONS\fP списка вышеописанных в \fBoptions\fP параметров настройки
функций определения имён.
.PP
Ключевое слово и значение должны быть в одной строке, и кроме того, ключевое
слово(например, \fBnameserver\fP), должно быть в начале строки. Значение должно
отделяться от ключевого слова пробельным символом.
.PP
Строки, в которых в первой колонке содержится точка с запятой (;) или символ
решётки (#), считаются комментариями.
.SH ФАЙЛЫ
\fI/etc/resolv.conf\fP, \fI<resolv.h>\fP
.SH "СМОТРИТЕ ТАКЖЕ"
\fBgethostbyname\fP(3), \fBresolver\fP(3), \fBhost.conf\fP(5), \fBhosts\fP(5),
\fBnsswitch.conf\fP(5), \fBhostname\fP(7), \fBnamed\fP(8)
.PP
Руководство по работе с сервером имён BIND
