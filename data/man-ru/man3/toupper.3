.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" and Copyright 2014 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified Sat Jul 24 17:45:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2000-02-13 by Nicolás Lichtmaier <nick@debian.org>
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH TOUPPER 3 2017\-09\-15 GNU "Руководство программиста Linux"
.SH ИМЯ
toupper, tolower, toupper_l, tolower_l \- преобразуют регистр символов
.SH ОБЗОР
.nf
\fB#include <ctype.h>\fP
.PP
\fBint toupper(int \fP\fIc\fP\fB);\fP
\fBint tolower(int \fP\fIc\fP\fB);\fP
.PP
\fBint toupper_l(int \fP\fIc\fP\fB, locale_t \fP\fIlocale\fP\fB);\fP
\fBint tolower_l(int \fP\fIc\fP\fB, locale_t \fP\fIlocale\fP\fB);\fP
.fi
.PP
.in -4n
Требования макроса тестирования свойств для glibc
(см. \fBfeature_test_macros\fP(7)):
.in
.PP
\fBtoupper_l\fP(), \fBtolower_l\fP():
.PD 0
.RS 4
.TP 
Начиная с glibc 2.10:
_XOPEN_SOURCE\ >=\ 700
.TP 
До glibc 2.10:
_GNU_SOURCE
.RE
.PD
.SH ОПИСАНИЕ
Эти функции преобразуют строчные символы в заглавные и наоборот.
.PP
Если \fIc\fP — строчная буква, то \fBtoupper\fP() возвращает её заглавный
эквивалент, если он есть в текущей локали. В противном случае возвращается
\fIc\fP. Функция \fBtoupper_l\fP() выполняет ту же задачу, но использует локаль,
на которую ссылается описатель локали \fIlocale\fP.
.PP
Если \fIc\fP — заглавная буква, то \fBtolower\fP() возвращает её строчный
эквивалент, если он есть в текущей локали. В противном случае возвращается
\fIc\fP. Функция \fBtolower_l\fP() выполняет ту же задачу, но использует локаль,
на которую ссылается описатель локали \fIlocale\fP.
.PP
Если \fIc\fP имеет значение не типа \fIunsigned char\fP или не равно \fBEOF\fP, то
поведение этих функций не определено.
.PP
Поведение \fBtoupper_l\fP() и \fBtolower_l\fP() не определено, если значение
\fIlocale\fP равно специальному объекту локали \fBLC_GLOBAL_LOCALE\fP (смотрите
\fBduplocale\fP(3)) или некорректному описателю объекта локали.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Возвращаемым значением является преобразованная буква или \fIc\fP, если
преобразование невозможно.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lbw24 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBtoupper\fP(),
\fBtolower\fP(),
.br
\fBtoupper_l\fP(),
\fBtolower_l\fP()
T}	Безвредность в нитях	MT\-Safe
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
\fBtoupper\fP(), \fBtolower\fP(): C89, C99, 4.3BSD, POSIX.1\-2001, POSIX.1\-2008.
.PP
\fBtoupper_l\fP(), \fBtolower_l\fP(): POSIX.1\-2008.
.SH ЗАМЕЧАНИЯ
Стандартами требуется, что аргумент \fIc\fP этих функций равнялся \fBEOF\fP или
значению, которое представимо типом \fIunsigned char\fP. Если аргумент \fIc\fP
имеет тип \fIchar\fP, то он должен приводиться к \fIunsigned char\fP как в
следующем примере:
.PP
.in +4n
.EX
char c;
\&...
res = toupper((unsigned char) c);
.EE
.in
.PP
Это необходимо, так как \fIchar\fP может быть эквивалентен \fIsigned char\fP, и
если у байта установлен старший знаковый бит, то он учитывается при
приведении к \fIint\fP и байт превращается в значение, выходящее за границу
\fIunsigned char\fP.
.PP
Особенности подстановки строчных и прописных букв зависят от
локали. Например, в локали по умолчанию \fB"C"\fP ничего не сказано про
умляуты, поэтому они не преобразовываются.
.PP
.\" FIXME One day the statement about "sharp s" needs to be reworked,
.\" since there is nowadays a capital "sharp s" that has a codepoint
.\" in Unicode 5.0; see https://en.wikipedia.org/wiki/Capital_%E1%BA%9E
В некоторых не английских локалях существуют строчные буквы без заглавного
аналога; например немецкая sharp.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBisalpha\fP(3), \fBnewlocale\fP(3), \fBsetlocale\fP(3), \fBtowlower\fP(3),
\fBtowupper\fP(3), \fBuselocale\fP(3), \fBlocale\fP(7)
