.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"	<mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETNETENT_R 3 2017\-09\-15 GNU "Руководство программиста Linux"
.SH ИМЯ
getnetent_r, getnetbyname_r, getnetbyaddr_r \- возвращают запись о сети
(реентерабельные версии)
.SH ОБЗОР
.nf
\fB#include <netdb.h>\fP
.PP
\fBint getnetent_r(struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.PP
\fBint getnetbyname_r(const char *\fP\fIname\fP\fB,\fP
\fB                struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.PP
\fBint getnetbyaddr_r(uint32_t \fP\fInet\fP\fB, int \fP\fItype\fP\fB,\fP
\fB                struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.PP
.fi
.in -4n
Требования макроса тестирования свойств для glibc
(см. \fBfeature_test_macros\fP(7)):
.ad l
.in
.PP
\fBgetnetent_r\fP(),
\fBgetnetbyname_r\fP(),
\fBgetnetbyaddr_r\fP():
    начиная с glibc 2.19:
        _DEFAULT_SOURCE
    в glibc 2.19 и старее:
        _BSD_SOURCE || _SVID_SOURCE
.ad b
.SH ОПИСАНИЕ
Функции \fBgetnetent_r\fP(), \fBgetnetbyname_r\fP() и \fBgetnetbyaddr_r\fP() являются
реентерабельными эквивалентами \fBgetnetent\fP(3), \fBgetnetbyname\fP(3) и
\fBgetnetbynumber\fP(3), соответственно. Они отличаются способом возврата
структуры \fInetent\fP и списком параметров и типом возвращаемого значения. В
этой справочной странице описаны только различия с нереентерабельными
функциями.
.PP
Вместо возврата указателя на статически выделенную структуру \fInetent\fP в
качестве результата эти функции копируют структуру в расположение, указанное
\fIresult_buf\fP.
.PP
.\" I can find no information on the required/recommended buffer size;
.\" the nonreentrant functions use a 1024 byte buffer -- mtk.
Массив \fIbuf\fP используется для хранения строковых полей из возвращаемой
структуры \fInetent\fP (нереентерабельные функции выделяют эти строки из
статического хранилища). Размер данного массива задаётся в \fIbuflen\fP. Если
\fIbuf\fP слишком мал, то вызов завершается с ошибкой \fBERANGE\fP, вызывающий
должен его повторить с большим буфером (для большинства приложений должно
быть достаточно буфера длиной 1024 байт).
.PP
Если вызов получил запись о сети, то  \fI*result\fP указывает на \fIresult_buf\fP;
в противном случае \fI*result\fP устанавливается в NULL.
.PP
.\" getnetent.3 doesn't document any use of h_errno, but nevertheless
.\" the nonreentrant functions no seem to set h_errno.
Буфер, указанный \fIh_errnop\fP, используется для возврата значения, которое бы
сохранилось в глобальной переменной \fIh_errno\fP нереентерабельными версиями
этих функций.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении эти функции возвращают 0. При ошибке возвращается
одно из положительных значений, перечисленных В разделе ОШИБКИ.
.PP
При ошибке, отсутствии записи (\fBgetnetbyname_r\fP(), \fBgetnetbyaddr_r\fP()) или
конце данных (\fBgetnetent_r\fP()) значение \fIresult\fP равно NULL.
.SH ОШИБКИ
.TP 
\fBENOENT\fP
(\fBgetnetent_r\fP()) Больше нет записей в базе данных.
.TP 
\fBERANGE\fP
Размер \fIbuf\fP слишком мал. Попробуйте ещё раз с большим буфером (и
увеличенным значением \fIbuflen\fP).
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.ad l
.TS
allbox;
lbw17 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBgetnetent_r\fP(),
\fBgetnetbyname_r\fP(),
\fBgetnetbyaddr_r\fP()
T}	Безвредность в нитях	MT\-Safe locale
.TE
.ad
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
Эти функции являются расширениями GNU. Функции с похожими именами есть и в
других системах, хотя и с другим набором параметров.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBgetnetent\fP(3), \fBnetworks\fP(5)
