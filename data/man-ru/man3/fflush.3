.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)fflush.3	5.4 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\"
.\" Modified 2000-07-22 by Nicolás Lichtmaier <nick@debian.org>
.\" Modified 2001-10-16 by John Levon <moz@compsoc.man.ac.uk>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FFLUSH 3 2017\-09\-15 GNU "Руководство программиста Linux"
.SH ИМЯ
fflush \- сбрасывает поток
.SH ОБЗОР
\fB#include <stdio.h>\fP
.PP
\fBint fflush(FILE *\fP\fIstream\fP\fB);\fP
.SH ОПИСАНИЕ
Для потоков вывода функция \fBfflush\fP() принудительно записывает все
буферизированные в пользовательском пространстве данные в устройство вывода
данных или корректирует \fIstream\fP посредством определённой для него функции
записи.
.PP
Для потоков ввода, связанных с файлами, в которых возможно позиционирование
(например, дисковые файлы, но не каналы или терминалы), функция \fBfflush\fP()
отбрасывает все буферизированные данные, которые были получены из
соответствующего файла, но не обработаны приложением.
.PP
При этом поток остается открытым.
.PP
.\" mtk: POSIX specifies that only output streams are flushed for this case.
.\" Also verified for glibc by experiment.
Если аргумент \fIstream\fP равен NULL, то \fBfflush\fP() сбрасывает данные всех
открытых потоков вывода.
.PP
Неблокирующий аналог смотрите в \fBunlocked_stdio\fP(3).
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается нулевое значение. В противном случае
возвращается \fBEOF\fP и \fIerrno\fP присваивается код ошибки.
.SH ОШИБКИ
.TP 
\fBEBADF\fP
Поток \fIstream\fP не открыт или не открыт для записи.
.PP
Функция \fIfflush\fP() может завершиться с ошибкой и присвоить \fIerrno\fP любое
значение из определённых для \fBwrite\fP(2).
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lb lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBfflush\fP()
T}	Безвредность в нитях	MT\-Safe
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
C89, C99, POSIX.1\-2001, POSIX.1\-2008.
.PP
В POSIX.1\-2001 не определено поведение для сброса потоков ввода, но но это
описано в POSIX.1\-2008.
.SH ЗАМЕЧАНИЯ
Заметим, что \fBfflush\fP() сбрасывает буферы только пользовательского
пространства, заданные библиотекой Си. Чтобы гарантировать, что данные
действительно физически сохранены на диске, буферы ядра также должны быть
сохранены, например, с помощью вызова \fBsync\fP(2) или \fBfsync\fP(2).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBfsync\fP(2), \fBsync\fP(2), \fBwrite\fP(2), \fBfclose\fP(3), \fBfileno\fP(3),
\fBfopen\fP(3), \fBsetbuf\fP(3), \fBunlocked_stdio\fP(3)
