.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MBSNRTOWCS 3 2019\-03\-06 GNU "Руководство программиста Linux"
.SH ИМЯ
mbsnrtowcs \- преобразует многобайтовую строку в строку широких символов
.SH ОБЗОР
.nf
\fB#include <wchar.h>\fP
.PP
\fBsize_t mbsnrtowcs(wchar_t *\fP\fIdest\fP\fB, const char **\fP\fIsrc\fP\fB,\fP
\fB                  size_t \fP\fInms\fP\fB, size_t \fP\fIlen\fP\fB, mbstate_t *\fP\fIps\fP\fB);\fP
.fi
.PP
.in -4n
Требования макроса тестирования свойств для glibc (смотрите
\fBfeature_test_macros\fP(7)):
.in
.PP
\fBmbsnrtowcs\fP():
.PD 0
.ad l
.RS 4
.TP  4
Начиная с glibc 2.10:
_POSIX_C_SOURCE\ >=\ 200809L
.TP 
До glibc 2.10:
_GNU_SOURCE
.RE
.ad
.PD
.SH ОПИСАНИЕ
Функция \fBmbsnrtowcs\fP() похожа на функцию \fBmbsrtowcs\fP(3), исключая то, что
количество преобразуемых байт, начиная с \fI*src\fP, ограничено \fInms\fP байтами.
.PP
Если \fIdest\fP не равно NULL, то функция \fBmbsnrtowcs\fP() преобразует не более
\fInms\fP байт многобайтовой строки \fI*src\fP в строку широких символов,
начинающуюся с \fIdest\fP. В \fIdest\fP будет записано не более \fIlen\fP
символов. Обновляется состояние сдвига \fI*ps\fP. Эффективное выполнение
преобразования осуществляется повторяющимися вызовами \fImbrtowc(dest, *src,
n, ps)\fP, где \fIn\fP — некое положительное число, и пока вызов завершается
успешно, увеличивая \fIdest\fP на единицу и \fI*src\fP на количество
использованных байт. Преобразование может остановиться по трём причинам:
.IP 1. 3
Во входных данных обнаружена неправильная многобайтовая
последовательность. В этом случае \fI*src\fP по\-прежнему указывает на
неправильную многобайтовую последовательность, возвращается \fI(size_t)\ \-1\fP
и \fIerrno\fP присваивается \fBEILSEQ\fP.
.IP 2.
Остановка происходит, если достигнуто ограничение \fInms\fP или в \fIdest\fP было
сохранено \fIlen\fP не равных L\(aq\e0\(aq широких символов. В этом случае
\fI*src\fP продолжит указывать на следующую непреобразованную многобайтовую
последовательность и будет возвращено количество широких символов,
записанных в \fIdest\fP.
.IP 3.
Многобайтовая строка была полностью преобразована, включая завершающий
широкий символ null (\(aq\e0\(aq) (побочный эффект: \fI*ps\fP возвращается в
начальное состояние). В этом случае \fI*src\fP устанавливается равным NULL и
возвращается количество широких символов, записанных в \fIdest\fP, не считая
завершающего широкого символа null.
.PP
Если входной буфер заканчивается неполным символом, в POSIX.1 не указано где
остановится преобразование — в конце предыдущего символа (если есть) или в
конце входного буфера. В реализации glibc принят первый вариант.
.PP
Если значение \fIdest\fP равно NULL, то \fIlen\fP игнорируется и преобразование
выполняется как описано выше, исключая то, что преобразованные широкие
символы не записываются в память и нет ограничения на длину строки
назначения.
.PP
В обоих перечисленных случаях, если \fIps\fP равно NULL, то используется
статическое анонимное состояние, известное только функции \fBmbsnrtowcs\fP().
.PP
Программист должен проверить, что в \fIdest\fP есть место по крайней мере для
\fIlen\fP широких символов.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Функция \fBmbsnrtowcs\fP() возвращает количество широких символов, которые
составили преобразованную часть широкосимвольной строки, не включая конечный
широкий символ null. Если обнаружена некорректная многобайтовая
последовательность, то возвращается \fI(size_t)\ \-1\fP, а \fIerrno\fP
присваивается \fBEILSEQ\fP.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lb lb lbw29
l l l.
Интерфейс	Атрибут	Значение
T{
\fBmbsnrtowcs\fP()
T}	Безвредность в нитях	MT\-Unsafe race:mbsnrtowcs/!ps
.TE
.sp 1
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
POSIX.1\-2008.
.SH ЗАМЕЧАНИЯ
Поведение \fBmbsnrtowcs\fP() зависит от категории \fBLC_CTYPE\fP текущей локали.
.PP
Передавать NULL в качестве \fIps\fP небезопасно при работе с нитями.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBiconv\fP(3), \fBmbrtowc\fP(3)  \fBmbsinit\fP(3), \fBmbsrtowcs\fP(3)
