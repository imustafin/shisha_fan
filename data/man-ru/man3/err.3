.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"	From: @(#)err.3	8.1 (Berkeley) 6/9/93
.\" $FreeBSD: src/lib/libc/gen/err.3,v 1.11.2.5 2001/08/17 15:42:32 ru Exp $
.\"
.\" 2011-09-10, mtk, Converted from mdoc to man macros
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ERR 3 2017\-09\-15 Linux "Руководство программиста Linux"
.SH ИМЯ
err, verr, errx, verrx, warn, vwarn, warnx, vwarnx \- форматирует сообщения
об ошибках
.SH ОБЗОР
.nf
\fB#include <err.h>\fP
.PP
\fBvoid err(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, ...);\fP
.PP
\fBvoid errx(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, ...);\fP
.PP
\fBvoid warn(const char *\fP\fIfmt\fP\fB, ...);\fP
.PP
\fBvoid warnx(const char *\fP\fIfmt\fP\fB, ...);\fP

\fB#include <stdarg.h>\fP
.PP
\fBvoid verr(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
.PP
\fBvoid verrx(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
.PP
\fBvoid vwarn(const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
.PP
\fBvoid vwarnx(const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
Семейства функций \fBerr\fP() и \fBwarn\fP() выводят форматированное сообщение об
ошибке в стандартный поток ошибок. При выводе всегда показывается последний
компонент имени программы, двоеточие и пробел. Если значение \fIfmt\fP не равно
NULL, то выводится сообщение об ошибке, отформатированное согласно
\fBprintf\fP(3). Вывод завершается символом новой строки.
.PP
Функции \fBerr\fP(), \fBverr\fP(), \fBwarn\fP() и \fBvwarn\fP() добавляют сообщение об
ошибке, полученное от \fBstrerror\fP(3) для значения глобальной переменной
\fIerrno\fP, начиная его с двоеточия и пробела, если значение \fIfmt\fP равно
NULL.
.PP
Функции \fBerrx\fP() и \fBwarnx\fP() не добавляют сообщение об ошибке.
.PP
Функции \fBerr\fP(), \fBverr\fP(), \fBerrx\fP() и \fBverrx\fP() не возвращают управление
в программу, а завершают её с кодом выхода, равным значению \fIeval\fP.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lbw17 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBerr\fP(),
\fBerrx\fP(),
.br
\fBwarn\fP(),
\fBwarnx\fP(),
.br
\fBverr\fP(),
\fBverrx\fP(),
.br
\fBvwarn\fP(),
\fBvwarnx\fP()
T}	Безвредность в нитях	MT\-Safe locale
.TE
.sp 1
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.\" .SH HISTORY
.\" The
.\" .BR err ()
.\" and
.\" .BR warn ()
.\" functions first appeared in
.\" 4.4BSD.
Эти функции являются расширениями BSD.
.SH ПРИМЕР
Показать строку с информацией о текущем \fIerrno\fP и закончить работу:
.PP
.in +4n
.EX
p = malloc(size);
if (p == NULL)
    err(1, NULL);
fd = open(file_name, O_RDONLY, 0);
if (fd == \-1)
    err(1, "%s", file_name);
.EE
.in
.PP
Показать сообщение об ошибке и закончить работу:
.PP
.in +4n
.EX
if (tm.tm_hour < START_TIME)
    errx(1, "слишком рано, ждём до %s", start_time_string);
.EE
.in
.PP
Предупреждение об ошибке:
.PP
.in +4n
.EX
fd = open(raw_device, O_RDONLY, 0);
if (fd == \-1)
    warnx("%s: %s: пробуем блочное устройство",
            raw_device, strerror(errno));
fd = open(block_device, O_RDONLY, 0);
if (fd == \-1)
    err(1, "%s", block_device);
.EE
.in
.SH "СМОТРИТЕ ТАКЖЕ"
\fBerror\fP(3), \fBexit\fP(3), \fBperror\fP(3), \fBprintf\fP(3), \fBstrerror\fP(3)
