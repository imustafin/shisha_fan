.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 1993 Mitchum DSouza <m.dsouza@mrc-apu.cam.ac.uk>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified, jmv@lucifer.dorms.spbu.ru, 1999-11-08
.\" Modified, aeb, 2000-04-07
.\" Updated from glibc docs, C. Scott Ananian, 2001-08-25
.\" Modified, aeb, 2001-08-31
.\" Modified, wharms 2001-11-12, remark on white space and example
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH STRPTIME 3 2017\-09\-15 GNU "Руководство программиста Linux"
.SH ИМЯ
strptime \- преобразование строкового представления времени в структуру
времени tm
.SH ОБЗОР
\fB#define _XOPEN_SOURCE\fP /* См. feature_test_macros(7) */
.br
\fB#include <time.h>\fP
.PP
\fBchar *strptime(const char *\fP\fIs\fP\fB, const char *\fP\fIformat\fP\fB,\fP \fBstruct tm
*\fP\fItm\fP\fB);\fP
.SH ОПИСАНИЕ
Функция \fBstrptime\fP() является конвертирующей функцией, дополняющей
\fBstrftime\fP(3): она преобразует символьную строку, на которую указывает
\fIs\fP, сохраняя значения в структуре \fItm\fP (описывает время в виде компонент,
broken\-down time) согласно формата, заданного в \fIformat\fP.
.PP
структура времени \fItm\fP в виде компонент определена в \fI<time.h>\fP:
.PP
.in +4n
.EX
struct tm {
    int tm_sec;    /* секунды (0\-60) */
    int tm_min;    /* минуты (0\-59) */
    int tm_hour;   /* часы (0\-23) */
    int tm_mday;   /* день месяца (1\-31) */
    int tm_mon;    /* месяц (0\-11) */
    int tm_year;   /* год \- 1900 */
    int tm_wday;   /* день недели (0\-6, воскресенье = 0) */
    int tm_yday;   /* день года (0\-365, 1 января = 0) */
    int tm_isdst;  /* летнее время */
};
.EE
.in
.PP
Дополнительную информацию о структуре \fItm\fP смотрите в \fBctime\fP(3).
.PP
Аргумент \fIformat\fP является символьной строкой, состоящей из описателей поля
и текстовых символов, напоминающей \fBscanf\fP(3). Каждый описатель поля
состоит из символа \fB%\fP с последующим символом, который указывает на замену
описателя поля. Остальные символы в строке \fIformat\fP должны совпадать со
строкой входных данных. Исключениями являются пробелы, которые совпадают с
любым количеством пробелов в строке входных данных. Между любыми двумя
описателями полей должно быть пустое место (пробелы) или другие
алфавитно\-цифровые символы.
.PP
Функция \fBstrptime\fP() обрабатывает строку ввода слева направо. Каждый из
трёх возможных входных элементов (пробел, буква или форматирующие символы)
обрабатываются один за другим. Если ввод не соответствует строке
форматирования, то функция прекращает работу. Оставшиеся части формата и
данных не обрабатываются.
.PP
Ниже приведён список поддерживаемых описателей полей. В случае поиска
текстовой строки (например, день недели или месяц), сравнение происходит вне
зависимости от регистра символов. В случае с цифрами допустимы начальные
нули.
.TP 
\fB%%\fP
Символ \fB%\fP.
.TP 
\fB%a\fP или \fB%A\fP
Название дня недели согласно текущей локали, в форме аббревиатуры или
полного имени.
.TP 
\fB%b\fP, \fB%B\fP или \fB%h\fP
Название месяца согласно текущей локали, в форме аббревиатуры или полного
имени.
.TP 
\fB%c\fP
Дата и время, отображенные согласно текущей локали.
.TP 
\fB%C\fP
Номер столетия (0\(en99).
.TP 
\fB%d\fP или \fB%e\fP
День месяца (1\(en31).
.TP 
\fB%D\fP
Эквивалент \fB%m/%d/%y\fP (американское представление даты, которое может
запутать не американцев, особенно с учетом того, что \fB%d/%m/%y\fP широко
используется в Европе. Форматом ISO 8601 является \fB%Y\-%m\-%d\fP).
.TP 
\fB%H\fP
Час (0\(en23).
.TP 
\fB%I\fP
Час на 2\-часовом циферблате (1\(en12).
.TP 
\fB%j\fP
Номер дня в году (1\(en366).
.TP 
\fB%m\fP
Номер месяца (1\(en12).
.TP 
\fB%M\fP
Минута (0\(en59).
.TP 
\fB%n\fP
Обязательный пробел.
.TP 
\fB%p\fP
Локализованный эквивалент AM или PM (примечание: его может не быть).
.TP 
\fB%r\fP
Время по 12\-ти часовым часам (используя AM или PM локали). В локали POSIX
это эквивалентно \fB%I:%M:%S %p\fP. Если \fIt_fmt_ampm\fP пусто в поле \fBLC_TIME\fP
текущей локали, то поведение не определено.
.TP 
\fB%R\fP
Эквивалент \fB%H:%M\fP.
.TP 
\fB%S\fP
Секунда (0\(en60; 60 может появляться для високосных секунд;  ранее также
допускалось появление 61).
.TP 
\fB%t\fP
Обязательный пробел.
.TP 
\fB%T\fP
Эквивалент \fB%H:%M:%S\fP.
.TP 
\fB%U\fP
Номер недели в году, начинающейся с воскресенья ((0\(en53). Первое
воскресенье января является первым днем недели 1.
.TP 
\fB%w\fP
Порядковый номер дня недели (0\(en6), воскресенье = 0.
.TP 
\fB%W\fP
Номер недели в году, начинающейся с понедельника (0\(en53). Первый
понедельник января является первым днем недели 1.
.TP 
\fB%x\fP
Дата в локализованном формате представления.
.TP 
\fB%X\fP
Время в локализованном формате представления.
.TP 
\fB%y\fP
Год века (0\(en99). Если век никак не указывается, то года 69\(en99
относятся к двадцатому веку (1969\(en1999), а года в диапазоне 00\(en68
относятся к двадцать первому веку (2000\(en2068).
.TP 
\fB%Y\fP
Год, включая столетие (например, 1991).
.PP
Некоторые описатели полей могут быть изменены модификаторами E или O,
указывающими, что нужно использовать альтернативный формат или
спецификацию. Если альтернативный формат или спецификация не существует в
текущей локали, то используются неизменённые описатели полей.
.PP
Модификатор E указывает на то, что строка ввода может содержать
альтернативные локале\-зависимые версии представления даты и времени:
.TP 
\fB%Ec\fP
Альтернативный формат представления даты и времени в текущей локали.
.TP 
\fB%EC\fP
Альтернативный формат представления базового года в зависимости от текущей
локали.
.TP 
\fB%Ex\fP
Альтернативный формат представления даты в зависимости от текущей локали.
.TP 
\fB%EX\fP
Альтернативный формат представления времени в зависимости от текущей локали.
.TP 
\fB%Ey\fP
Альтернативный формат представления смещения от \fB%EC\fP в зависимости от
текущей локали.
.TP 
\fB%EY\fP
Альтернативный формат полного представления года.
.PP
Модификатор O указывает, что числовой ввод может производиться в
альтернативном формате в зависимости от текущей локали:
.TP 
\fB%Od\fP или \fB%Oe\fP
Число месяца с использованием альтернативных чисел локали; предшествующие
нули можно ставить, но это необязательно.
.TP 
\fB%OH\fP
Часы (0\-24) с использованием альтернативных чисел локали.
.TP 
\fB%OI\fP
Часы (1\-12) с использованием альтернативных чисел локали.
.TP 
\fB%Om\fP
Месяц с использованием альтернативных чисел локали.
.TP 
\fB%OM\fP
Минуты с использованием альтернативных чисел локали.
.TP 
\fB%OS\fP
Секунды с использованием альтернативных чисел локали.
.TP 
\fB%OU\fP
Номер недели в году (воскресенье — первый день недели) с использованием
альтернативных чисел локали.
.TP 
\fB%Ow\fP
Обычный номер дня недели (воскресенье — нулевой день недели)
с использованием альтернативных чисел локали.
.TP 
\fB%OW\fP
Номер недели в году (понедельник — первый день недели) с использованием
альтернативных чисел локали.
.TP 
\fB%Oy\fP
Год (смещение от \fB%C\fP) с использованием альтернативных чисел локали.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Возвращаемым значением функции является указатель на первый символ, не
обработанный вызовом. В случае, когда строка ввода содержит больше символов,
чем требуется для строки формата, возвращаемое значение будет указателем на
место за последним обработанным символом. В случае, когда вся строка ввода
обработана, возвращается указатель на завершающий символ строки null. Если
\fBstrptime\fP() не может найти все соответствия строке формата, то возникает
ошибка и возвращается значение NULL.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lb lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBstrptime\fP()
T}	Безвредность в нитях	MT\-Safe env locale
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
POSIX.1\-2001, POSIX.1\-2008, SUSv2.
.SH ЗАМЕЧАНИЯ
.PP
.\" .PP
.\" This function is available since libc 4.6.8.
.\" Linux libc4 and libc5 includes define the prototype unconditionally;
.\" glibc2 includes provide a prototype only when
.\" .B _XOPEN_SOURCE
.\" or
.\" .B _GNU_SOURCE
.\" are defined.
.\" .PP
.\" Before libc 5.4.13 whitespace
.\" (and the \(aqn\(aq and \(aqt\(aq specifications) was not handled,
.\" no \(aqE\(aq and \(aqO\(aq locale modifier characters were accepted,
.\" and the \(aqC\(aq specification was a synonym for the \(aqc\(aq specification.
В принципе, эта функция не инициализирует \fItm\fP, а только сохраняет
указанные значения. Это означает, что \fItm\fP должна быть инициализирована до
этого вызова. Существует небольшая разница между системами UNIX. Функция из
glibc не не изменяет поля, которые не описаны явно, за исключением
пересчитываемых полей \fItm_wday\fP и \fItm_yday\fP, если изменился один из
элементов: день, месяц или год.
.PP
.\" in the 20th century by libc4 and libc5.
.\" It is taken to be a year
.\" In libc4 and libc5 the code for %I is broken (fixed in glibc;
.\" %OI was fixed in glibc 2.2.4).
В glibc 2.0 спецификатор «y» (год столетия) указывает на год в диапазоне
1950\(en2049. Начиная с glibc 2.1 этот диапазон равен 1969\(en2068.
.SS "Замечания по glibc"
Для симметрии glibc пытается поддерживать в \fBstrptime\fP() тот же формат
символов что и в \fBstrftime\fP(3) (в большинстве случаев, соответствующие поля
анализируются, но поле в \fItm\fP не изменяется). В результате:
.TP 
\fB%F\fP
Эквивалентно \fB%Y\-%m\-%d\fP в формате ISO 8601.
.TP 
\fB%g\fP
Год, соответствующий номеру недели по ISO, но без номера века (0\(en99).
.TP 
\fB%G\fP
Год, соответствующий номеру недели по ISO (например, 1991).
.TP 
\fB%u\fP
День недели в цифровом формате (1\(en7, где понедельник — 1).
.TP 
\fB%V\fP
Номер недели в виде числа (1\(en53) по стандарту ISO 8601:1988 Если неделя
(начинающаяся с понедельника) содержит 1 января и имеет 4 или более дней в
новом году, то это первая неделя. Иначе это последняя неделя предыдущего
года, а следующая неделя первая.
.TP 
\fB%z\fP
Часовой пояс согласно спецификациям стандарта RFC\-822/ISO 8601.
.TP 
\fB%Z\fP
Название часового пояса.
.PP
Аналогично, учитывая расширения GNU для \fBstrftime\fP(3), \fB%k\fP принято
считать синонимом \fB%H\fP, а \fB%l\fP — синонимом для \fB%I\fP, и \fB%P\fP синонимом
\fB%p\fP. И
.TP 
\fB%s\fP
Количество секунд с начала эпохи, с 1970\-01\-01 00:00:00 +0000 (UTC). Если
нет поддержки для високосных секунд, то они не учитываются.
.PP
В реализации glibc не требуется пустого места (пробелов) между двумя
описателями полей.
.SH ПРИМЕР
Следующий пример демонстрирует использование \fBstrptime\fP() и \fBstrftime\fP(3).
.PP
.EX
#define _XOPEN_SOURCE
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

int
main(void)
{
    struct tm tm;
    char buf[255];

    memset(&tm, 0, sizeof(struct tm));
    strptime("2001\-11\-12 18:31:01", "%Y\-%m\-%d %H:%M:%S", &tm);
    strftime(buf, sizeof(buf), "%d %b %Y %H:%M", &tm);
    puts(buf);
    exit(EXIT_SUCCESS);
}
.EE
.SH "СМОТРИТЕ ТАКЖЕ"
\fBtime\fP(2), \fBgetdate\fP(3), \fBscanf\fP(3), \fBsetlocale\fP(3), \fBstrftime\fP(3)
