.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SINCOS 3 2017\-09\-15 GNU "Руководство программиста Linux"
.SH ИМЯ
sincos, sincosf, sincosl \- одновременное вычисление синуса и косинуса
.SH ОБЗОР
.nf
\fB#define _GNU_SOURCE\fP         /* см. feature_test_macros(7) */
\fB#include <math.h>\fP
.PP
\fBvoid sincos(double \fP\fIx\fP\fB, double *\fP\fIsin\fP\fB, double *\fP\fIcos\fP\fB);\fP
\fBvoid sincosf(float \fP\fIx\fP\fB, float *\fP\fIsin\fP\fB, float *\fP\fIcos\fP\fB);\fP
\fBvoid sincosl(long double \fP\fIx\fP\fB, long double *\fP\fIsin\fP\fB, long double *\fP\fIcos\fP\fB);\fP
.fi
.PP
Компонуется при указании параметра \fI\-lm\fP.
.SH ОПИСАНИЕ
Некоторым приложениям необходимы значения синуса и косинуса одного и того же
угла \fIx\fP. Эти функции вычисляют одновременно оба значения и сохраняют
результаты в \fI*sin\fP и \fI*cos\fP. Использование этой функции может быть более
эффективно, чем два отдельных вызова \fBsin\fP(3) и \fBcos\fP(3).
.PP
Если \fIx\fP имеет значение NaN, будет возвращено NaN для \fI*sin\fP и \fI*cos\fP.
.PP
Если \fIx\fP стремится к плюс бесконечности или минус бесконечности, то будет
сгенерирована ошибка выхода за пределы области, а в качестве результата в
\fI*sin\fP and \fI*cos\fP будет возвращено NaN.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Эти функции возвращают \fIvoid\fP.
.SH ОШИБКИ
Смотрите \fBmath_error\fP(7), чтобы определить, какие ошибки могут возникать
при вызове этих функций.
.PP
Могут возникать следующие ошибки:
.TP 
Ошибка области: \fIx\fP стремится к бесконечности
.\" .I errno
.\" is set to
.\" .BR EDOM .
Возникает исключение неправильной плавающей точки (\fBFE_INVALID\fP).
.PP
.\" FIXME . Is it intentional that these functions do not set errno?
.\" sin() and cos() also don't set errno; bugs have been raised for
.\" those functions.
.\" See https://www.sourceware.org/bugzilla/show_bug.cgi?id=15467
Эти функции не изменяют \fIerrno\fP.
.SH ВЕРСИИ
Эти функции впервые появились в glibc 2.1.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lbw30 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBsincos\fP(),
\fBsincosf\fP(),
\fBsincosl\fP()
T}	Безвредность в нитях	MT\-Safe
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
Эти функции являются расширениями GNU.
.SH ЗАМЕЧАНИЯ
Чтобы увидеть выгоду \fBsincos\fP() может потребоваться отключить встроенные
оптимизации \fBgcc\fP(1) с помощью следующих флагов:
.PP
.in +4n
.EX
cc \-O \-lm \-fno\-builtin prog.c
.EE
.in
.SH "СМОТРИТЕ ТАКЖЕ"
\fBcos\fP(3), \fBsin\fP(3), \fBtan\fP(3)
