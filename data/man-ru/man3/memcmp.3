.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:55:27 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MEMCMP 3 2017\-09\-15 "" "Руководство программиста Linux"
.SH ИМЯ
memcmp — сравнить области памяти
.SH ОБЗОР
.nf
\fB#include <string.h>\fP
.PP
\fBint memcmp(const void *\fP\fIs1\fP\fB, const void *\fP\fIs2\fP\fB, size_t \fP\fIn\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
Функция \fBmemcmp\fP() сравнивает первые \fIn\fP байт (каждый как \fIunsigned
char\fP) из областей памяти \fIs1\fP и \fIs2\fP.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Функция \fBmemcmp\fP() возвращает целое число меньше, равное, или выше нуля
если первые \fIn\fP байт из \fIs1\fP соответственно меньше, равны, или больше чем
первые \fIn\fP байт из \fIs2\fP.
.PP
Для возвращаемого значения, отличного от нуля, его знак определяется знаком
разности первой пары байтов (которые \fIunsigned char\fP) в \fIs1\fP и \fIs2\fP.
.PP
Если \fIn\fP равно нулю, возвращаемое значение тоже ноль.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lb lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBmemcmp\fP()
T}	Безвредность в нитях	MT\-Safe
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
POSIX.1\-2001, POSIX.1\-2008, C89, C99, SVr4, 4.3BSD.
.SH ЗАМЕЧАНИЯ
.PP
Не используйте \fBmemcmp\fP() для сравнения важных с точки зрения безопасности
данных, как например криптографические секреты, потому что для этой функции
требуемое время CPU зависит от числа одинаковых байтов. Используйте функции,
производящие сравнение за constant time. (Например в NetBSD функция
\fBconsttime_memequal\fP()). В POSIX подобная функция не предусмотрена.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBbcmp\fP(3), \fBbstring\fP(3), \fBstrcasecmp\fP(3), \fBstrcmp\fP(3), \fBstrcoll\fP(3),
\fBstrncasecmp\fP(3), \fBstrncmp\fP(3), \fBwmemcmp\fP(3)
