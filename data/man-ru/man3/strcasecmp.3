.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:12:45 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH STRCASECMP 3 2017\-09\-15 "" "Руководство программиста Linux"
.SH ИМЯ
strcasecmp, strncasecmp \- сравнение двух строк без учёта регистра
.SH ОБЗОР
.nf
\fB#include <strings.h>\fP
.PP
\fBint strcasecmp(const char *\fP\fIs1\fP\fB, const char *\fP\fIs2\fP\fB);\fP
.PP
\fBint strncasecmp(const char *\fP\fIs1\fP\fB, const char *\fP\fIs2\fP\fB, size_t \fP\fIn\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
Функция \fBstrcasecmp\fP() выполняет побайтовое сравнение строк \fIs1\fP и \fIs2\fP,
игнорируя регистр символов. Она возвращает целое число, которое меньше,
равно или больше нуля, если выяснится, что \fIs1\fP меньше, равна или больше
\fIs2\fP соответственно.
.PP
Функция \fBstrncasecmp\fP() работает аналогичным образом, но сравниваются не
более \fIn\fP байт строк \fIs1\fP и \fIs2\fP.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Функции \fBstrcasecmp\fP() и \fBstrncasecmp\fP() возвращают целое число, которое
меньше, больше нуля или равно ему, если \fIs1\fP, без учёта регистра,
соответственно меньше, больше или равна \fIs2\fP.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lbw27 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBstrcasecmp\fP(),
\fBstrncasecmp\fP()
T}	Безвредность в нитях	MT\-Safe locale
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
4.4BSD, POSIX.1\-2001, POSIX.1\-2008.
.SH ЗАМЕЧАНИЯ
Впервые, функции \fBstrcasecmp\fP() и \fBstrncasecmp\fP() появились в 4.4BSD, где
они объявлялись в \fI<string.h>\fP. Из\-за этого, по причине
исторической совместимости, в заголовочном файле glibc \fI<string.h>\fP
также объявлены эти функции, если определён макрос тестирования свойств
\fB_DEFAULT_SOURCE\fP (или, в glibc 2.19 и старее, \fB_BSD_SOURCE\fP).
.PP
В стандарте POSIX.1\-2008 об этих функциях сказано:
.PP
.RS
Если используется категория локали \fBLC_CTYPE\fP из локали POSIX, то эти
функции должны работать как если бы строки были преобразованы к нижнему
регистру и проводилось побайтовое сравнение. В противном случае результаты
не определёны.
.RE
.SH "СМОТРИТЕ ТАКЖЕ"
\fBbcmp\fP(3), \fBmemcmp\fP(3), \fBstrcmp\fP(3), \fBstrcoll\fP(3), \fBstring\fP(3),
\fBstrncmp\fP(3), \fBwcscasecmp\fP(3), \fBwcsncasecmp\fP(3)
