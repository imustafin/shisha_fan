.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-10 Walter Harms
.\"	(walter.harms@informatik.uni-oldenburg.de)
.\" Modified 2003-11-18, 2004-10-05 aeb
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH REMAINDER 3 2017\-09\-15 "" "Руководство программиста Linux"
.SH ИМЯ
drem, dremf, dreml, remainder, remainderf, remainderl \- функция получения
остатка от деления числа с плавающей запятой
.SH ОБЗОР
.nf
\fB#include <math.h>\fP
.PP
/* Версии C99 */
\fBdouble remainder(double \fP\fIx\fP\fB, double \fP\fIy\fP\fB);\fP
\fBfloat remainderf(float \fP\fIx\fP\fB, float \fP\fIy\fP\fB);\fP
\fBlong double remainderl(long double \fP\fIx\fP\fB, long double \fP\fIy\fP\fB);\fP
.PP
/* Устаревшие синонимы */
\fBdouble drem(double \fP\fIx\fP\fB, double \fP\fIy\fP\fB);\fP
\fBfloat dremf(float \fP\fIx\fP\fB, float \fP\fIy\fP\fB);\fP
\fBlong double dreml(long double \fP\fIx\fP\fB, long double \fP\fIy\fP\fB);\fP
.PP
.fi
Компонуется при указании параметра \fI\-lm\fP.
.PP
.in -4n
Требования макроса тестирования свойств для glibc
(см. \fBfeature_test_macros\fP(7)):
.in
.PP
.ad l
\fBremainder\fP():
.RS 4
.\"    || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
_ISOC99_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L
    || _XOPEN_SOURCE\ >=\ 500
    || /* начиная с glibc 2.19: */ _DEFAULT_SOURCE
    || /* версии glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.RE
.br
\fBremainderf\fP(), \fBremainderl\fP():
.RS 4
_ISOC99_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L
    || /* начиная с glibc 2.19: */ _DEFAULT_SOURCE
    || /* версии glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.RE
.br
\fBdrem\fP(), \fBdremf\fP(), \fBdreml\fP():
.RS 4
/* начиная с glibc 2.19: */ _DEFAULT_SOURCE
    || /* версии glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.RE
.ad b
.SH ОПИСАНИЕ
Данные функции вычисляют остаток от деления \fIx\fP на \fIy\fP. Возвращаемое
значение равно \fIx\fP\-\fIn\fP*\fIy\fP, где \fIn\fP равно значению \fIx\ /\ y\fP,
округлённому до ближайшего целого. Если абсолютное значение \fIx\fP\-\fIn\fP*\fIy\fP
равно 0.5, то \fIn\fP выбирается целым.
.PP
Эти функции не подвержены действующему режиму округления (смотрите
\fBfenv\fP(3)).
.PP
Функция \fBdrem\fP() выполняет тоже самое.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении данные функции возвращают остаток \fIx\fP\-\fIn\fP*\fIy\fP в
виде значения с плавающей запятой. Если возвращаемое значение равно 0, то
оно имеет знак \fIx\fP.
.PP
Если значение \fIx\fP или \fIy\fP равно NaN, будет возвращено NaN.
.PP
Если \fIx\fP стремится к бесконечности и \fIy\fP не равно NaN, то будет
сгенерирована ошибка выхода за пределы области, а в качестве результата
будет возвращено NaN.
.PP
.\" FIXME . Instead, glibc gives a domain error even if x is a NaN
.\" Interestingly, remquo(3) does not have the same problem.
Если \fIy\fP равно 0 и \fIx\fP не равно NaN, то будет сгенерирована ошибка выхода
за пределы области, а в качестве результата будет возвращено NaN.
.SH ОШИБКИ
Смотрите \fBmath_error\fP(7), чтобы определить возникшую ошибку при вызове этих
функций.
.PP
Могут возникать следующие ошибки:
.TP 
Ошибка области: \fIx\fP стремится к бесконечности, а \fIy\fP не равно NaN
\fIerrno\fP устанавливается в \fBEDOM\fP (но см. ДЕФЕКТЫ). Возникает исключение
неправильной плавающей точки (\fBFE_INVALID\fP).
.IP
В этом случае функции не изменяют \fIerrno\fP.
.TP 
.\" [XXX see bug above] and \fIx\fP is not a NaN
Ошибка области: \fIy\fP равно 0
Значение \fIerrno\fP устанавливается в \fBEDOM\fP. Возникает исключение
неправильной плавающей точки (\fBFE_INVALID\fP).
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lbw26 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBdrem\fP(),
\fBdremf\fP(),
\fBdreml\fP(),
.br
\fBremainder\fP(),
\fBremainderf\fP(),
.br
\fBremainderl\fP()
T}	Безвредность в нитях	MT\-Safe
.TE
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.\" IEC 60559.
Функции \fBremainder\fP(), \fBremainderf\fP() и \fBremainderl\fP() определены в C99 и
POSIX.1\-2001 и POSIX.1\-2008.
.PP
Функция \fBdrem\fP() появилась из 4.3BSD. Варианты функций \fBdremf\fP() и
\fBdreml\fP() с типами \fIfloat\fP и \fIlong double\fP есть в некоторых системах,
таких как Tru64 и glibc2. Не используйте эти функции вместо \fBremainder\fP() и
ей подобным.
.SH ДЕФЕКТЫ
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6779
До glibc 2.15 вызов
.PP
    remainder(nan(""), 0);
.PP
возвращал NaN, как и ожидается, но некорректно приводит к ошибке области;
Начиная с glibc 2.15, просто возвращается NaN (т. е., без ошибки области).
.PP
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6783
До glibc 2.15, \fIerrno\fP не присваивалось \fBEDOM\fP пр ошибке области,
возникающей когда \fIx\fP — бесконечность, а \fIy\fP не равно NaN.
.SH ПРИМЕР
Вызов «remainder(29.0, 3.0)» возвращает \-1.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBdiv\fP(3), \fBfmod\fP(3), \fBremquo\fP(3)
