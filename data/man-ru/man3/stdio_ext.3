.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH STDIO_EXT 3 2015\-03\-02 "" "Руководство программиста Linux"
.SH ИМЯ
__fbufsize, __flbf, __fpending, __fpurge, __freadable, __freading,
__fsetlocking, __fwritable, __fwriting, _flushlbf \- интерфейс к структуре
stdio FILE
.SH ОБЗОР
.nf
\fB#include <stdio.h>\fP
\fB#include <stdio_ext.h>\fP
.PP
\fBsize_t __fbufsize(FILE *\fP\fIstream\fP\fB);\fP
\fBsize_t __fpending(FILE *\fP\fIstream\fP\fB);\fP
\fBint __flbf(FILE *\fP\fIstream\fP\fB);\fP
\fBint __freadable(FILE *\fP\fIstream\fP\fB);\fP
\fBint __fwritable(FILE *\fP\fIstream\fP\fB);\fP
\fBint __freading(FILE *\fP\fIstream\fP\fB);\fP
\fBint __fwriting(FILE *\fP\fIstream\fP\fB);\fP
\fBint __fsetlocking(FILE *\fP\fIstream\fP\fB, int \fP\fItype\fP\fB);\fP
\fBvoid _flushlbf(void);\fP
\fBvoid __fpurge(FILE *\fP\fIstream\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
В Solaris были представлены процедуры, представляющие переносимый способ
доступа к внутренностям структуры \fIFILE\fP, в glibc они также реализованы.
.PP
Функция \fB__fbufsize\fP() возвращает размер буфера, использующегося в данным
момент указанным потоком.
.PP
Функция \fB__fpending\fP() возвращает количество байт в буфере вывода. В
потоках с широкими символами единицей является широкий символ. Эта функция
не определена для буферов, находящихся в процессе чтения, или открытых в
режиме только для чтения.
.PP
Функция \fB__flbf\fP() возвращает ненулевое значение, если поток буферизируется
построчно, и ноль в противном случае.
.PP
Функция \fB__freadable\fP() возвращает ненулевое значение, если поток доступен
для чтения, и ноль в противном случае.
.PP
Функция \fB__fwritable\fP() возвращает ненулевое значение, если поток доступен
для записи, и ноль в противном случае.
.PP
Функция \fB__freading\fP() возвращает ненулевое значение, если поток доступен
только для чтения, или если последняя операция с потоком была операцией
чтения, и ноль в противном случае.
.PP
Функция \fB__fwriting\fP() возвращает ненулевое значение, если поток доступен
только для записи (или открыт только для добавления), или если последняя
операция с потоком была операцией записи, и ноль в противном случае.
.PP
Функция \fB__fsetlocking\fP() может быть использована для выбора желаемого типа
блокировки потока. Она возвращает текущий тип. В аргументе \fItype\fP может
быть указано одно из трёх значений:
.TP 
\fBFSETLOCKING_INTERNAL\fP
Выполнять неявную блокировку при каждой операции с заданным потоком (за
исключением *_unlocked). Действует по умолчанию.
.TP 
\fBFSETLOCKING_BYCALLER\fP
Вызывающий сам выполняет блокировку (возможно, с помощью \fBflockfile\fP(3),
если есть несколько нитей), и процедуры stdio не выполняют блокировки до тех
пор, пока состояние не сбросится в \fBFSETLOCKING_INTERNAL\fP.
.TP 
\fBFSETLOCKING_QUERY\fP
Не изменять тип блокировки (только вернуть текущий).
.PP
Функция \fB_flushlbf\fP() сбрасывает (flushes) все буферизируемые построчно
потоки (например для того, чтобы вывести всё на терминал перед чтением ввода
с клавиатуры).
.PP
Функция \fB__fpurge\fP()  удаляет содержимое поточного буфера.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lbw28 lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fB__fbufsize\fP(),
\fB__fpending\fP(),
.br
\fB__fpurge\fP(),
\fB__fsetlocking\fP()
T}	Безвредность в нитях	MT\-Safe race:stream
T{
\fB__flbf\fP(),
\fB__freadable\fP(),
.br
\fB__freading\fP(),
\fB__fwritable\fP(),
.br
\fB__fwriting\fP(),
\fB_flushlbf\fP()
T}	Безвредность в нитях	MT\-Safe
.TE
.SH "СМОТРИТЕ ТАКЖЕ"
\fBflockfile\fP(3), \fBfpurge\fP(3)
