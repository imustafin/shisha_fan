.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   OpenGroup's Single UNIX specification
.\"     http://www.UNIX-systems.org/online.html
.\"
.\" 2007-03-31 Bruno Haible, Describe the glibc/libiconv //TRANSLIT
.\" and //IGNORE extensions for 'tocode'.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ICONV_OPEN 3 2017\-09\-15 GNU "Руководство программиста Linux"
.SH ИМЯ
iconv_open \- создаёт дескриптор преобразования кодировки набора символов
.SH ОБЗОР
.nf
\fB#include <iconv.h>\fP
.PP
\fBiconv_t iconv_open(const char *\fP\fItocode\fP\fB, const char *\fP\fIfromcode\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
Функция \fBiconv_open\fP() создаёт дескриптор, предназначенный для
преобразования последовательности байтов с кодировкой \fIfromcode\fP в
кодировку \fItocode\fP.
.PP
Значения, допустимые для кодировок \fIfromcode\fP и \fItocode\fP, и поддерживаемые
комбинации, зависят от операционной системы. Для библиотеки GNU C
разрешённые значения выводятся по команде \fIiconv \-\-list\fP, а также
поддерживаются все комбинации перечисленных значений. Кроме этого,
библиотеки GNU C и GNU libiconv поддерживают два следующих суффикса:
.TP 
//TRANSLIT
Если к \fItocode\fP добавлена строка «//TRANSLIT», то включается
транслитерация. Это означает, что когда символ не может быть представлен в
целевом наборе символов, то он аппроксимируется одним или несколькими
похожими символами.
.TP 
//IGNORE
Если к \fItocode\fP добавлена строка «//IGNORE», то символы, которые не могут
быть представлены в целевом наборе символов, будут просто отбрасываться.
.PP
Полученный дескриптор преобразования может использоваться функцией
\fBiconv\fP(3) любое количество раз. Он остается неизменным до тех пор, пока не
будет освобождён функцией \fBiconv_close\fP(3).
.PP
Дескриптор преобразования содержит состояние перекодировки После создания с
помощью функции \fBiconv_open\fP(), состояние равно начальному
значению. Использование \fBiconv\fP(3) меняет состояние преобразования. Чтобы
вернуть состояние в начальное значение, необходимо использовать функцию
\fBiconv\fP(3) с параметром \fIinbuf\fP, равным NULL.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении функция \fBiconv_open\fP() возвращает созданный
дескриптор преобразования. В случае ошибки меняется значение переменной
\fIerrno\fP и возвращается \fI(iconv_t)\ \-1\fP.
.SH ОШИБКИ
Среди прочих, может возникнуть следующая ошибка:
.TP 
\fBEINVAL\fP
Преобразование из кодировки \fIfromcode\fP в \fItocode\fP не поддерживается в
данной реализации.
.SH ВЕРСИИ
Эта функция доступна в glibc начиная с версии 2.1.
.SH АТРИБУТЫ
Описание терминов данного раздела смотрите в \fBattributes\fP(7).
.TS
allbox;
lb lb lb
l l l.
Интерфейс	Атрибут	Значение
T{
\fBiconv_open\fP()
T}	Безвредность в нитях	MT\-Safe locale
.TE
.sp 1
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
POSIX.1\-2001, POSIX.1\-2008, SUSv2.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBiconv\fP(1), \fBiconv\fP(3), \fBiconv_close\fP(3)
