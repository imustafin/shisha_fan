.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 2002 Andries Brouwer <aeb@cwi.nl>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH INTRO 1 2015\-07\-23 Linux "Руководство пользователя Linux"
.SH ИМЯ
intro \- введение в пользовательские команды
.SH ОПИСАНИЕ
В разделе 1 справочного руководства описываются пользовательские команды и
инструменты, например, программы управления файлами, командные оболочки,
компиляторы, веб\-браузеры, программы просмотра и редактирования файлов и
изображений и т.п.
.SH ЗАМЕЧАНИЯ
Linux является одной из разновидностей UNIX, и в первом приближении, все
пользовательские команды для UNIX точно также работают в Linux (а также во
FreeBSD и в большом количестве других UNIX\-подобных систем).
.PP
В Linux существуют графические интерфейсы пользователя (GUI), где вы можете
выполнить необходимую работу простым указанием и перетаскиванием без
предварительного прочтения большого объёма документации. Но традиционное
окружение UNIX — это интерфейс командной строки (CLI), где вы вводите
команды, чтобы сказать компьютеру о том, что нужно сделать. Такой подход
является более быстрым и обеспечивает больше возможностей, но требует знания
команд. Ниже даётся минимум, который поможет сделать первые шаги.
.SS Login
Чтобы начать работу, вы должны сперва открыть сеанс, указав имя пользователя
и пароль. Программа \fIlogin\fP запускает для вас оболочку (\fIshell\fP, командный
интерпретатор). В случае, если процедура входа происходит в графическом
режиме, вы увидите экран с меню и значками, и с помощью мыши сможете
запустить командный интерпретатор в окне. Смотрите также \fBxterm\fP(1).
.SS "Командный интерпретатор"
Здесь можно вводить команды для \fIshell\fP (оболочки) — командного
интерпретатора. Он не является каким\-то встроенным средством — это просто
программа, и вы можете её изменить. Каждый имеет свой любимый командный
интерпретатор. Стандартное имя — \fIsh\fP. Смотрите также \fBash\fP(1),
\fBbash\fP(1), \fBchsh\fP(1), \fBcsh\fP(1), \fBdash\fP(1), \fBksh\fP(1), \fBzsh\fP(1).
.PP
Сеанс может выглядеть как:
.PP
.in +4n
.EX
knuth login: \fBaeb\fP
Password: \fB********\fP
$ \fBdate\fP
Tue Aug  6 23:50:44 CEST 2002
$ \fBcal\fP
     August 2002
Su Mo Tu We Th Fr Sa
             1  2  3
 4  5  6  7  8  9 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30 31

$ \fBls\fP
bin  tel
$ \fBls \-l\fP
total 2
drwxrwxr\-x   2 aeb       1024 Aug  6 23:51 bin
\-rw\-rw\-r\-\-   1 aeb         37 Aug  6 23:52 tel
$ \fBcat tel\fP
maja    0501\-1136285
peter   0136\-7399214
$ \fBcp tel tel2\fP
$ \fBls \-l\fP
total 3
drwxr\-xr\-x   2 aeb       1024 Aug  6 23:51 bin
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:52 tel
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:53 tel2
$ \fBmv tel tel1\fP
$ \fBls \-l\fP
total 3
drwxr\-xr\-x   2 aeb       1024 Aug  6 23:51 bin
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:52 tel1
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:53 tel2
$ \fBdiff tel1 tel2\fP
$ \fBrm tel1\fP
$ \fBgrep maja tel2\fP
maja    0501\-1136285
$
.EE
.in
.PP
Здесь для завершения сеанса нажали Control\-D.
.PP
Символ \fB$\fP здесь является приглашением к вводу команды — таким способ
интерпретатор показывает, что он готов к выполнению следующей команды. Вид
приглашения может быть настроен многими способами, и может включать имя
пользователя, машины, текущий каталог, время и т. д. Например, выполнение
PS1="What next, master? " изменит приглашение на то, что мы ввели.
.PP
Выше мы видели, что есть такие команды как \fIdate\fP (которая выдаёт дату и
время) и \fIcal\fP (которая выдаёт календарь).
.PP
Команда \fIls\fP выдаёт список содержимого текущего каталога \(em показывает
какие файлы у вас есть. С параметром \fI\-l\fP эта команда выдаёт длинный
список, который включает владельца, размер и дату файла, а также права
доступа на чтение и/или изменение файла. Например, файл "tel" имеет размер в
37 байт, владелец файла \(em пользователь aeb, а права доступа такие, что
владелец может читать и писать в этот файл, а другие могут только читать
его. Владелец и права доступа могут быть изменены командами \fIchown\fP и
\fIchmod\fP.
.PP
Команда \fIcat\fP показывает содержимое файла. (Имя команды является
аббревиатурой слов «concatenate and print» (соединить и напечатать): все
файлы, заданные как параметры этой команды, будут соединены в один и
отправлены на «стандартный вывод» (смотрите \fBstdout\fP(3)), которым в данном
случае является экран терминала.)
.PP
Команда \fIcp\fP (от слова «copy», копировать) копирует файл.
.PP
А вот команда \fImv\fP (от слова «move», переместить) только переименовывает
его.
.PP
Команда \fIdiff\fP показывает различия между двумя файлами. В примере, который
дан выше, она ничего не выдаёт, потому что различий нет.
.PP
Команда \fIrm\fP (от слова "remove") удаляет файл и будьте осторожны! Он
пропадает. Нет никакой корзины для удалённых файлов. Удалённые файлы будут
потеряны.
.PP
Команда \fIgrep\fP (от "g/re/p") ищет указанные строки в одном или нескольких
файлах. В примере команда ищет телефонный номер Maja.
.SS "Пути и текущий каталог"
Файлы располагаются в большом дереве, файловой иерархии. Каждый файл имеет
\fIpathname\fP (полный путь), описывающий путь от корня дерева (который имеет
имя \fI/\fP) до данного файла. Пример полного пути:
\fI/home/aeb/tel\fP. Постоянное использование полного пути может быть не
рационально, и имя файла в текущем каталоге может быть сокращено до
последнего компонента. Так, \fI/home/aeb/tel\fP может быть сокращено до \fItel\fP,
если текущим каталогом является каталог \fI/home/aeb\fP.
.PP
Команда \fIpwd\fP показывает имя текущего каталога.
.PP
Команда \fIcd\fP изменяет текущий каталог.
.PP
Попробуйте выполнить команды \fIcd\fP и \fIpwd\fP, и попробуйте вызвать \fIcd\fP так:
«cd», «cd .», «cd ..», «cd /» и «cd ~».
.SS Каталоги
Команда \fImkdir\fP создаёт новый каталог.
.PP
Команда \fIrmdir\fP удаляет каталог, если он пустой, в противном случае выдаёт
ошибку.
.PP
Команда \fIfind\fP (с несколько причудливым синтаксисом) ищет файлы с указанным
именем или другими свойствами Например, «find  \-name tel» будет искать файл
\fItel\fP начиная с указанного каталога (который имеет имя \fI.\fP). А команда
«find / \-name tel» будет делать тоже самое, но начиная с корневого каталога
дерева файлов. Поиск по многогигабайтному диску займёт много времени, и,
возможно, лучше использовать команду \fBlocate\fP(1).
.SS "Диски и файловые системы"
Команда \fImount\fP подключает файловую систему, найденную на каком\-либо диске
(или дискете, компакт\-диске и т.д.) к основной иерархии файловой системы. А
команда \fIumount\fP отключает её. Команда \fIdf\fP скажет вам как много осталось
свободного пространства на вашем диске.
.SS Процессы
В системах UNIX многие пользовательские и системные процессы работают
одновременно. Некоторые запущены в приоритетном режиме (\fIforeground\fP),
другие в фоновом режиме (\fIbackground\fP). Команда \fIps\fP покажет вам какие
процессы активны и какие номера они имеют. Команда \fIkill\fP позволяет вам
освободиться от них. Эта команда, запущенная без параметров, посылает
процессу дружественное предложение: завершай работу. А если за командой
«kill \-9» следует номер процесса, то этот процесс будет немедленно
уничтожен. Процессы приоритетного режима часто могут быть завершены по
нажатию Control\-C.
.SS "Получение информации"
Существуют тысячи команд, каждая из которых имеет множество
параметров. Традиционно, команды документируются в справочных страницах
(\fIman pages\fP, таких как эта), так что команда "man kill" покажет вам
документ, в котором описывается использование команды "kill" (а "man man"
\(em документ, где описывается использование команды "man"). Программа
\fIman\fP выводит текст через пейджер (\fIpager\fP), обычно \fIless\fP. Нажмите
пробел, чтобы перейти к следующей странице или q для выхода.
.PP
Ссылки на документацию в man\-страницах указываются в виде имени и номера
раздела, например \fBman\fP(1). Справочные страницы содержат краткое описание и
позволяют вам быстро найти некоторые забытые детали работы. Для новичков
существуют тексты введений с большим количеством примеров и разъяснений.
.PP
Большое количество программного обеспечения GNU/FSF предоставляется вместе с
файлами info. Введите команду «info info», чтобы получить начальное
представление об использовании программы \fIinfo\fP.
.PP
.\"
.\" Actual examples? Separate section for each of cat, cp, ...?
.\" gzip, bzip2, tar, rpm
Специализированные темы часто описываются в документах HOWTO. Загляните в
каталог \fI/usr/share/doc/howto\fP, и используйте браузер для просмотра, если
вы нашли там нужные HTML\-файлы.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBash\fP(1), \fBbash\fP(1), \fBchsh\fP(1), \fBcsh\fP(1), \fBdash\fP(1), \fBksh\fP(1),
\fBlocate\fP(1), \fBlogin\fP(1), \fBman\fP(1), \fBxterm\fP(1), \fBzsh\fP(1), \fBwait\fP(2),
\fBstdout\fP(3), \fBman\-pages\fP(7), \fBstandards\fP(7)
