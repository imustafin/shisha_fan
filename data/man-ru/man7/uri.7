.\" -*- mode: troff; coding: UTF-8 -*-
.\" (C) Copyright 1999-2000 David A. Wheeler (dwheeler@dwheeler.com)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Fragments of this document are directly derived from IETF standards.
.\" For those fragments which are directly derived from such standards,
.\" the following notice applies, which is the standard copyright and
.\" rights announcement of The Internet Society:
.\"
.\" Copyright (C) The Internet Society (1998).  All Rights Reserved.
.\" This document and translations of it may be copied and furnished to
.\" others, and derivative works that comment on or otherwise explain it
.\" or assist in its implementation may be prepared, copied, published
.\" and distributed, in whole or in part, without restriction of any
.\" kind, provided that the above copyright notice and this paragraph are
.\" included on all such copies and derivative works.  However, this
.\" document itself may not be modified in any way, such as by removing
.\" the copyright notice or references to the Internet Society or other
.\" Internet organizations, except as needed for the purpose of
.\" developing Internet standards in which case the procedures for
.\" copyrights defined in the Internet Standards process must be
.\" followed, or as required to translate it into languages other than English.
.\"
.\" Modified Fri Jul 25 23:00:00 1999 by David A. Wheeler (dwheeler@dwheeler.com)
.\" Modified Fri Aug 21 23:00:00 1999 by David A. Wheeler (dwheeler@dwheeler.com)
.\" Modified Tue Mar 14 2000 by David A. Wheeler (dwheeler@dwheeler.com)
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH URI 7 2017\-09\-15 Linux "Руководство программиста Linux"
.SH ИМЯ
uri, url, urn \- единый идентификатор ресурса (URI), содержащий URL или URN
.SH ОБЗОР
.nf
.HP 0.2i
URI = [ абсолютный_URI | относительный_URI ] [ "#" фрагмент ]
.HP
абсолютныйURI = схема ":" ( иерархическая_часть | неясная_часть )
.HP
относительныйURI = ( сетевой_путь | абсолютный_путь | относительный_путь ) [ "?" запрос ]
.HP
схема = "http" | "ftp" | "gopher" | "mailto" | "news" | "telnet" |
         "file" | "man" | "info" | "whatis" | "ldap" | "wais" | …
.HP
иерархическая_часть = ( сетевой_путь | абсолютный_путь ) [ "?" запрос ]
.HP
сетевой_путь = "//" полномочия [ абсолютный_путь ]
.HP
абсолютный_путь = "/"  сегменты_пути
.HP
относительный_путь = относительный_сегмент [ абсолютный_путь ]
.fi
.SH ОПИСАНИЕ
.PP
Единый идентификатор ресурса (Uniform Resource Identifier (URI)) — это
короткая строка символов, идентифицирующая абстрактный или физический ресурс
(например, веб\-страницу). Единый указатель местоположения ресурса (Uniform
Resource Locator (URL)) — это URI, который идентифицирует ресурс по
основному способу доступа к нему (например, его «местонахождению в сети»), а
не по названию или другим атрибутам этого ресурса. Единое название ресурса
(Uniform Resource Name (URN)) — это URI, который должен оставаться
уникальным и неизменным даже в том случае, когда ресурс уже не существует
или недоступен.
.PP
URI являются стандартным способом создания конечных адресов гипертекстовых
ссылок для таких инструментов как веб\-браузеры. Строка
«http://www.kernel.org» является URL (а значит и URI). Многие используют
термин URL неправильно, как синоним URI (технически, URL являются частью
URI).
.PP
URI могут быть абсолютными или относительными. Абсолютный идентификатор
ссылается на ресурс независимо от контекста, в то время как относительный
идентификатор ссылается на ресурс, описывая его относительно текущего
контекста. В относительном идентификаторе части пути «.» и «..» имеют
специальные значения: «текущий иерархический уровень» и «уровень выше
текущего иерархического уровня», соответственно —аналогично UNIX\-подобным
системам. Часть пути, содержащая двоеточие, не может быть использована как
первая часть пути относительного URI (например, «это:то»), потому что это
приведёт к ошибке; перед такими частями надо ставить ./ (например,
«./это:то»). Заметим, что в производных MS\-DOS (например, Microsoft Windows)
в URI в именах устройств двоеточие заменено на вертикальную черту («|»), то
есть «C:» заменяется на «C|».
.PP
Если используется идентификатор фрагмента, то он ссылается на часть ресурса
с конкретным названием; фрагментом называют текст после символа «#». URI,
начинающийся с «#», ссылается на такой фрагмент в текущем ресурсе.
.SS Использование
Существует множество различных схем URI, в каждой могут быть свои
дополнительные правила и смыслы, но все они создаются максимально похожими
друг на друга. Например, многие схемы URL позволяют задавать полномочия в
следующем формате, обозначаемом здесь как \fIip_server\fP (квадратные скобки
указывают на необязательность):
.HP
\fIip_server = \fP[\fIпользователь\fP [ : \fIпароль\fP ] @ ] \fIузел\fP [ : \fIпорт\fP]
.PP
Этот формат позволяет указать имя пользователя, его пароль и/или номер
порта. \fIУзел\fP — это имя компьютера\-узла; он может быть указан в виде имени
DNS или IP\-адреса (числа через точку). Таким образом, URI
<http://fred:fredpassword@example.com:8080/> определяется
подключение к веб\-серверу example.com по порту 8080 пользователем fred (с
помощью пароля fredpassword). Желательно в целях безопасности не указывать
пароль в URI. Если в URL указано имя пользователя, но нет пароля, а серверу
этот пароль требуется, то программа, обрабатывающая URL, должна запросить
его у пользователя.
.PP
Далее приводятся наиболее распространённые схемы, используемые в
UNIX\-подобных системах. Заметьте, что многие программы, использующие URI,
имеют внутренние или специализированные схемы, поэтому советуем прочитать на
них документацию.
.PP
\fBhttp — веб\-сервер (HTTP)\fP
.PP
http://\fIip_server\fP/\fIпуть\fP
.br
http://\fIip_server\fP/\fIпуть\fP?\fIзапрос\fP
.PP
Это URL для доступа к веб\-серверу (HTTP). По умолчанию используется порт
80. Если путь указывает на каталог, то веб\-сервер сам выберет, что
необходимо вернуть; обычно, если есть файл «index.html» или «index.htm», то
возвращается его содержимое, в ином случае возвращается список файлов в
каталоге. Пример: <http://lwn.net>.
.PP
Запрос может быть задан в устаревшем формате «isindex», состоящим из слова
или фразы, и не содержащим знака равенства (=). Запрос может быть также в
удлинённом формате «GET», в котором может быть несколько запрашиваемых
элементов в виде \fIключ\fP=\fIзначение\fP и разделяемых амперсандом (&). Заметим,
что \fIключ\fP может повторяться, но как это обрабатывать будет решать сам
веб\-сервер и его прикладная программа. Есть проблемы при работе с
HTML/XML/SGML с помощью формата запроса GET: когда в такие URI добавляются
несколько ключей, используемый в документах SGML/XML (включая HTML)
амперсанд (&) перезаписывается в виде &amp;. Заметим, что не все запросы
используют этот формат; огромные формы могут быть слишком большими для
записи в виде URI, поэтому они используют другой механизм взаимодействия
(называемый POST), в котором данные в URI не включаются. Подробности
смотрите в спецификации на Common Gateway Interface
.UR http://www.w3.org\:/CGI
.UE .
.PP
\fBftp — протокол передачи файлов (FTP)\fP
.PP
ftp://\fIip_server\fP/\fIпуть\fP
.PP
Это URL для получения доступа к файлу с помощью протокола передачи файлов
FTP. Номер порта (управляющего) по умолчанию равен 21. Если не указано имя
пользователя, то пишется слово «anonymous», и в этом случае многие
клиентские программы в качестве пароля отправляют адрес электронной почты
пользователя. Пример: <ftp://ftp.is.co.za/rfc/rfc1808.txt>.
.PP
\fBgopher — сервер Gopher\fP
.PP
gopher://\fIip_server\fP/\fIтип_gopher селектор\fP
.br
gopher://\fIip_server\fP/\fIтип_gopher селектор\fP%09\fIпоиск\fP
.br
gopher://\fIip_server\fP/\fIтип_gopher селектор\fP%09\fIпоиск\fP%09\fIgopher+_строка\fP
.br
.PP
По умолчанию служба gopher использует порт 70. \fIтип_gopher\fP —
односимвольное поле для указания типа ресурса Gopher, на который ссылается
URL. Полный путь может быть пустым; в этом случае знак «/» тоже является
необязательным, а значение тип_gopher по умолчанию равно «1».
.PP
\fIселектор\fP — это строка селектора в Gopher. В протоколе Gopher строки
селектора могут содержать любые байты, кроме шестнадцатеричных 09 (US\-ASCII
HT или tab), 0A (US\-ASCII\-символ LF) и 0D (US\-ASCII\-символ CR).
.PP
\fBmailto — адрес электронной почты\fP
.PP
mailto:\fIадрес_email\fP
.PP
Это адрес электронный почты, обычно имеющий форму
\fIимя_пользователя\fP@\fIимя_узла\fP. Для получения более подробной информации о
формате адресов электронной почты смотрите \fBmailaddr\fP(7). Заметим, что
любой символ % должен записываться как %25. Пример:
<mailto:dwheeler@dwheeler.com>.
.PP
\fBnews — сообщение или группа новостей\fP
.PP
news:\fInewsgroup\-name\fP
.br
news:\fImessage\-id\fP
.PP
В \fInewsgroup\-name\fP задаётся иерархическое имя, разделённое точками,
например, «comp.infosystems.www.misc». Если значение
<newsgroup\-name> равно «*» (записывается как <news:*>), то
такая запись используется для указания «всех доступных групп
новостей». Пример: <news:comp.lang.ada>.
.PP
Значение \fImessage\-id\fP соответствует Message\-ID из
.UR http://www.ietf.org\:/rfc\:/rfc1036.txt
IETF RFC\ 1036,
.UE
без крайних
«<» и «>»; оно имеет вид
\fIуникальная_часть\fP@\fIполное_доменное_имя\fP. Идентификатор сообщения можно
отличить от названия группы новостей по находящемуся в названии символу «@».
.PP
\fBtelnet — удалённый вход\fP
.PP
telnet://\fIip_server\fP/
.PP
Схема URL для Telnet используется для определения интерактивных текстовых
служб, которые доступны по протоколу Telnet. Последний символ «/» может быть
опущен. По умолчанию используется порт 23. Пример:
<telnet://melvyl.ucop.edu/>.
.PP
\fBfile — обычный файл\fP
.PP
file://\fIip_server\fP/\fIсегменты_пути\fP
.br
file:\fIсегменты_пути\fP
.PP
Представляет файл или каталог, доступный локально. Исключение: значение
\fIip_server\fP может быть пустым или равно строке «localhost»; это означает:
«машина, с которой обращаются по URL». Если путь указывает на каталог, то
программа просмотра представит содержимое каталога с ссылками на каждый
элемент, что выполняется не всеми просмотрщиками. KDE поддерживает
генерируемые файлы с помощью URL <file:/cgi\-bin>. Если указанный
файл не найден, то обозреватель может попробовать расширить имя файла при
помощи функций охвата (смотрите \fBglob\fP(7) и \fBglob\fP(3)).
.PP
Второй формат (например, <file:/etc/passwd>) существует для ссылки
на локальные файлы. Однако, в старых стандартах этот формат не допускался и
некоторые программы не воспринимают его как URI. Более переносим следующий
синтаксис: пустая строка вместо имени сервера, например,
<file:///etc/passwd>; эта форма имеет тот же смысл, легко
распознаётся определителями по шаблону и старыми программами как
URI. Заметим, что если вы на самом деле хотите «начать с текущего места», то
не используйте такую схему вообще; рекомендуется использовать относительный
адрес, такой как, <../test.txt>, который имеет побочный эффект: он
не зависит от схемы. Пример такой схемы: <file:///etc/passwd>.
.PP
\fBman — справочная страница man\fP
.PP
man:\fIимя_команды\fP
.br
man:\fIимя_команды\fP(\fIраздел\fP)
.PP
Это ссылка на локальные справочные страницы (man). За именем команды может
следовать номер раздела в круглых скобках; для получения более подробной
информации о разделах прочтите \fBman\fP(7). Схемы URI в UNIX\-подобных системах
(например, Linux) различаются и до сих пор не зарегистрированы в
IETF. Пример: <man:ls(1)>.
.PP
\fBinfo — страница документации info\fP
.PP
info:\fIвиртуальное_имя_файла\fP
.br
info:\fIвиртуальное_имя_файла\fP#\fIимя_узла\fP
.br
info:(\fIвиртуальное_имя_файла\fP)
.br
info:(\fIвиртуальное_имя_файла\fP)\fIимя_узла\fP
.PP
Эта схема ссылается на справочные страницы info (созданные из файлов
texinfo); данный формат документации используется в инструментах GNU. Схемы
URI в UNIX\-подобных системах (например, Linux) различаются и до сих пор не
зарегистрированы в IETF. На момент написания синтаксисы URI у GNOME и KDE
различались, поэтому они не понимают синтаксис друг друга. Первые два
формата — GNOME: в именах узлов все пробелы заменены
подчеркиванием. Следующие два формата — KDE: пробелы в названиях узлов
остаются пробелами, даже если это запрещено стандартами URI. Это делалось в
надежде на то, что в будущем все программы будут принимать все эти форматы и
будут считать подчеркивания как пробелы. В GNOME и KDE, если используется
форма без названия узла, то названием по умолчанию считается «Top». Пример
формата GNOME:  <info:gcc> и <info:gcc#G++_and_GCC>. Пример
формата КDE: <info:(gcc)> и <info:(gcc)G++ and GCC>.
.PP
\fBwhatis — поиск документации\fP
.PP
whatis:\fIстрока\fP
.PP
Эта схема применяет для поиска в базе однострочных описаний команд и
возвращает список описаний, содержащих искомую строку. Возвращаются только
полные совпадения. За более полной информацией обращайтесь к
\fBwhatis\fP(1). Данная схема URI в UNIX\-подобных системах (например, Linux)
различается и до сих пор не зарегистрирована IETF.
.PP
\fBghelp — справочная документация GNOME\fP
.PP
ghelp:\fIназвание_приложения\fP
.PP
Схема загружает справку GNOME для заданного приложения. Замечание: пока в
документации описаны не все приложения в этом формате.
.PP
\fBldap — простой протокол доступа к каталогам (Lightweight Directory Access
Protocol)\fP
.PP
ldap://\fIузел_порт\fP
.br
ldap://\fIузел_порт\fP/
.br
ldap://\fIузел_порт\fP/\fIdn\fP
.br
ldap://\fIузел_порт\fP/\fIdn\fP?\fIатрибуты\fP
.br
ldap://\fIузел_порт\fP/\fIdn\fP?\fIатрибуты\fP?\fIобласть\fP
.br
ldap://\fIузел_порт\fP/\fIdn\fP?\fIатрибуты\fP?\fIобласть\fP?\fIфильтр\fP
.br
ldap://\fIузел_порт\fP/\fIdn\fP?\fIатрибуты\fP?\fIобласть\fP?\fIфильтр\fP?\fIрасширения\fP
.PP
Эта схема поддерживает запросы, направляемые по протоколу LDAP одному или
нескольким серверам для получения иерархически упорядоченной информации
(например, о людях или ресурсах компьютеров). Подробности о схеме LDAP URL
смотрите в
.UR http://www.ietf.org\:/rfc\:/rfc2255.txt
RFC\ 2255
.UE .
Компоненты этого URL:
.IP узел_порт 12
запрашиваемый сервер LDAP, записывается как имя машины, двоеточие, номер
порта (необязательно). По умолчанию в LDAP используется TCP\-порт 389. Если
компонент не указан, то клиент сам определяет, какой из LDAP\-серверов
запрашивать.
.IP dn
отличительное имя LDAP, которое определяет базовый объект поиска LDAP
(смотрите
.UR http://www.ietf.org\:/rfc\:/rfc2253.txt
RFC\ 2253
.UE
раздел 3).
.IP атрибуты
возвращаемый список атрибутов, разделённых запятой; смотрите RFC\ 2251,
раздел 4.1.5. Если данный компонент не задан, то возвращаются все атрибуты.
.IP область
область поиска, значениями могут быть: «base» (для поиска по базовому
объекту), «one» (для поиска на одном уровне) или «sub» (для поиска по
ветвям). Если область поиска не указывается, то по умолчанию используется
«base».
.IP фильтр
фильтр поиска (набор возвращаемых записей). Если компонент не задан, то
возвращаются все записи. Смотрите
.UR http://www.ietf.org\:/rfc\:/rfc2254.txt
RFC\ 2254
.UE
раздел 4.
.IP расширения
список пар тип=значение (через запятую), где часть =значение (в случаях,
когда это не требуется) может не употребляться. Расширение с приставкой «!»
обязательно; если этот значок отсутствует, то необязательно.
.PP
Приведём примеры запросов LDAP. Запрос к ldap.itd.umich.edu информации о
Мичиганском университете США:
.PP
.nf
ldap://ldap.itd.umich.edu/o=University%20of%20Michigan,c=US
.fi
.PP
Для того, чтобы получить атрибут почтового адреса, введите запрос:
.PP
.nf
ldap://ldap.itd.umich.edu/o=University%20of%20Michigan,c=US?postalAddress
.fi
.PP
Для того, чтобы запросить у host.com (порт 6666) информацию о человеке по
имени (cn) «Babs Jensen» в Мичиганском университете, введите строку:
.PP
.nf
ldap://host.com:6666/o=University%20of%20Michigan,c=US??sub?(cn=Babs%20Jensen)
.fi
.PP
\fBwais — глобальная сеть информационных серверов (Wide Area Information
Servers)\fP
.PP
wais://\fIузел_порт\fP/\fIбаза_данных\fP
.br
wais://\fIузел_порт\fP/\fIбаза_данных\fP?\fIпоиск\fP
.br
wais://\fIузел_порт\fP/\fIбаза_данных\fP/\fIwtype\fP/\fIwpath\fP
.PP
Эта схема предназначена для базы данных WAIS, поиска или документа (более
подробную информацию о WAIS смотрите
.UR http://www.ietf.org\:/rfc\:/rfc1625.txt
IETF RFC\ 1625
.UE
). Узел_порт —
это название машины, в некоторых случаях сопровождающееся номером порта
(после двоеточия). Используемый порт по умолчанию — 210.
.PP
Первая форма определяет базу данных WAIS для поиска. Вторая форма — это
определённой поиск в \fIбазе данных\fP WAIS. Третья форма предназначена для
поиска конкретного документа в базе данных WAIS. Значение \fIwtype\fP служит
для обозначения объекта в WAIS, а \fIwpath\fP — это document\-id WAIS.
.PP
\fBдругие схемы\fP
.PP
Существует множество других схем URI. Большинство программ, использующих
URI, поддерживают свои собственные схемы URI (например, Mozilla имеет схему
about: для работы с внутренней информацией; браузер справки GNOME имеет
схему toc: для работы с разными разделами). Есть схемы, которые в данный
момент не распространены (например, prospero). Схема news: предпочтительнее
схемы nntp:. URN поддерживаются схемой urn: (например, urn:ietf:… означает
документы IETF); в настоящее время URN широко не используются. Не все
приложения поддерживают все схемы.
.SS "Кодирование символов"
.PP
В URI используется ограниченный набор символов с учётом того, чтобы их можно
было набирать в различных ситуациях.
.PP
Следующие символы зарегистрированы, то есть они могут появляться в URI, но
только в определённых для них целях (эти символы в данных должны быть
экранированы перед созданием URI):
.IP
   ; / ? : @ & = + $ ,
.PP
Незарезервированные символы могут быть использованы в
URI. Незарезервированные символы — это английские буквы верхнего и нижнего
регистров, цифры и следующий набор знаков пунктуации и символов:
.IP
 \- _ . ! ~ * ' ( )
.PP
Все остальные символы должны экранироваться. Экранированный октет кодируется
тремя символами: символом процента «%» и двумя шестнадцатеричными цифрами,
представляющими код октета (для ввода шестнадцатеричных цифр можно
использовать буквы верхнего и нижнего регистров). Например, пробел
обозначается как «%20», символ табуляции (tab) обозначается как «%09», а «&»
как «%26». Так как символ «%» зарезервирован, он всегда обозначаться только
как «%25». Обычно в запросах пробельные символы заменяют знаком плюс (+);
этот способ не определён в RFC (где рекомендуется использовать %20), но
любое приложение, принимающее запросы URI, должно его воспринимать. URI
всегда показываются в своём «экранированном» виде.
.PP
Незарезервированные символы можно экранировать без изменения семантики URI,
но это нельзя делать в случаях, когда URI не используется в контексте, не
допускающем появления неэкранированных символов. Например, «%7e» иногда
используется вместо «~» в пути HTTP URL, но обе формы воспринимаются в HTTP
URL одинаково.
.PP
Для URI, обрабатывающих символы, не входящих в набор US\-ASCII, в главе В.2
документации по HTML 4.01 и в главе 2.2.5 IETF RFC\  2718 приводится
рекомендуемое рациональное решение:
.IP 1. 4
Переводить последовательность символов в кодировку UTF\-8 (IETF RFC\ 2279) —
смотрите \fButf\-8\fP(7) — затем
.IP 2.
использовать механизм экранирования URI, то есть, использовать конвертацию
%HH для небезопасных октетов.
.SS "Запись URI"
При записи URI должны помещаться в двойные кавычки (например,
"http://www.kernel.org"), закрываться в угловые скобки (например,
<http://lwn.net>) или помещаться на отдельной строке. Предупреждение
для использующих двойные кавычки: \fBникогда\fP не помещайте лишнюю пунктуацию
(например, точку в конце фразы или запятую в списке) внутрь URI, так как они
изменят значение URI. Вместо этого используйте угловые скобки, или перейдите
к системе цитирования, в которой никогда не встречаются дополнительные
символы внутри цитат. В качестве такой системы можно предложить «новую» или
«логическую» систему цитирования от «Hart's Rules» и «Oxford Dictionary for
Writers and Editors», используемую в Великобритании и хакерами по всему миру
(смотрите раздел Jargon File в Hacker Writing Style,
.UR http://www.fwi.uva.nl\:/~mes\:/jargon\:/h\:/HackerWritingStyle.html
.UE
). Старые документы предполагают вставку префикса «URL:» сразу перед
URI, но такая форма никогда не была популярной.
.PP
Синтаксис URI разрабатывался как однозначный. Однако когда URI стали
использовать повсеместно, традиционные средства массовой информации
(телевидение, радио, газеты и т.д.) стали применять сокращённые ссылки URI,
состоящие из названия домена и пути к конкретному ресурсу (например,
<www.w3.org/Addressing>). Такие ссылки больше предназначены для
человеческого восприятия, а не для считывания машиной в предположении, что
для полного понимания URI будет достаточно контекста применения (например,
имена узлов, начинающиеся с «www», скорее всего, имеют в URI префикс
«http://», а имена узлов, начинающиеся с «ftp», скорее всего, имеют префикс
«ftp://»). Много реализаций клиентов «додумывают» такие ссылки. Такие
предположения могут иногда меняться, в частности при появлении новых
схем. Так как сокращённые URI имеют тот же синтаксис, что и путь
относительных URL, сокращённые URI не могут быть использованы в тех случаях,
где используются относительные URI; они могут использоваться только когда
нет определённой основы (например, в диалоговых окнах). Не используйте
сокращённые URI как гипертекстовые ссылки в документах, используйте
стандартный формат, как описано в данном документе.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.PP
.UR http://www.ietf.org\:/rfc\:/rfc2396.txt
(IETF RFC\ 2396)
.UE ,
.UR http://www.w3.org\:/TR\:/REC\-html40
(HTML 4.0)
.UE .
.SH ЗАМЕЧАНИЯ
Любое приложение, использующее URI (например, веб\-браузер) в Linux, должно
поддерживать (непосредственно или косвенно) все схемы, описанные здесь,
включая схемы man: и info:. Для обработки предлагается вызывать стороннюю
программу.
.PP
Технически, фрагмент не является частью URI.
.PP
Для получения информации о том, как включить URI (включая URL) в формат
данных, прочтите соответствующую документацию. HTML использует формат <A
HREF="\fIuri\fP"> \fItext\fP </A>. Файлы texinfo используют формат
@uref{\fIuri\fP}. Man и mdoc имеют недавно добавленный макрос UR или просто
включают URI в текст (программы просмотра должны распознавать, что :// это
часть URI).
.PP
В настоящее время окружения рабочего стола GNOME и KDE используют различные
URI, в частности в своих справочных системах. Для справочных страниц в GNOME
используется <toc:man>, а в KDE — <man:(index)>; для страниц
info в GNOME используется <toc:info>, а в KDE — <info:(dir)>
(автору данной справочной страницы нравится выбор KDE, так как он больше
похож на обычно используемый формат). В общем случае, в KDE используется
<file:/cgi\-bin/> в качестве приставки к набору генерируемых
файлов. В KDE предпочитают использовать документацию в HTML, доступную как
<file:/cgi\-bin/helpindex>. В GNOME для хранения и поиска
документации предпочитают использовать схему ghelp. Ни один обозреватель в
момент написания этого документа не поддерживал схему ссылок на каталоги
file:, что затрудняет ссылку на весь каталог с помощью просматриваемого
URI. Как говорилось ранее, эти окружения различаются по способу поддержки
схемы info:. В перспективе GNOME и KDE должны прийти к единому формату URI,
и будущая версия системы войдёт в эту справочную страницу. Помогите достичь
этого единства.
.SS Безопасность
.PP
Сам по себе URI не создаёт никакой угрозы безопасности. Но нет никакой
гарантии, что URL, который однажды указывал на конкретный ресурс, в
дальнейшем будет делать то же самое. Так же нет никаких гарантий, что этот
же URL позднее не будет ссылаться на совершенно другой ресурс. Такие
гарантии можно получить лишь от лица, ответственного за эти ресурсы и их
пространство имён.
.PP
Существует возможность составить URL таким образом, что попытка произвести
обыкновенную, «безобидную» операцию, такую, как получение информации с
определённого ресурса, возможно, вызовет сбой в её выполнении. Небезопасный
URL, обычно, создаётся следующим образом: в запросе указывается номер порта,
не совпадающий с номером зарезервированного порта сетевого протокола. Клиент
неосознанно заходит на сайт, но используя другой протокол. В URL содержатся
команды, которые при их считывании (в соответствии с другим протоколом)
производят непредвиденную операцию. Примером может послужить использование
gopher URL для создания ненужного и безадресного сообщения, которое
отправится через сервер SMTP.
.PP
Нужно быть осторожным с URL, в которых указан номер порта, отличный от
стандартного порта для протокола, в особенности, если этот номер находится в
зарезервированной области.
.PP
Надо быть очень внимательным и в тех случаях, когда URI содержит
экранированные разделители протокола (например, символы CR и LF для
протокола telnet), с которых экранирование не будет снято перед
передачей. Это могло бы нарушить протокол, но само отключение возможностей
таких символов может вызвать возникновение дополнительных действий этого
протокола, которые могут привести к выполнению непредвиденных и не совсем
безобидных операций.
.PP
Также довольно не предусмотрительно использовать пароль в URI. В частности,
рекомендуется использовать пароль внутри URI\-компонента «userinfo», за
исключением редких случаев, когда параметр «password» может быть показан
всем.
.SH ДЕФЕКТЫ
.PP
Документация может быть расположена в различных местах, поэтому не
существует схемы URI для просмотра документации в различных форматах. Ссылки
типа <file:///usr/doc/ZZZ> не работают по причине различных
требований дистрибутивов и установочных требований, согласно которым
документация может быть размещена в разных каталогах (она может быть в
/usr/doc, /usr/local/doc, /usr/share или где\-нибудь ещё). К тому же,
содержимое каталога ZZZ, обычно, изменяется с каждой версией (хотя, частично
это можно решить использованием шаблонов имён файлов). А людям, которые
получают документацию по Интернет (вместо того, чтобы хранить её в своей
системе), схема file: вообще ничем не будет полезна. В будущем может быть
добавлена новая схема URI (например, «userdoc:»), которая позволит
программам включать перекрёстные ссылки на дополнительную документацию и,
при этом, не учитывать точное расположение такой документации. Или же в
новой версии файловой системы можно будет указывать расположения файлов так,
что можно будет находить документацию прямо по схеме file:.
.PP
Многие программы и форматы файлов не имеют возможности включать ссылки с
помощью URI.
.PP
.\" .SH AUTHOR
.\" David A. Wheeler (dwheeler@dwheeler.com) wrote this man page.
Так как не все программы поддерживают различные форматы URI, то должен
существовать стандартный механизм загрузки произвольного URI, который
автоматически определит пользовательскую среду (например, текстовую или
графическую, рабочий стол, локальные предпочтения пользователя и
используемые инструменты) и запустит правильное приложение для любого URI.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBlynx\fP(1), \fBman2html\fP(1), \fBmailaddr\fP(7), \fButf\-8\fP(7)
.PP
.UR http://www.ietf.org\:/rfc\:/rfc2255.txt
IETF RFC\ 2255
.UE
