.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 1995,1997 Paul Gortmaker and Andries Brouwer
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" This man page written 950814 by aeb, based on Paul Gortmaker's HOWTO
.\" (dated v1.0.1, 15/08/95).
.\" Major update, aeb, 970114.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH BOOTPARAM 7 2017\-09\-15 Linux "Руководство программиста Linux"
.SH ИМЯ
bootparam \- аргументы, передаваемые ядру Linux во время загрузки
.SH ОПИСАНИЕ
При запуске ядру Linux могут быть переданы «аргументы командной строки»,
иначе говоря, «параметры загрузки». Как правило, они служат для передачи
ядру информации о тех параметрах аппаратного обеспечения, которые оно не
может определить, или для удаления/замены значений, используемых ядром.
.PP
Если ядро загружается непосредственно из BIOS, то возможности указать
параметры нет. Для того, чтобы передать параметры ядру, необходимо
использовать системный загрузчик, позволяющий это сделать, например GRUB.
.SS "Список аргументов"
Аргументы командной строки ядра преобразуются в список строк (параметров
загрузки), разделённых пробелами. Большая часть аргументов имеет вид:
.PP
.in +4n
.EX
имя[=значение_1][,значение_2]…[,значение_10]
.EE
.in
.PP
где «имя» — уникальное ключевое слово, используемое для определения части
ядра, которой передаются указанные значения (если есть). Обратите внимание,
что ограничение в 10 значений действительно существует, так как код,
используемый в данный момент, обрабатывает только 10 разделённых запятой
параметров на одно ключевое слово. Тем не менее, в особых случаях вы можете
указать одно ключевое слово ещё раз, с помощью 10\-и дополнительных
параметров (если это позволяет функция настройки).
.PP
Большая часть обработки выполняется кодом из файла ядра
\fIinit/main.c\fP. Сначала ядро проверяет, является ли аргумент одним из
специальных аргументов «root=», «nfsroot=», \&«nfsaddrs=», «ro», «rw»,
«debug» или «init». Назначение этих специальных аргументов объясняется ниже.
.PP
Затем производится проверка списка функций настройки: есть ли для заданного
строкового параметра (например «foo») связанная с ним функция настройки
(«foo_setup()») для определённого устройства или части ядра. То есть, если
вы передали ядру строку foo=3,4,5,6, то ядро проверит, зарегистрирован ли
«foo» в массиве настроек. Если да, то будет вызвана соответствующая «foo»
функция (foo_setup()), которой будут переданы аргументы 3, 4, 5 и 6, как
указано в командной строке ядра.
.PP
Все параметры, указанные в виде «foo=bar» и не распознанные как обращения к
функциям настройки (см. выше), считаются переменными окружения. Например,
как аргумент загрузки можно указать «TERM=vt100».
.PP
Все остальные аргументы, не обработанные ядром и не считающиеся переменными
окружения, затем будут переданы PID 1 (обычно, это программа
\fBinit\fP(1)). Наиболее часто встречающийся аргумент, передаваемый процессу
\fIinit\fP, — слово «single», указывающее, что система должна быть загружена в
однопользовательском режиме, в котором не запускаются какие\-либо
службы. Более подробная информация об аргументах приведена в руководстве по
установленной в системе версии \fBinit\fP(1).
.SS "Общие аргументы загрузки, не относящиеся к настройке устройств"
.TP 
\fB«init=…»\fP
Задаёт начальную команду, запускаемую ядром. Если этот параметр не задан или
программа не найдена, то ядро попробует запустить \fI/sbin/init\fP, затем
\fI/etc/init\fP, затем \fI/bin/init\fP, затем \fI/bin/sh\fP. Если не удалось
запустить ни одну из указанных программ, то ядро переходит в режим «паники».
.TP 
\fB«nfsaddrs=…»\fP
Задаёт адрес загрузки с NFS. Используется при загрузке системы по сети.
.TP 
\fB«nfsroot=…»\fP
Задаёт корневую файловую систему NFS. Если эта строка не начинается с «/»,
«,» или цифры, то перед ним будет вставлена строка «/tftpboot/». Этот
параметр используется при загрузке системы по сети.
.TP 
\fB«root=…»\fP
Этот аргумент указывает ядру, какое устройство должно быть использовано в
качестве корневой файловой системы. Значение по умолчанию этого параметра
устанавливается при сборке ядра и, как правило, совпадает с устройством, на
котором была расположена корневая файловая система во время сборки. Для
использования в качестве устройства с корневой файловой системой, к примеру,
второго дисковода, следует указать «root=/dev/fd1».
.IP
Корневое устройство может быть указано как в символьном, так и в числовом
виде. Символьное представление имеет вид \fI/dev/XXYN\fP, где XX означает тип
устройства (например, «hd» — для совместимых с ST\-506 жёстких дисков, при
этом Y принимает значения от «a» до «d»; «sd» — для совместимых со SCSI
дисков, при этом Y принимает значения от «a» до «e»), Y — буква или номер
устройства, а N — номер (в десятичной системе счисления) раздела на этом
устройстве.
.IP
Заметим, что в данном случае речь не идёт о конкретном назначении этих
устройств в файловой системе. Приставка «/dev/» — это всего лишь дань
соглашениям.
.IP
Также применяется менее удобный и менее совместимый способ указания
устройств с помощью чисел в формате «старший/младший номер» (например,
старший номер \fI/dev/sda3\fP равен 8, младший равен 3, и устройство можно
указать как «root=0x803»).
.TP 
\&\fB'rootdelay='\fP
В этом параметре указывается задержка (в секундах) перед попыткой
смонтировать корневую файловую систему.
.TP 
\&\fB'rootflags=...'\fP
В этом параметре указывается строка параметров монтирования корневой
файловой системы (смотрите также \fBfstab\fP(5)).
.TP 
\&\fB'rootfstype=...'\fP
Параметр «rootfstype» указывает ядру смонтировать корневую файловую систему,
как если бы она была задаваемого типа. Это может быть полезно (как пример)
при монтировании файловой системы ext3 как ext2 и затем удалении журнала в
корневой файловой системе, что, фактически, превращает ext3 в ext2 и для
этого не нужно загружать машину с другого носителя.
.TP 
\fB«ro»\fP и \fB«rw»\fP
Параметр «ro» указывает ядру монтировать корневую файловую систему «только
для чтения» для того, чтобы программа проверки целостности файловой системы
(fsck) могла работать с не изменяющейся файловой системой. Ни один процесс
не может записать данные в файл, находящийся в данной файловой системе до
тех пор, пока она не будет «перемонтирована» для чтения/записи, например,
командой «mount \-w \-n \-o remount /» (см. также \fBmount\fP(8)).
.IP
Параметр «rw» указывает ядру монтировать корневую файловую систему в режиме
для чтения/записи. Он используется по умолчанию.
.TP 
\&\fB'resume=...'\fP
Указывает ядру где расположены данные suspend\-to\-disk, которые вы хотите
использовать для возобновления работы машины при выходе из состояния
сна. Обычно совпадает с расположение раздела или файла подкачки. Пример:
.IP
.in +4n
.EX
resume=/dev/hda2
.EE
.in
.TP 
\fB«reserve=…»\fP
Этот параметр используется для защиты от тестирования определённых областей
ввода/вывода. Команда должна быть задана в следующем виде:
.IP
.in +4n
.EX
\fBreserve=\fP\fIiobase,extent[,iobase,extent]...\fP
.EE
.in
.IP
В некоторых машинах драйверы неправильно определяют аппаратное обеспечение
или вызывают некорректную реакцию на тестирование определённых областей. В
этих случаях может появиться необходимость предотвратить проверку
(автоопределение) таких устройств.
.IP
Данный параметр загрузки служит для указания определённой области портов
ввода/вывода, которую не нужно тестировать. Драйвер устройства не будет
проверять указанную область, если только другой параметр явно не указывает
на необходимость их проверки.
.IP
Например, загрузочная строка
.IP
.in +4n
.EX
reserve=0x300,32  blah=0x300
.EE
.in
.IP
предотвращает проверку адресов 0x300\-0x31f всеми драйверами устройств, кроме
«blah».
.TP 
\fB«panic=N»\fP
По умолчанию, ядро не будет перезагружаться после паники, однако этот
параметр заставит ядро перезагрузиться через N секунд (если N больше
0). Время до перезагрузки может быть также изменено командой
.IP
.in +4n
.EX
echo N > /proc/sys/kernel/panic
.EE
.in
.TP 
\fB«reboot=[warm|cold][,[bios|hard]]»\fP
Начиная  Linux 2.0.22 по умолчанию используется «холодная» (cold)
перезагрузка. Возможно вернуть старое значение (warm) по умолчанию с помощью
«reboot=warm» («холодная» перезагрузка может понадобиться для сброса
аппаратного обеспечения, однако, она может уничтожить данные дискового
кэша. «Теплая» перезагрузка может быть несколько быстрее). По умолчанию
перезагрузка производится аппаратными (hard) средствами, а именно запросом
контроллеру клавиатуры команды на установку низкого уровня линии
сброса. Однако точно существует, по меньшей мере, один тип материнских плат,
на которых этот способ не работает. При указании параметра «reboot=bios»
перезагрузка будет осуществляться путем перехода в BIOS.
.TP 
\fB«nosmp»\fP и \fB«maxcpus=N»\fP
(Только, если определён __SMP__.) Параметры загрузки «nosmp» или «maxcpus=0»
полностью отключают SMP. Аргумент «maxcpus=N» ограничивает количество
процессоров, активируемых в режиме SMP, значением N.
.SS "Аргументы загрузки, используемые разработчиками ядра"
.TP 
\fB«debug»\fP
Сообщения ядра обрабатываются демоном (например, \fBklogd\fP(8) или подобным),
что позволяет записывать их на диск. Сообщения с приоритетом выше
\fIconsole_loglevel\fP выводятся также и на консоль (список приоритетов
смотрите в \fBsyslog\fP(2)). По умолчанию, значение \fIconsole_loglevel\fP
устанавливается для протоколирования сообщений на уровень выше чем
\fBKERN_DEBUG\fP. Этот загрузочный параметр указывает ядру также выводить
сообщения приоритета \fBKERN_DEBUG\fP. Уровень журнала для консоли также может
быть установлен во время работы через файл \fI/proc/sys/kernel/printk\fP
(описан в \fBsyslog\fP(2)), операцией \fBSYSLOG_ACTION_CONSOLE_LEVEL\fP в
\fBsyslog\fP(2) или \fBdmesg\fP(8).
.TP 
\fB«profile=N»\fP
Существует возможность включить функцию оценки быстродействия ядра (kernel
profiling). Для этого необходимо присвоить ненулевое значение переменной
\fIprof_shift\fP. Это может быть сделано либо установкой параметра
\fBCONFIG_PROFILE\fP при сборке ядра, либо указанием параметра
«profile=N». Значение переменной \fIprof_shift\fP устанавливается равным N, или
\fBCONFIG_PROFILE\fP или по умолчанию равняется 2. Оно определяет степень
детализации оценки: если система исполняет код ядра, то с каждым тиком
показания счётчика будут увеличиваться:
.IP
.in +4n
.EX
profile[address >> prof_shift]++;
.EE
.in
.IP
Необработанную информацию оценки можно прочитать из \fI/proc/profile\fP. Для
удобства чтения можно воспользоваться какой\-либо утилитой, например,
readprofile.c. Запись в \fI/proc/profile\fP приведёт к сбросу показаний
счётчиков.
.SS "Аргументы загрузки для использования ramdisk"
(Только, если ядро было собрано с \fBCONFIG_BLK_DEV_RAM\fP) В общем,
использовать ram\-диск под Linux — плохая идея, так как ядро использует
доступную память гораздо эффективнее. Однако при загрузке часто удобней
копировать содержимое дискеты на ramдиск. Также, это позволяет получить
систему, в которой загрузка отдельных модулей (для файловых систем или
оборудования) производится до получения доступа к основной файловой системе.
.IP
В Linux 1.3.48 работа с ramdisk была значительно изменена. Раньше память
выделялась статически и существовал параметр «ramdisk=N», определявший её
размер. Также возможно было задать необходимый размер во время сборки
ядра. В настоящее время под ram\-диски используются буферный кэш, размер
которого изменяется динамически. Дополнительную информацию по текущем
настройкам ramdisk можно найти в файле исходного кода ядра
\fIDocumentation/blockdev/ramdisk.txt\fP (в старых ядрах —
\fIDocumentation/ramdisk.txt\fP).
.IP
Существует четыре параметра: два логических и два целочисленных.
.TP 
\fB«load_ramdisk=N»\fP
Если N=1, то выполнять загрузку ram\-диска. Если N=0, то ramdisk не
загружается (по умолчанию 0).
.TP 
\fB«prompt_ramdisk=N»\fP
Если N=1, то запрашивать вставку дискеты (по умолчанию). Если N=0, то не
запрашивать (таким образом, этот параметр вообще не нужен).
.TP 
\fB«ramdisk_size=N»\fP или \fB«ramdisk=N»\fP (устарел)
Установить предельный размер ram\-диска(\-ов) равным N КБ. По умолчанию 4096
(4\ МБ).
.TP 
\fB«ramdisk_start=N»\fP
Установить номер начального блока (смещение на дискете, с которого
начинается ram\-диск) равным N. Этот параметр не требуется, если ram\-диск
находится сразу за образом ядра.
.TP 
\fB«noinitrd»\fP
(Только, если ядро было собрано с \fBCONFIG_BLK_DEV_RAM\fP и
\fBCONFIG_BLK_DEV_INITRD\fP). В настоящее время существует возможность собрать
ядро с поддержкой initrd. Если эта возможность включена, то при запуске
загружается ядро и начальный ram\-диск. Затем ядро преобразует initrd в
«обычный» ram\-диск, который монтируется в качестве корневой файловой системы
на чтение\-запись. Далее запускается \fI/linuxrc\fP. Затем монтируется
«настоящая» корневая файловая система, а файловая система initrd переносится
в /\fI/initrd\fP. И, наконец, начинается обычная процедура загрузки (например,
запускается \fI/sbin/init\fP).
.IP
.\" commit 9d85025b0418163fae079c9ba8f8445212de8568
Более подробно свойство initrd описано в файле исходного кода ядра
\fIDocumentation/admin\-guide/initrd.rst\fP (или в \fIDocumentation/initrd.txt\fP
до Linux 4.10).
.IP
Параметр «noinitrd» указывает ядру пропускать вышеуказанные шаги, несмотря
на то, что оно было собрано с поддержкой initrd. Данные initrd, тем не
менее, остаются в \fI/dev/initrd\fP (это устройство может быть использовано
только один раз: после того, как последний процесс, использующий
\fI/dev/initrd\fP, завершится, данные освобождаются).
.SS "Параметры загрузки для SCSI\-устройств"
Общие соглашения для этого раздела:
.PP
\fIiobase\fP — первый порт ввода/вывода, занятый узлом SCSI. Порты указываются
в шестнадцатеричной системе счисления, обычно их значения находятся в
диапазоне от 0x200 до 0x3ff.
.PP
\fIirq\fP — аппаратное прерывание, настроенное для карты. Возможные значения
зависят от карты, но обычно используются 5, 7, 9, 10, 11, 12 и 15. Остальные
значения, как правило, используются общей периферией, такой как: жёсткие
диски IDE, дисководы, последовательные порты и т. д.
.PP
\fIscsi\-id\fP — ID, используемый узел\-адаптером для своей идентификации на шине
SCSI. Только некоторые адаптеры позволяют изменять это значение, у
большинства оно фиксировано. Обычно, в качестве значения используется 7,
однако, карты Seagate и Future Domain TMC\-950 используют 6.
.PP
\fIparity\fP — указывает, ожидает ли узел\-адаптер SCSI от подключенных
устройств передачу значений чётности во всей передаваемой информации. Для
включения проверки чётности необходимо указать единицу, для отключения —
ноль. Не все адаптеры позволяют управлять чётностью с помощью параметров
загрузки.
.TP 
\fB«max_scsi_luns=…»\fP
Устройство SCSI может включать в себя «подустройства». В качестве примера
можно взять новые многодисковые SCSI CD\-ROM\-ы. Адрес каждого места под
компакт\-диск может быть задан «логическим номером устройства» (Logical Unit
Number — LUN). Но большинство устройств, таких как, жёсткие диски, ленточные
накопители и др., содержат только одно устройство, которому присваивается
нулевой LUN.
.IP
Некоторые плохо спроектированные устройства SCSI не обрабатывают запросы для
LUN, не равные нулю. Поэтому, новые ядра, если при сборке ядра не был
установлен флаг \fBCONFIG_SCSI_MULTI_LUN\fP, по умолчанию будут опрашивать
только устройства с LUN, равным нулю.
.IP
Для указания количества проверяемых при загрузке LUN можно в качестве
параметра загрузки указать «max_scsi_luns=n», где n является числом от
одного до восьми. Для избежания вышеописанной проблемы можно указать, что
n=1.
.TP 
\fBHастройка ленточных накопителей SCSI\fP
С помощью приведённой ниже строки загрузочных параметров можно настроить
драйвер ленточных накопителей SCSI:
.IP
.in +4n
.EX
\fBst=\fP\fIbuf_size[,write_threshold[,max_bufs]]\fP
.EE
.in
.IP
Первые два числа указываются в килобайтах. По умолчанию значение \fIbuf_size\fP
равно 32k\ Б, а максимальный размер, который может быть указан, — 16384\ КБ. В \fIwrite_threshold\fP задаётся значение, при достижении которого
содержимое буфера записывается на ленту (по умолчанию равно 30\ КБ). Максимальное количество буферов (max_bufs) зависит от количество
обнаруженных накопителей. По умолчанию используется два буфера. Пример
использования этого параметра:
.IP
.in +4n
.EX
st=32,30,2
.EE
.in
.IP
Более подробная информация приведена в файле \fIDocumentation/scsi/st.txt\fP
(или \fIdrivers/scsi/README.st\fP — в старых ядрах), находящемся в дереве
исходного кода ядра Linux.
.SS "Жёсткие диски"
.TP 
\fBПараметры драйвера IDE\-диска/CD\-ROM\fP
Драйвер IDE понимает довольно большое число параметров, начиная от указания
геометрии диска до поддержки неисправных микросхем контроллера. Параметры,
относящиеся к конкретному диску, указываются с помощью «hdX=», где X
принимает значения от «a» до «h».
.IP
Общие для всех дисков параметры указываются с префиксом «hd=». Заметим, что
их можно использовать и для какого\-то конкретного диска, и при этом параметр
будет применён именно так, как ожидалось.
.IP
.\" Linux 2.0, 2.2, 2.4
Также заметим, что «hd=» может быть использован для ссылки на следующий
неуказанный диск в последовательности (a, …, h) В дальнейшем, для краткости,
параметры будут описаны в виде «hd=». Более подробная информация приведена в
файле \fIDocumentation/ide/ide.txt\fP (в старых ядрах —
\fIDocumentation/ide.txt\fP или в совсем старых — \fIdrivers/block/README.ide\fP)
из дерева исходного кода ядра Linux.
.TP 
\fBПараметры «hd=cyls,heads,sects[,wpcom[,irq]]»\fP
Эти параметры используются для указания физической структуры
диска. Обязательными являются только первые три значения. Значения
цилиндров(cyls)/головок(heads)/секторов(sects) в дальнейшем используются в
программе fdisk. Значение предварительной компенсации записи (wpcom) для
дисков IDE игнорируется. Значение IRQ, указанное в качестве irq,
используется в контроллере интерфейса, к которому подключён диск, и, на
самом деле, не относится к диску.
.TP 
\fBПараметр «hd=serialize»\fP
В микросхеме двойного IDE интерфейса CMD\-640 содержится ошибка, приводящая к
тому, что при одновременной работе дисков первичного и вторичного
интерфейсов происходит повреждение данных. Этим параметром можно указать,
что драйверу никогда не следует использовать оба интерфейса одновременно.
.TP 
\fBПараметр «hd=noprobe»\fP
Не определять этот диск. Например,
.IP
.in +4n
.EX
hdb=noprobe hdb=1166,7,17
.EE
.in
.IP
отключит проверку, но одновременно задаст структуру диска, так что он будет
зарегистрирован как обычное блочное устройство, и с ним можно будет
работать.
.TP 
\fBПараметр «hd=nowerr»\fP
Бит \fBWRERR_STAT\fP на некоторых дисках установлен постоянно. Этот параметр
позволяет обойти эту проблему в таких устройствах.
.TP 
\fBПараметр «hd=cdrom»\fP
Указывает драйверу IDE, что вместо обычного жёсткого диска IDE подключён
CD\-ROM, совместимый с ATAPI. В большинстве случаев CD\-ROM определяется
автоматически, однако, если этого не происходит, можно воспользоваться
данным параметром.
.TP 
\fBСтандартные параметры драйвера дисков ST\-506 («hd=»)\fP
Стандартный драйвер дисков, также как драйвер IDE, понимает аргументы,
описывающие структуру дисков. Однако он ожидает указания только трёх
значений (C/H/S), а если их будет больше или меньше, то просто проигнорирует
их. Кроме того, аргумент должен быть указан в виде «hd=», то есть «hda=» и
т. п., в данном случае, являются неправильным. Формат следующий:
.IP
.in +4n
.EX
hd=cyls,heads,sects
.EE
.in
.IP
Если установлено два диска, то для второго диска нужно повторить
вышеуказанную строку со структурой.
.SS "Устройства Ethernet"
Различные драйверы используют разные параметры, но все они, как минимум,
распознают IRQ, базу ввода/вывода и имя. В общей форме выглядит это примерно
так:
.PP
.in +4n
.EX
ether=irq,iobase[,param_1[,...param_8]],name
.EE
.in
.PP
Первый не числовой аргумент воспринимается как имя. Значения param_n (если
есть) у разных карт/драйверов, обычно, имеют различный смысл. Обычно,
значения param_n используются для указания адреса общей памяти, выбранного
интерфейса, канала DMA и т. п.
.PP
Как правило, этот параметр используется для принудительного определения
второй сетевой карты, так как по умолчанию определяется только одна. Этого
можно достичь заданием простой строки:
.PP
.in +4n
.EX
ether=0,0,eth1
.EE
.in
.PP
Обратите внимание, что ноль в качестве значения IRQ и базы ввода/вывода
указывает драйверам определять значения автоматически.
.PP
Исчерпывающей документацией по использованию нескольких карт и по
специфичным для карты/драйвера значениям param_n можно считать
Ethernet\-HowTo. Желающие могут обратиться к соответствующему их карте
разделу этого документа.
.SS "Драйвер дисковода"
У драйвера дисковода есть много параметров. Все они перечислены в файле
\fIDocumentation/blockdev/floppy.txt\fP (в старых ядрах —
\fIDocumentation/floppy.txt\fP или в совсем старых ядрах —
\fIdrivers/block/README.fd\fP) из дерева исходного кода ядра
Linux. Дополнительную информацию ищите в этом файле.
.SS "Драйвер звука"
Драйвер звука также может учитывать параметры загрузки для замены встроенных
при компиляции значений по умолчанию. Не рекомендуется заново определять
значение параметров, так как это довольно сложно. Описание находится в файле
\fIDocumentation/sound/oss/README.OSS\fP (и в \fIdrivers/sound/Readme.linux\fP у
старых ядер) в дереве исходного кода ядра Linux. Параметр загрузки имеет
следующий вид:
.PP
.in +4n
.EX
sound=device1[,device2[,device3...[,device10]]]
.EE
.in
.PP
где каждое значение устройства N имеет формат 0xTaaaId, байты которого
используются следующим образом:
.PP
T — тип устройства: 1=FM, 2=SB, 3=PAS, 4=GUS, 5=MPU401, 6=SB16,
7=SB16\-MPU401
.PP
aaa — адрес ввода/вывода в шестнадцатеричном виде.
.PP
I — линия прерывания в шестнадцатеричном виде (т. е. 10=a, 11=b, …)
.PP
d — канал DMA.
.PP
Как видите, результат довольно непонятен, поэтому лучше установить
собственные значения при компиляции. Параметр загрузки \&«sound=0» полностью
отключит драйвер звука.
.SS "Драйвер принтера"
.TP 
\fB«lp=»\fP
.br
Синтаксис:
.IP
.in +4n
.EX
lp=0
lp=auto
lp=reset
lp=port[,port...]
.EE
.in
.IP
Вы можете указать драйверу принтера, какие порты надо использовать, а какие
не использовать совсем. Это удобно, если не нужно, чтобы драйвер принтера
захватывал все доступные параллельные порты, и оставлял их другим драйверам
(таким, как PLIP, PPA).
.IP
.\" .SH AUTHORS
.\" Linus Torvalds (and many others)
В значении перечисляется несколько названий портов. Например, при
lp=none,parport0 используется первый параллельный порт для lp1 и отключается
lp0. Чтобы вообще отключить драйвер принтера, укажите lp=0.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBklogd\fP(8), \fBmount\fP(8)
.PP
Актуальную информацию можно найти в файле исходного кода ядра
\fIDocumentation/admin\-guide/kernel\-parameters.txt\fP.
