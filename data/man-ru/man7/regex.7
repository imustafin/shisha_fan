.\" -*- mode: troff; coding: UTF-8 -*-
.ie  t .ds dg \(dg
.el .ds dg (!)
.\" From Henry Spencer's regex package (as found in the apache
.\" distribution). The package carries the following copyright:
.\"
.\"  Copyright 1992, 1993, 1994 Henry Spencer.  All rights reserved.
.\" %%%LICENSE_START(MISC)
.\"  This software is not subject to any license of the American Telephone
.\"  and Telegraph Company or of the Regents of the University of California.
.\"
.\"  Permission is granted to anyone to use this software for any purpose
.\"  on any computer system, and to alter it and redistribute it, subject
.\"  to the following restrictions:
.\"
.\"  1. The author is not responsible for the consequences of use of this
.\"     software, no matter how awful, even if they arise from flaws in it.
.\"
.\"  2. The origin of this software must not be misrepresented, either by
.\"     explicit claim or by omission.  Since few users ever read sources,
.\"     credits must appear in the documentation.
.\"
.\"  3. Altered versions must be plainly marked as such, and must not be
.\"     misrepresented as being the original software.  Since few users
.\"     ever read sources, credits must appear in the documentation.
.\"
.\"  4. This notice may not be removed or altered.
.\" %%%LICENSE_END
.\"
.\" In order to comply with `credits must appear in the documentation'
.\" I added an AUTHOR paragraph below - aeb.
.\"
.\" In the default nroff environment there is no dagger \(dg.
.\"
.\" 2005-05-11 Removed discussion of `[[:<:]]' and `[[:>:]]', which
.\" 	appear not to be in the glibc implementation of regcomp
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH REGEX 7 2009\-01\-12 "" "Руководство программиста Linux"
.SH ИМЯ
regex \- регулярные выражения POSIX.2
.SH ОПИСАНИЕ
Регулярные выражения (РВ) стандарта POSIX.2 могут быть двух видов: новые РВ
(по сути, использующиеся в \fIegrep\fP; в POSIX.2 их называют ещё
«расширенными» РВ) и устаревшие РВ (по сути, использующиеся в \fBed\fP(1); в
POSIX.2 их называют ещё «основными» РВ). Устаревшие РВ существуют, в
основном, для совместимости с некоторыми старыми программами (они будут
подробнее рассмотрены в конце этого документа). В POSIX.2 не разъяснены
некоторые вопросы синтаксиса РВ; знаком \*(dg отмечаются описания, которые
могут быть не полностью совместимы с другими реализациями POSIX.2.
.PP
Новое РВ — одна\*(dg или более непустых\*(dg \fIветвей\fP, разделённых
\(aq|\(aq. Соответствием считается, если есть совпадение для любой из её
ветвей.
.PP
Ветвь состоит из одной\*(dg или более \fIчастей\fP. Ветвь сначала ведёт поиск
соответствий с первой, затем с второй (и т. п.) её частями.
.PP
Часть — это \fIатом\fP, за которым может следовать одиночный\*(dg символ
\(aq*\(aq, \(aq+\(aq, \(aq?\(aq или \fIинтервал\fP. Если за атомом следует
символ \(aq*\(aq, это означает, что совпадающая с атомом последовательность
может встречаться 0 или более раз. Если за атомом следует символ \(aq+\(aq,
это означает, что совпадающая с атомом последовательность может встречаться
1 или более раз. Если за атомом следует символ \(aq?\(aq, это означает, что
совпадающая с атомом последовательность может встречаться 0 или 1 раз.
.PP
\fIИнтервал\fP — это символ \(aq{\(aq, после которого стоит беззнаковое целое
десятичное число, за которым может следовать символ \(aq,\(aq, далее,
возможно, находится ещё одно беззнаковое целое десятичное число, и в конце
интервала обязательно стоит символ \(aq}\(aq. Числа должны находиться в
промежутке от 0 до \fBRE_DUP_MAX\fP (255\*(dg) включительно, а если указано два
числа, то первое не должно превышать второе. Атом с интервалом, в котором
есть одно число \fIi\fP и нет запятой, соответствует последовательности,
повторяющейся точно \fIi\fP раз. Атом с интервалом, содержащим число \fIi\fP и
запятую, соответствует последовательности, повторяющейся \fIi\fP и более
раз. Атом с интервалом, содержащим два числа \fIi\fP и \fIj\fP, соответствует
последовательности, повторяющейся от \fIi\fP до \fIj\fP раз включительно.
.PP
Атом — это регулярное выражение, заключённое в «\fI()\fP» (соответствующее
регулярному выражению), пустые скобки «\fI()\fP» (соответствуют строке
null)\*(dg, \fIвыражение в квадратных скобках\fP (см. ниже), \(aq.\(aq
(соответствует любому одному символу), \(aq^\(aq (соответствует строке null
в начале строки), \(aq$\(aq (соответствует строке null в конце строки),
\(aq\e\(aq со следующим после него одним из символов «\fI^.[$()|*+?{\e\fP»
(соответствует этому символу, как он есть), символ \(aq\e\(aq с последующим
символом, отличным от предыдущего\*(dg (соответствует этому символу, как он
есть, как если бы \(aq\e\(aq отсутствовал\*(dg), или одиночный символ без
специального назначения (соответствует этому символу). Символ \(aq{\(aq с
последующим символом, не являющимся цифрой, соответствует символу, а не
началу интервала\*(dg. Нельзя заканчивать РВ символом \(aq\e\(aq.
.PP
\fIВыражение в квадратных скобках\fP — список символов, заключенный в
«\fI[]\fP». Обычно, оно соответствует любому отдельному символу из списка (но
см. ниже). Если список начинается с \(aq^\(aq, то он соответствует любому
отдельному символу (но см. ниже) \fIне\fP из приведённого списка. Если два
символа в списке разделены \(aq\-\(aq, то это считается сокращением полного
\fIдиапазона\fP символов, заключённого между этими двумя символами (включая и
их) объединяющей последовательности, например, «\fI[0\-9]\fP» в кодах ASCII
соответствует любой десятичной цифре. Нельзя\*(dg в двух диапазонах
указывать один и тот же символ, например, «a\-c\-e». Диапазоны сильно зависят
от объединяющей последовательности, и в переносимых программах их лучше не
использовать.
.PP
Для того, чтобы включить в список символ \(aq]\(aq, вам следует поставить
его в начало списка (после символа \(aq^\(aq, если он присутствует). Для
того, чтобы включить в список символ \(aq\-\(aq, поставьте его первым или
последним символом или вторым символом конца диапазона. Для того, чтобы
обозначить символом \(aq\-\(aq начало диапазона, заключите его в «\fI[.\fP» и
«\fI.]\fP», сделав его объединяющим элементом (смотрите далее). За исключением
этих и некоторых других комбинаций, использующих \(aq[\(aq  (см. следующие
параграфы), все остальные специальные символы, включая \(aq\e\(aq, теряют
своё особое назначение в квадратных скобках.
.PP
Если внутри квадратных скобок объединяющий элемент (одиночный символ,
многосимвольная последовательность, которая действует как одиночный символ
или имя объединяющей последовательности) заключен в «\fI[.\fP» и «\fI.]\fP», то он
обозначает последовательность символов как один объединяющий
элемент. Последовательность выражается одиночным элементом списка внутри
квадратных скобок. Таким образом, выражение в скобках, содержащее
многосимвольный объединяющий элемент, может соответствовать более чем одному
символу; например, если последовательность содержит объединяющий элемент
«ch», то РВ «\fI[[.ch.]]*c\fP» соответствует первым пяти символам «chchcc».
.PP
Объединяющий элемент в квадратных скобках, заключенный в «\fI[=\fP» и «\fI=]\fP» —
это класс\-эквивалент, делающий последовательности символов всех объединяющих
элементов эквивалентными одной, включая её саму (если нет больше
эквивалентных объединяющих элементов, то это аналогично выражению,
заключенному в «\fI[.\fP» и «\fI.]\fP»). Например, если o и \o'o^' являются
членами класса\-эквивалента, то «\fI[[=o=]]\fP», «\fI[[=\o'o^'=]]\fP» и
«\fI[o\o'o^']\fP» являются синонимами. Класс\-эквивалент не\*(dg может служить
границей диапазона.
.PP
В выражении в квадратных скобках, имя \fIсимвольного класса\fP, заключенное в
«\fI[:\fP» и «\fI:]\fP», соответствует списку всех символов, принадлежащих этому
классу. Существуют стандартные символьные классы:
.PP
.RS
.TS
l l l.
alnum	digit	punct
alpha	graph	space
blank	lower	upper
cntrl	print	xdigit
.TE
.RE
.PP
.\" As per http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=295666
.\" The following does not seem to apply in the glibc implementation
.\" .PP
.\" There are two special cases\*(dg of bracket expressions:
.\" the bracket expressions "\fI[[:<:]]\fP" and "\fI[[:>:]]\fP" match
.\" the null string at the beginning and end of a word respectively.
.\" A word is defined as a sequence of
.\" word characters
.\" which is neither preceded nor followed by
.\" word characters.
.\" A word character is an
.\" .I alnum
.\" character (as defined by
.\" .BR wctype (3))
.\" or an underscore.
.\" This is an extension,
.\" compatible with but not specified by POSIX.2,
.\" and should be used with
.\" caution in software intended to be portable to other systems.
Эти символьные классы определены в \fBwctype\fP(3). В локали могут быть
определены свои классы. Символьный класс не может использоваться в качестве
границы диапазона.
.PP
В случае, если РВ совпадает более чем с одной подстрокой заданной строки, то
оно считается совпадающим с первой подстрокой строки. Если РВ совпадает
более чем с одной подстрокой начинающейся в этой точке, то оно совпадет с
самой длинной подстрокой. Подвыражения также соответствуют самой длинной
совпадающей подстроке, полное соответствие должно быть наиболее длинным, и
подвыражения, стоящие в РВ первыми, имеют приоритет над остальными,
находящимися далее. Заметим, что высокоуровневые подвыражения имеют
приоритет над низкоуровневыми компонентами подвыражений.
.PP
Длина совпадений измеряется в символах, а не в объединяющих
элементах. Строка null считается длиннее чем не имеющая
совпадений. Например, «\fIbb*\fP» совпадает с тремя средними символами «abbbc»,
«\fI(wee|week)(knights|nights)\fP» совпадает со всеми десятью символами
«weeknights», а когда «\fI(.*).*\fP» сравнивается с «abc», подвыражение в
скобках совпадает со всеми тремя символами; при сравнении «\fI(a*)*\fP» с «bc»
получается, что РВ и подвыражение в скобках соответствуют строке null.
.PP
Если указано учитывать совпадение независимо от регистра, то все различия по
регистру удаляются из алфавита. Когда буква присутствует в различных
регистрах вне квадратных скобок, то она трансформируется в выражение в
квадратных скобках, содержащее оба регистра, например, \(aqx\(aq становится
«\fI[xX]\fP». Если буква уже заключена в скобки, то к ней добавляется и другой
регистр, например, «\fI[x]\fP» становится «\fI[xX]\fP» , а «\fI[^x]\fP» превращается
в «\fI[^xX]\fP».
.PP
Конкретного ограничения длины РВ\*(dg не существует. Однако, в переносимых
программах не следует использовать РВ более 256 байтов, так как реализация
может не принимать таких РВ, но оставаться соответствующей POSIX.
.PP
Устаревшие («основные») РВ отличаются по нескольким аспектам. Символы
\(aq|\(aq, \(aq+\(aq и \(aq?\(aq считаются обычными символами. Для
обозначения границ интервалов используются «\fI\e{\fP» и «\fI\e}\fP», а \(aq{\(aq
и \(aq}\(aq сами по себе являются обычными символами. Для обособления
подвыражений используются «\fI\e(\fP» и «\fI\e)\fP», а \(aq(\(aq и \(aq)\(aq сами
по себе являются обычными символами. Символ \(aq^\(aq является обычным
символом за исключением того случая, когда он стоит в начале РВ или\*(dg в
начале подвыражения в круглых скобках; символ \(aq$\(aq является обычным
символом, кроме того случая, когда он стоит в конце РВ или\*(dg в конце
подвыражения в круглых скобках; символ \(aq*\(aq является обычным, если он
стоит в начале РВ или в начале подвыражения в круглых скобках (возможно,
после символа \(aq^\(aq в самом начале).
.PP
Кроме этого, существует ещё один тип атома — \fIобратная ссылка\fP: \(aq\e\(aq
с последующей за ней ненулевой десятичной цифрой \fId\fP соответствует той
самой последовательности, что и \fId\fP\-е подвыражение в скобках (нумерация
подвыражений считается по их открывающим круглым скобкам, слева
направо). Пример: «\fI\e([bc]\e)\e1\fP» соответствует «bb» или «cc», но не
«bc».
.SH ДЕФЕКТЫ
Наличие двух видов РВ — вынужденная мера.
.PP
В имеющейся на данный момент документации POSIX.2 указано, что символ
\(aq)\(aq при отсутствии \(aq(\(aq; считается обычным; это непреднамеренная
опечатка, которая будет исправлена. Не полагайтесь на это.
.PP
Обратные ссылки — также вынужденная мера, вызывают серьёзные проблемы
эффективности в реализациях. Также они не имеют подробного определения
(например, «\fIa\e(\e(b\e)*\e2\e)*d\fP» соответствует «abbbd»?).
.PP
.\" As per http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=295666
.\" The following does not seem to apply in the glibc implementation
.\" .PP
.\" The syntax for word boundaries is incredibly ugly.
Определение в POSIX.2 совпадения при отключении учёта регистра тоже очень
туманное. Определение типа «один регистр замещает все остальные», по мнению
некоторых специалистов, не является правильным.
.SH АВТОР
.\" Sigh... The page license means we must have the author's name
.\" in the formatted output.
Эта страница взята из пакета regex, написанного Генри Спенсером (Henry
Spencer).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBgrep\fP(1), \fBregex\fP(3)
.PP
POSIX.2, раздел 2.8 (запись регулярных выражений).
