.\" -*- mode: troff; coding: UTF-8 -*-
.\" Extended attributes manual page
.\"
.\" Copyright (C) 2000, 2002, 2007  Andreas Gruenbacher <agruen@suse.de>
.\" Copyright (C) 2001, 2002, 2004, 2007 Silicon Graphics, Inc.
.\" All rights reserved.
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual.  If not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH XATTR 7 2019\-08\-02 Linux "Руководство программиста Linux"
.SH ИМЯ
xattr \- расширенные атрибуты
.SH ОПИСАНИЕ
Расширенные атрибуты представляют собой пары имя:значение, которые постоянно
связаны с файлами и каталогами, подобно тому как строки окружения связаны с
процессом. Атрибут может быть определён или не определён. Если он определён,
то его значение может быть или пустым, или не пустым.
.PP
Расширенные атрибуты дополняют обычные атрибуты, которые связаны со всеми
inode в файловой системе (т. е., данные \fBstat\fP(2)). Часто они используются
для предоставления дополнительных возможностей файловой системы, например,
дополнительные возможности безопасности, такие как списки контроля доступа
(ACL), могут быть реализованы через расширенные атрибуты.
.PP
Пользователи, у которых доступ к поиску для файла или каталога могут
использовать \fBlistxattr\fP(2) для получения списка имён атрибутов,
определённых для этого файла или каталога.
.PP
Расширенные атрибуты доступны как атомарные объекты. При чтении
(\fBgetxattr\fP(2)) возвращается всё значение атрибута и происходит его
сохранение в буфер. При записи (\fBsetxattr\fP(2)) происходит замещение старого
значения на новое.
.PP
Место под расширенные атрибуты может быть учтено в дисковой квоте владельца
файла и файловой группы.
.SS "Пространства имён расширенных атрибутов"
Имена атрибутов представляют собой строки с null в конце. Имя атрибута
всегда указывается в полной форме — \fIпространство_имён.атрибут\fP, например,
\fIuser.mime_type\fP, \fItrusted.md5sum\fP, \fIsystem.posix_acl_access\fP или
\fIsecurity.selinux\fP.
.PP
Механизм пространства имён используется для определения различных классов
расширенных атрибутов. Эти различные классы существуют по нескольким
причинам; например, права доступа и мандаты, требуемые для работы с
расширенными атрибутами в одном пространстве имён, могут отличаться в
другом.
.PP
В настоящее время определены следующие классы: \fIsecurity\fP, \fIsystem\fP,
\fItrusted\fP и \fIuser\fP. В будущем могут появиться дополнительные классы.
.SS "Расширенные атрибуты безопасности"
Пространство имён атрибутов безопасности используется модулями безопасности
ядра, такими как Security Enhanced Linux, а также для реализации мандатов
файлов (смотрите \fBcapabilities\fP(7)). Доступ на чтение и запись атрибутов
безопасности зависит от политики, реализуемой модулем безопасности для
каждого атрибута безопасности. Если модуль безопасности не загружен, то все
процессы могут читать расширенные атрибуты безопасности, а запись доступна
только процессам с мандатом \fBCAP_SYS_ADMIN\fP.
.SS "Системные расширенные атрибуты"
Системные расширенные атрибуты используются ядром для хранения системных
объектов, таких как списки контроля доступа. Доступ на чтение и запись
системных атрибутов зависит от политики, реализованной файловой системой
ядром для каждого системного атрибута.
.SS "Доверительные расширенные атрибуты"
Доверительные расширенные атрибуты видимы и доступны только для процессов с
мандатом \fBCAP_SYS_ADMIN\fP. Атрибуты этого класса используются при реализации
механизмов в пользовательском пространстве (т. е., вне ядра) для хранения
информации в расширенных атрибутах, к которым у обычных процессов не должно
быть доступа.
.SS "Пользовательские расширенные атрибуты"
Пользовательские расширенные атрибуты могут быть назначены файлам и
каталогам для хранения произвольной дополнительной информации, такой как тип
mime, используемый набор символов или кодировка файла. Права доступа к
пользовательским атрибутам определяется битами прав файлов: для получения
значения атрибута требуется право на чтение, а для изменения значения
атрибута требуется право на запись.
.PP
Биты прав по разному учитываются между обычными файлами и каталогами и
специальными файлами и символическими ссылками. У обычных файлов и каталогов
битами прав определяется доступ к содержимому файлов, а у специальных файлов
ими определяется доступ к устройству, которое описывает специальный
файл. Файловые права на символические ссылки не используются при проверке
доступа. Эти различия позволили бы пользователям использовать ресурсы
файловой системы без учёта выделенных дисковых квот для группы или всем
остальным, имеющим доступ на запись в специальные файлы и каталоги.
.PP
По этой причине пользовательские расширенные атрибуты разрешены только для
обычных файлов и каталогов, а доступ к пользовательским расширенным
атрибутам разрешён только владельцу и пользователям с соответствующими
мандатами для каталогов с установленным закрепляющим битом (описание
закрепляющего бита смотрите в справочной странице \fBchmod\fP(1)).
.SS "Различия с файловой системой"
Ядро и файловая система могут ограничивать максимальное количество и размер
расширенных атрибутов, которые можно связать с файлом. size of extended
attributes that can be associated with a file. VFS налагает ограничение на
длину имени атрибута в 255 байт и на значение атрибута в 64\ КБ. Размер
возвращаемого списка имён атрибутов также ограничивается 64\ КБ (смотрите
раздел ДЕФЕКТЫ в \fBlistxattr\fP(2)).
.PP
Для использования пользовательских расширенных атрибутов в некоторых
файловых системах, таких как Reiserfs (и, исторически, ext2 и ext3),
требуется, чтобы файловая система была смонтирована с параметром
монтирования \fBuser_xattr\fP.
.PP
В текущих реализациях файловых систем ext2, ext3 и ext4 общее количество
байт, используемое для имён и значений расширенных атрибутов всех файлов,
должно помещаться в один блок файловой системы (1024, 2048 или 4096 байт, в
зависимости от размера блока, указанного при создании файловой системы).
.PP
В реализациях файловых систем Btrfs, XFS и Reiserfs нет ограничения на
количество расширенных атрибутов, связанных с файлом, а для хранения
информации о расширенных атрибутах на диске используются масштабируемые
алгоритмы.
.PP
В реализациях файловых систем JFS, XFS и Reiserfs ограничение на количество
байт, используемых для значения EA, задаётся потолком VFS.
.PP
В реализации файловой системы Btrfs общее количество байт, используемое для
имени, значения и расходов реализации, ограничено значением файловой системы
\fInodesize\fP (по умолчанию 16\ КБ).
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
Расширенные атрибуты не описаны в POSIX.1, но некоторых других системах
(например, BSD и Solaris) есть подобное свойство.
.SH ЗАМЕЧАНИЯ
Так как файловые системы, на которых хранятся расширенные атрибуты, также
могут использоваться на архитектурах с разным порядком байт и размером
машинного слова, нужно позаботиться о том, чтобы сохраняемые значения
атрибутов были в архитектуро\-независимом формате.
.PP
.\" .SH AUTHORS
.\" Andreas Gruenbacher,
.\" .RI < a.gruenbacher@bestbits.at >
.\" and the SGI XFS development team,
.\" .RI < linux-xfs@oss.sgi.com >.
Прежде эта страница называлась \fBattr\fP(5).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBgetfattr\fP(1), \fBsetfattr\fP(1), \fBgetxattr\fP(2), \fBioctl_iflags\fP(2),
\fBlistxattr\fP(2), \fBremovexattr\fP(2), \fBsetxattr\fP(2), \fBacl\fP(5),
\fBcapabilities\fP(7)  \fBselinux\fP(8)
