.\" -*- mode: troff; coding: UTF-8 -*-
.\"
.\" Copyright (C) 2014 Red Hat, Inc. All Rights Reserved.
.\" Written by David Howells (dhowells@redhat.com)
.\"
.\" %%%LICENSE_START(GPLv2+_SW_ONEPARA)
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License
.\" as published by the Free Software Foundation; either version
.\" 2 of the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH USER\-KEYRING 7 2017\-03\-13 Linux "Руководство программиста Linux"
.SH ИМЯ
user\-keyring \- пользовательская связка ключей
.SH ОПИСАНИЕ
Пользовательская связка ключей используется для хранения ключей
пользователя. Для каждого UID у ядра есть своя связка ключей пользователя,
которая доступна из всех процессов с этим UID. Пользовательская связка
ключей имеет имя (описание) в виде \fI_uid.<UID>\fP, где
\fI<UID>\fP идентификатор пользователя соответствующего пользователя.
.PP
Пользовательская связка ключей связана с записью, которая обслуживается
ядром для UID. Она начинает существовать при попытке первого обращения к
пользовательской связке ключей, к \fBuser\-session\-keyring\fP(7) или к
\fBsession\-keyring\fP(7). Связка ключей существует привязанной всё время пока
выполняются процессы с этим реальным UID или остаются открытыми файлы,
открытые этими процессами (связка ключей также может быть привязана
бесконечно, если её прицепить к другой связке ключей).
.PP
Обычно, пользовательская связка ключей создаётся \fBpam_keyinit\fP(8) при входе
пользователя в систему.
.PP
По умолчанию в пользовательской связке ключей вызов \fBrequest_key\fP(2) не
производит поиск. Когда \fBpam_keyinit\fP(8) создаёт связку ключей сеанса, он
добавляет в неё пользовательскую связку ключей, и таким образом поиск
выполняется в пользовательской связке ключей, если происходит поиск в связке
ключей сеанса.
.PP
Существует специальный серийный номер, \fBKEY_SPEC_USER_KEYRING\fP, который
можно указывать вместо реального серийного номера пользовательской связки
ключей вызывающего процесса.
.PP
В утилите \fBkeyctl\fP(1) подобным образом можно использовать «\fB@u\fP» вместо
числового идентификатора ключа.
.PP
Пользовательские связки ключей не зависят от \fBclone\fP(2), \fBfork\fP(2),
\fBvfork\fP(2), \fBexecve\fP(2) и \fB_exit\fP(2) за исключением того, что эта связка
ключей уничтожается когда запись UID уничтожается при завершении последнего
привязанного процесса.
.PP
Если нужно, чтобы ключ, связанный с пользователем, существовал и после сбора
мусорщиком записи UID — например, для сценария \fBcron\fP(8) — то должна быть
использована \fBpersistent\-keyring\fP(7).
.PP
Если связка ключей пользователя не существует на момент доступа, то она
создаётся.
.SH "СМОТРИТЕ ТАКЖЕ"
.ad l
.nh
\fBkeyctl\fP(1), \fBkeyctl\fP(3), \fBkeyrings\fP(7), \fBpersistent\-keyring\fP(7),
\fBprocess\-keyring\fP(7), \fBsession\-keyring\fP(7), \fBthread\-keyring\fP(7),
\fBuser\-session\-keyring\fP(7), \fBpam_keyinit\fP(8)
