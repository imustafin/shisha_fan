.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 2016 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SIGNAL\-SAFETY 7 2017\-03\-13 Linux "Руководство программиста Linux"
.SH ИМЯ
signal\-safety \- функции async\-signal\-safe
.SH ОПИСАНИЕ
Функцией \fIasync\-signal\-safe\fP называется функция, которую безопасно вызывать
внутри обработчика сигналов. Многие функции \fIне\fP являются
async\-signal\-safe. В частности, нереентерабельные функции, обычно,
небезопасно вызывать в обработчиках сигналов.
.PP
Виды проблем, которые делают функцию небезопасной, можно быстро понять на
примере реализации библиотеки \fIstdio\fP, все функции которой являются не
async\-signal\-safe.
.PP
При выполнении буферизируемого ввода\-вывода в файл функции \fIstdio\fP должны
вести статически выделенный буфер и связанные с ним счётчики и индексы (или
указатели), содержащие количество данных и текущее положение в
буфере. Предположим, что основная программа находится в середине вызова
функции \fIstdio\fP, например \fBprintf\fP(3), которая обновляет часть буфера и
связанных переменных. Если в этот момент программа прервётся обработчиком
сигнала, который также вызывает \fBprintf\fP(3), то второй вызов \fBprintf\fP(3)
будет работать с не целостными данными и результат будет непредсказуем.
.PP
Чтобы не возникало проблем с небезопасными функциями есть два варианта:
.IP 1. 3
Следить, чтобы (а) обработчик сигнала вызывал только функции
async\-signal\-safe, и (б) сам обработчик сигнала был реентерабельным по
отношению к глобальным переменным основной программы.
.IP 2.
Блокировать доставку сигнала в основной программе при вызове небезопасных
функций или при работе с глобальными данными, доступными из обработчика
сигнала.
.PP
Обычно, второй вариант труден для программ любой сложности, поэтому
используется первый вариант.
.PP
В POSIX.1 определён набор функций, реализация которых должна быть
async\-signal\-safe (реализация может предоставлять безопасную реализацию и
других функций, но это не требуется стандартом и другие реализации могут не
предоставлять те же гарантии) Обычно, функция является async\-signal\-safe или
потому что она реентерабельная, или из\-за её атомарности по отношению к
сигналам (т. е., её выполнение не может быть прервано обработчиком сигнала).
.PP
Набор функций async\-signal\-safe по POSIX.1 показан в таблице далее. Функции,
если не указано обратное, являются async\-signal\-safe и по POSIX.1\-2001; в
таблице отмечены изменения в последующих стандартах.
.PP
.TS
lb lb
l l.
функция	Примечания
\fBabort\fP(3)	Добавлена в POSIX.1\-2003
\fBaccept\fP(2)
\fBaccess\fP(2)
\fBaio_error\fP(3)
\fBaio_return\fP(3)
\fBaio_suspend\fP(3)	смотрите замечания далее
\fBalarm\fP(2)
\fBbind\fP(2)
\fBcfgetispeed\fP(3)
\fBcfgetospeed\fP(3)
\fBcfsetispeed\fP(3)
\fBcfsetospeed\fP(3)
\fBchdir\fP(2)
\fBchmod\fP(2)
\fBchown\fP(2)
\fBclock_gettime\fP(2)
\fBclose\fP(2)
\fBconnect\fP(2)
\fBcreat\fP(2)
\fBdup\fP(2)
\fBdup2\fP(2)
\fBexecl\fP(3)	Добавлена в POSIX.1\-2008; смотрите замечания ниже
\fBexecle\fP(3)	смотрите замечания далее
\fBexecv\fP(3)	Добавлена в POSIX.1\-2008
\fBexecve\fP(2)
\fB_exit\fP(2)
\fB_Exit\fP(2)
\fBfaccessat\fP(2)	Добавлена в POSIX.1\-2008
\fBfchdir\fP(2)	Добавлена в POSIX.1\-2013
\fBfchmod\fP(2)
\fBfchmodat\fP(2)	Добавлена в POSIX.1\-2008
\fBfchown\fP(2)
\fBfchownat\fP(2)	Добавлена в POSIX.1\-2008
\fBfcntl\fP(2)
\fBfdatasync\fP(2)
\fBfexecve\fP(3)	Добавлена в POSIX.1\-2008
\fBffs\fP(3)	Добавлена в POSIX.1\-2016
\fBfork\fP(2)	смотрите замечания далее
\fBfstat\fP(2)
\fBfstatat\fP(2)	Добавлена в POSIX.1\-2008
\fBfsync\fP(2)
\fBftruncate\fP(2)
\fBfutimens\fP(3)	Добавлена в POSIX.1\-2008
\fBgetegid\fP(2)
\fBgeteuid\fP(2)
\fBgetgid\fP(2)
\fBgetgroups\fP(2)
\fBgetpeername\fP(2)
\fBgetpgrp\fP(2)
\fBgetpid\fP(2)
\fBgetppid\fP(2)
\fBgetsockname\fP(2)
\fBgetsockopt\fP(2)
\fBgetuid\fP(2)
\fBhtonl\fP(3)	Добавлена в POSIX.1\-2016
\fBhtons\fP(3)	Добавлена в POSIX.1\-2016
\fBkill\fP(2)
\fBlink\fP(2)
\fBlinkat\fP(2)	Добавлена в POSIX.1\-2008
\fBlisten\fP(2)
\fBlongjmp\fP(3)	Добавлена в POSIX.1\-2016; смотрите замечания ниже
\fBlseek\fP(2)
\fBlstat\fP(2)
\fBmemccpy\fP(3)	Добавлена в POSIX.1\-2016
\fBmemchr\fP(3)	Добавлена в POSIX.1\-2016
\fBmemcmp\fP(3)	Добавлена в POSIX.1\-2016
\fBmemcpy\fP(3)	Добавлена в POSIX.1\-2016
\fBmemmove\fP(3)	Добавлена в POSIX.1\-2016
\fBmemset\fP(3)	Добавлена в POSIX.1\-2016
\fBmkdir\fP(2)
\fBmkdirat\fP(2)	Добавлена в POSIX.1\-2008
\fBmkfifo\fP(3)
\fBmkfifoat\fP(3)	Добавлена в POSIX.1\-2008
\fBmknod\fP(2)	Добавлена в POSIX.1\-2008
\fBmknodat\fP(2)	Добавлена в POSIX.1\-2008
\fBntohl\fP(3)	Добавлена в POSIX.1\-2016
\fBntohs\fP(3)	Добавлена в POSIX.1\-2016
\fBopen\fP(2)
\fBopenat\fP(2)	Добавлена в POSIX.1\-2008
\fBpause\fP(2)
\fBpipe\fP(2)
\fBpoll\fP(2)
\fBposix_trace_event\fP(3)
\fBpselect\fP(2)
\fBpthread_kill\fP(3)	Добавлена в POSIX.1\-2013
\fBpthread_self\fP(3)	Добавлена в POSIX.1\-2013
\fBpthread_sigmask\fP(3)	Добавлена в POSIX.1\-2013
\fBraise\fP(3)
\fBread\fP(2)
\fBreadlink\fP(2)
\fBreadlinkat\fP(2)	Добавлена в POSIX.1\-2008
\fBrecv\fP(2)
\fBrecvfrom\fP(2)
\fBrecvmsg\fP(2)
\fBrename\fP(2)
\fBrenameat\fP(2)	Добавлена в POSIX.1\-2008
\fBrmdir\fP(2)
\fBselect\fP(2)
\fBsem_post\fP(3)
\fBsend\fP(2)
\fBsendmsg\fP(2)
\fBsendto\fP(2)
\fBsetgid\fP(2)
\fBsetpgid\fP(2)
\fBsetsid\fP(2)
\fBsetsockopt\fP(2)
\fBsetuid\fP(2)
\fBshutdown\fP(2)
\fBsigaction\fP(2)
\fBsigaddset\fP(3)
\fBsigdelset\fP(3)
\fBsigemptyset\fP(3)
\fBsigfillset\fP(3)
\fBsigismember\fP(3)
\fBsiglongjmp\fP(3)	Добавлена в POSIX.1\-2016; смотрите замечания ниже
\fBsignal\fP(2)
\fBsigpause\fP(3)
\fBsigpending\fP(2)
\fBsigprocmask\fP(2)
\fBsigqueue\fP(2)
\fBsigset\fP(3)
\fBsigsuspend\fP(2)
\fBsleep\fP(3)
\fBsockatmark\fP(3)	Добавлена в POSIX.1\-2004
\fBsocket\fP(2)
\fBsocketpair\fP(2)
\fBstat\fP(2)
\fBstpcpy\fP(3)	Добавлена в POSIX.1\-2016
\fBstpncpy\fP(3)	Добавлена в POSIX.1\-2016
\fBstrcat\fP(3)	Добавлена в POSIX.1\-2016
\fBstrchr\fP(3)	Добавлена в POSIX.1\-2016
\fBstrcmp\fP(3)	Добавлена в POSIX.1\-2016
\fBstrcpy\fP(3)	Добавлена в POSIX.1\-2016
\fBstrcspn\fP(3)	Добавлена в POSIX.1\-2016
\fBstrlen\fP(3)	Добавлена в POSIX.1\-2016
\fBstrncat\fP(3)	Добавлена в POSIX.1\-2016
\fBstrncmp\fP(3)	Добавлена в POSIX.1\-2016
\fBstrncpy\fP(3)	Добавлена в POSIX.1\-2016
\fBstrnlen\fP(3)	Добавлена в POSIX.1\-2016
\fBstrpbrk\fP(3)	Добавлена в POSIX.1\-2016
\fBstrrchr\fP(3)	Добавлена в POSIX.1\-2016
\fBstrspn\fP(3)	Добавлена в POSIX.1\-2016
\fBstrstr\fP(3)	Добавлена в POSIX.1\-2016
\fBstrtok_r\fP(3)	Добавлена в POSIX.1\-2016
\fBsymlink\fP(2)
\fBsymlinkat\fP(2)	Добавлена в POSIX.1\-2008
\fBtcdrain\fP(3)
\fBtcflow\fP(3)
\fBtcflush\fP(3)
\fBtcgetattr\fP(3)
\fBtcgetpgrp\fP(3)
\fBtcsendbreak\fP(3)
\fBtcsetattr\fP(3)
\fBtcsetpgrp\fP(3)
\fBtime\fP(2)
\fBtimer_getoverrun\fP(2)
\fBtimer_gettime\fP(2)
\fBtimer_settime\fP(2)
\fBtimes\fP(2)
\fBumask\fP(2)
\fBuname\fP(2)
\fBunlink\fP(2)
\fBunlinkat\fP(2)	Добавлена в POSIX.1\-2008
\fButime\fP(2)
\fButimensat\fP(2)	Добавлена в POSIX.1\-2008
\fButimes\fP(2)	Добавлена в POSIX.1\-2008
\fBwait\fP(2)
\fBwaitpid\fP(2)
\fBwcpcpy\fP(3)	Добавлена в POSIX.1\-2016
\fBwcpncpy\fP(3)	Добавлена в POSIX.1\-2016
\fBwcscat\fP(3)	Добавлена в POSIX.1\-2016
\fBwcschr\fP(3)	Добавлена в POSIX.1\-2016
\fBwcscmp\fP(3)	Добавлена в POSIX.1\-2016
\fBwcscpy\fP(3)	Добавлена в POSIX.1\-2016
\fBwcscspn\fP(3)	Добавлена в POSIX.1\-2016
\fBwcslen\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsncat\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsncmp\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsncpy\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsnlen\fP(3)	Добавлена в POSIX.1\-2016
\fBwcspbrk\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsrchr\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsspn\fP(3)	Добавлена в POSIX.1\-2016
\fBwcsstr\fP(3)	Добавлена в POSIX.1\-2016
\fBwcstok\fP(3)	Добавлена в POSIX.1\-2016
\fBwmemchr\fP(3)	Добавлена в POSIX.1\-2016
\fBwmemcmp\fP(3)	Добавлена в POSIX.1\-2016
\fBwmemcpy\fP(3)	Добавлена в POSIX.1\-2016
\fBwmemmove\fP(3)	Добавлена в POSIX.1\-2016
\fBwmemset\fP(3)	Добавлена в POSIX.1\-2016
\fBwrite\fP(2)
.TE
.sp 1
Замечания:
.IP * 3
В POSIX.1\-2001 и POSIX.1\-2004 требуется, чтобы функции \fBfpathconf\fP(3),
\fBpathconf\fP(3) и \fBsysconf\fP(3) были async\-signal\-safe, но это требование
удалено в POSIX.1\-2008.
.IP *
Если обработчик сигнала прерывает выполнение небезопасной функции и
обработчик завершается вызовом \fBlongjmp\fP(3) или \fBsiglongjmp\fP(3) и далее
программа вызывает небезопасную функцию, то поведение программы
непредсказуемо.
.IP *
.\" http://www.opengroup.org/austin/aardvark/latest/xshbug3.txt
.\"
В POSIX.1\-2003 уточнено, что если приложение вызывает \fBfork\fP(2) из
обработчика сигнала и и зарегистрированный обработчик fork (с помощью
\fBpthread_atfork\fP(3)) вызывает не async\-signal\-safe функцию, то поведение
непредсказуемо. Вероятно, в будущих версиях стандарта вызов \fBfork\fP(2) будет
удалён из списка функций async\-signal\-safe.
.SS "Отклонения в библиотеке GNU C"
В библиотеке GNU C есть следующие известные отклонения от стандарта:
.IP * 3
.\" https://sourceware.org/bugzilla/show_bug.cgi?id=19534
До glibc 2.24 внутри \fBexecl\fP(3) и \fBexecle\fP(3) использовалась \fBrealloc\fP(3)
и поэтому они были не безопасны для асинхронных сигналов. Это было
исправлено в glibc 2.24.
.IP *
.\" FIXME . https://sourceware.org/bugzilla/show_bug.cgi?id=13172
Реализация \fBaio_suspend\fP(3) в glibc не является безопасной для асинхронных
сигналов, так как в ней используется \fBpthread_mutex_lock\fP(3).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBsigaction\fP(2), \fBsignal\fP(7), \fBstandards\fP(7)
