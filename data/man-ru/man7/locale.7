.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" and Copyright (C) 2014 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified Sat Jul 24 17:28:34 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Jun 01 17:16:34 1997 by Jochen Hein
.\"   <jochen.hein@delphi.central.de>
.\" Modified Thu Apr 25 00:43:19 2002 by Bruno Haible <bruno@clisp.org>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LOCALE 7 2019\-03\-06 Linux "Руководство программиста Linux"
.SH ИМЯ
locale \- описание поддержки нескольких языков
.SH ОБЗОР
.nf
\fB#include <locale.h>\fP
.fi
.SH ОПИСАНИЕ
Локаль — это сочетание языковых и культурных аспектов. Они включают в себя:
язык сообщений, различные наборы символов, лексикографические соглашения и
т.п. Программа должна определять локализацию и действовать согласно её
установкам в целях достижения взаимосвязи различных культур.
.PP
Файл \fI<locale.h>\fP описывает типы данных, функции и макросы,
необходимые для выполнения этой задачи.
.PP
В нём описаны функции: \fBsetlocale\fP(3), устанавливающая текущую локаль и
\fBlocaleconv\fP(3), которая возвращает информацию о форматировании чисел.
.PP
Существуют различные категории информации в локали, которые программа может
использовать; они описаны как макросы. Используя их в качестве первого
аргумента функции \fBsetlocale\fP(3), можно установить значение значение
категории в желаемой локали:
.TP 
\fBLC_ADDRESS\fP (расширение GNU, начиная с glibc 2.2)
.\" See ISO/IEC Technical Report 14652
Изменяет настройки, которые описывают форматы (например, почтовый адрес),
используемые для описания местонахождения и географических
объектов. Приложения, в которых требуется эта информация, могут использовать
функцию \fBnl_langinfo\fP(3) для получения нестандартных элементов, таких как
\fB_NL_ADDRESS_COUNTRY_NAME\fP (название страны на языке локали) и
\fB_NL_ADDRESS_LANG_NAME\fP (название языка на языке локали), которая
возвращает строку, например «Deutschland» и «Deutsch» (для локалей с
немецким языком) (остальные названия элементов перечислены в
\fI<langinfo.h>\fP).
.TP 
\fBLC_COLLATE\fP
Эта категория определяет правила сравнения, используемые при сортировке и
регулярных выражениях, включая равенство классов символов и сравнение
многосимвольных элементов. Эта категория локали изменяет поведение функций
\fBstrcoll\fP(3) и \fBstrxfrm\fP(3), которые используются для сравнения строк с
учётом местного алфавита. Например, немецкая эсцет (sharp s) рассматривается
как «ss».
.TP 
\fBLC_CTYPE\fP
Эта категория определяет интерпретацию последовательности байт в символы
(например, одиночный или многобайтовый символ), классификацию символов
(например, буквенный или цифровой) и поведение классов символов. В системах
с glibc эта категория также определяет правила транслитерации символов для
\fBiconv\fP(1) и \fBiconv\fP(3). Она изменяет поведение функций обработки и
классификации символов, таких как \fBisupper\fP(3) и \fBtoupper\fP(3), а также
многобайтных символьных функций, таких как \fBmblen\fP(3) или \fBwctomb\fP(3).
.TP 
\fBLC_IDENTIFICATION\fP (расширение GNU, начиная с glibc 2.2)
.\" See ISO/IEC Technical Report 14652
Изменяет настройки, которые относятся к метаданным локали. Приложения, в
которых требуется эта информация, могут использовать функцию
\fBnl_langinfo\fP(3) для получения нестандартных элементов, таких как
\fB_NL_IDENTIFICATION_TITLE\fP (заголовок данной локали) и
\fB_NL_IDENTIFICATION_TERRITORY\fP (географическое расположение, для которой
создавалась локаль), которая возвращает строку, например «English locale for
the USA» и «USA» (остальные названия элементов перечислены в
\fI<langinfo.h>\fP).
.TP 
\fBLC_MONETARY\fP
Эта категория определяет форматирования, используемое для денежных
значений. Она изменяет информацию, возвращаемую функцией \fBlocaleconv\fP(3) ,
которая описывает способ отображения числа, например, необходимо ли
использовать в качестве десятичного разделителя точку или запятую. Эта
информация используется в функции \fBstrfmon\fP(3).
.TP 
\fBLC_MESSAGES\fP
Эта категория изменяет язык отображаемых сообщений и указывает, как должны
выглядеть положительный и отрицательный ответы. Библиотека GNU C содержит
функции \fBgettext\fP(3), \fBngettext\fP(3) и \fBrpmatch\fP(3) для более удобного
использования этой информации. Семейство функций GNU gettext так же
учитывает переменную окружения \fBLANGUAGE\fP (содержащую через двоеточие
список локалей), если указана допустимая локаль, отличная от \fB"C"\fP. Данная
категория также влияет на поведение \fBcatopen\fP(3).
.TP 
\fBLC_MEASUREMENT\fP (расширение GNU, начиная с glibc 2.2)
Изменяет настройки, которые в локали описывают систему мер (то есть,
метрическую систему мер и систему мер США (US customary unit)). Приложения,
в которых требуется эта информация, могут использовать функцию
\fBnl_langinfo\fP(3) для получения нестандартного элемента
\fB_NL_MEASUREMENT_MEASUREMENT\fP, которая возвращает 1 (метрическая) или 2
(система мер США).
.TP 
\fBLC_NAME\fP (расширение GNU, начиная с glibc 2.2)
.\" See ISO/IEC Technical Report 14652
Изменяет настройки, которые описывают форматы, используемые для описания
персон. Приложения, в которых требуется эта информация, могут использовать
функцию \fBnl_langinfo\fP(3) для получения нестандартных элементов, таких как
\fB_NL_NAME_NAME_MR\fP (приветствие мужчин) и \fB_NL_NAME_NAME_MS\fP (приветствие
женщин), которая возвращает строку, например «Herr» и «Frau» (для локалей с
немецким языком) (остальные названия элементов перечислены в
\fI<langinfo.h>\fP).
.TP 
\fBLC_NUMERIC\fP
Эта категория определяет правила форматирования, используемые для не
денежных значений; например, разделительный символ тысяч и дробной части
(точка в англоязычных странах, и запятая во многих других). Она влияет на
поведение функций \fBprintf\fP(3), \fBscanf\fP(3) и \fBstrtod\fP(3). Эта информация
может быть также прочитана при помощи функции \fBlocaleconv\fP(3).
.TP 
\fBLC_PAPER\fP (расширение GNU, начиная с glibc 2.2)
.\" See ISO/IEC Technical Report 14652
Изменяет настройки, которые относятся к размерам стандартных листов бумаги
(например, письмо США и A4). Приложения, в которых требуется эта информация,
могут использовать функцию \fBnl_langinfo\fP(3) для получения нестандартных
элементов, таких как \fB_NL_PAPER_WIDTH\fP и \fB_NL_PAPER_HEIGHT\fP которая
возвращает значение \fIint\fP, определяющее размер в миллиметрах.
.TP 
\fBLC_TELEPHONE\fP (расширение GNU, начиная с glibc 2.2)
.\" See ISO/IEC Technical Report 14652
Изменяет настройки, которые описывают форматы, используемые службах
телефонии. Приложения, в которых требуется эта информация, могут
использовать функцию \fBnl_langinfo\fP(3) для получения нестандартных
элементов, таких как \fB_NL_TELEPHONE_INT_PREFIX\fP (международный префикс,
используемые для номеров звонков в этой локали), которая возвращает строку,
например «49» (для Германии) (остальные названия элементов перечислены в
\fI<langinfo.h>\fP).
.TP 
\fBLC_TIME\fP
Эта категория управляет форматированием значений даты и времени. Например,
большая часть Европы использует 24\-часовой формат, тогда как в США
используют 12\-часовой.Значение этой категории влияет на поведение функции
\fBstrftime\fP(3) и \fBstrptime\fP(3).
.TP 
\fBLC_ALL\fP
Всё вышеперечисленное.
.PP
Если второй аргумент функции \fBsetlocale\fP(3) равен пустой строке, \fI""\fP, то
локаль по умолчанию будет определяться следующим образом:
.IP 1. 3
Если существует непустая переменная окружения \fBLC_ALL\fP, то используется её
значение.
.IP 2.
Если существует переменная окружения с именем одной из вышеописанных
категорий и она непустая, то её значение присваивается этой категории.
.IP 3.
Если существует непустая переменная окружения \fBLANG\fP, то используется её
значение.
.PP
Информация о локальном форматировании чисел доступна в структуре \fIstruct
lconv\fP, возвращаемой функцией \fBlocaleconv\fP(3) , которая описана следующим
образом:
.PP
.in +4n
.EX
struct lconv {

    /* Информация о числах (не связанная с деньгами) */

    char *decimal_point;     /* Символ разделителя дробной части */
    char *thousands_sep;     /* Разделитель групп цифр слева от
                       символа разделителя дробной части */
    char *grouping;     /* Каждый элемент является номером цифры в группе;
                       элементы c большими номерами находятся левее.
                       Элемент с значением CHAR_MAX означает, что
                       группировка завершена. Элемент со значением 0
                       указывает, что предыдущий элемент используется
                       для всех групп, находящихся левее. */

    /* В оставшихся полях указывается информация о денежных
       величинах */

    char *int_curr_symbol;   /* Первые три символа являются символом
                                валюты, согласно ISO 4217. Четвёртый
                                символ является разделителем. Пятый
                                символ равен \(aq\e0\(aq. */
    char *currency_symbol;   /* Местный символ валюты */
    char *mon_decimal_point; /* Символ разделителя дробной части */
    char *mon_thousands_sep; /* Как \fIthousands_sep\fP */
    char *mon_grouping;      /* Как \fIgrouping\fP */
    char *positive_sign;     /* Знак положительных значений */
    char *negative_sign;     /* Знак отрицательных значений */
    char  int_frac_digits;   /* Представление дробных чисел в
                                международном формате */
    char  frac_digits;       /* Представление дробных чисел в локальном
                                формате */
    char  p_cs_precedes;     /* 1, если символ валюты указывается перед
                                положительным значение, 0 — если
                                следует за ним. */
    char  p_sep_by_space;    /* 1, если пробел отделяет символ валюты
                                от положительного значения */
    char  n_cs_precedes;     /* 1, если символ валюты предшествует
                                 отрицательному значению,
                                0, если следует за ним */
    char  n_sep_by_space;    /* 1, если пробел отделяет символ валюты
                                от отрицательного значения */
    /* Позиция положительного или отрицательного знака:
       0 Скобки окружают количество и символ валюты.
       1 Знак предшествует количеству и символу валюты.
       2 Знак следует за количеством и символом валюты.
       3 Знак непосредственно предшествует символу валюты.
       4 Знак непосредственно следует за символом валюты. */
    char  p_sign_posn;
    char  n_sign_posn;
};
.EE
.in
.SS "Расширения POSIX.1\-2008 программного интерфейса локали"
В POSIX.1\-2008 стандартизовано несколько расширений программного интерфейса
локали на основе реализаций, которые впервые появились в версии 2.3
библиотеки GNU C. Эти расширения разработаны для решения проблем,
возникающих у обычного программного интерфейса локали в многонитевых
приложениях и приложениях, которые должны работать с несколькими локалями.
.PP
Расширения представляют новые функции для создания и управления объектами
локали (\fBnewlocale\fP(3), \fBfreelocale\fP(3), \fBduplocale\fP(3) и
\fBuselocale\fP(3)) и различные новые библиотечные функции с суффиксом«_l»
(например, \fBtoupper_l\fP(3)), которые расширяют обычный зависящий от локали
программный интерфейс (например, \fBtoupper\fP(3)) так, что позволяют указать
объект локали, который будет использован при работе функции.
.SH ОКРУЖЕНИЕ
Следующая переменная окружения используется в \fBnewlocale\fP(3) и
\fBsetlocale\fP(3), и поэтому влияет на все не привилегированные локализованные
программы:
.TP 
\fBLOCPATH\fP
Список путей, разделённых двоеточием («:»), который должен использоваться
при поиске данных локали. Если переменная установлена, то используются
только скомпилированные файлы данных одной локали из \fILOCPATH\fP и путь к
данным системной локали по умолчанию; все другие доступные архивы локалей не
используются (смотрите \fBlocaledef\fP(1)). Скопированные файлы данных одной
локали ищутся в подкаталогах, которые зависят от используемой локали в
данный момент. Например, если для категории используется \fIen_GB.UTF\-8\fP, то
будут просмотрены следующие подкаталоги в таком порядке: \fIen_GB.UTF\-8\fP,
\fIen_GB.utf8\fP, \fIen_GB\fP, \fIen.UTF\-8\fP, \fIen.utf8\fP и \fIen\fP.
.SH ФАЙЛЫ
.TP 
\fI/usr/lib/locale/locale\-archive\fP
Обычный путь по умолчанию для расположения архива локалей.
.TP 
\fI/usr/lib/locale\fP
Обычный путь по умолчанию для скомпонованных файлов отдельных локалей.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.\"
.\" The GNU gettext functions are specified in LI18NUX2000.
POSIX.1\-2001.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBiconv\fP(1), \fBlocale\fP(1), \fBlocaledef\fP(1), \fBcatopen\fP(3), \fBgettext\fP(3),
\fBiconv\fP(3), \fBlocaleconv\fP(3), \fBmbstowcs\fP(3), \fBnewlocale\fP(3),
\fBngettext\fP(3), \fBnl_langinfo\fP(3), \fBrpmatch\fP(3), \fBsetlocale\fP(3),
\fBstrcoll\fP(3), \fBstrfmon\fP(3), \fBstrftime\fP(3), \fBstrxfrm\fP(3),
\fBuselocale\fP(3), \fBwcstombs\fP(3), \fBlocale\fP(5), \fBcharsets\fP(7),
\fBunicode\fP(7), \fButf\-8\fP(7)
