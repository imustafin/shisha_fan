.\" -*- mode: troff; coding: UTF-8 -*-
.\"
.\" Copyright (C) 2014 Red Hat, Inc. All Rights Reserved.
.\" Written by David Howells (dhowells@redhat.com)
.\"
.\" %%%LICENSE_START(GPLv2+_SW_ONEPARA)
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License
.\" as published by the Free Software Foundation; either version
.\" 2 of the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH USER\-SESSION\-KEYRING 7 2017\-03\-13 Linux "Руководство программиста Linux"
.SH ИМЯ
user\-session\-keyring \- пользовательская сеансовая связка ключей по умолчанию
.SH ОПИСАНИЕ
Пользовательская сеансовая связка ключей используется для хранения ключей
пользователя. Для каждого UID у ядра есть своя пользовательская сеансовая
связка ключей, которая доступна из всех процессов с этим
UID. Пользовательская сеансовая связка ключей имеет имя (описание) в виде
\fI_uid_ses.<UID>\fP, где \fI<UID>\fP идентификатор пользователя
соответствующего пользователя.
.PP
.\" Davis Howells: the user and user-session keyrings are managed as a pair.
Пользовательская сеансовая связка ключей связана с записью, которая
обслуживается ядром для UID. Она начинает существовать при попытке первого
обращения к пользовательской сеансовой связке ключей, к \fBuser\-keyring\fP(7)
или к \fBsession\-keyring\fP(7). Связка ключей существует привязанной всё время
пока выполняются процессы с этим реальным UID или остаются открытыми файлы,
открытые этими процессами (связка ключей также может быть привязана
бесконечно, если её прицепить к другой связке ключей).
.PP
Пользовательская сеансовая связка ключей создаётся когда этого запросит нить
или когда нить запросит свою \fBsession\-keyring\fP(7) и эта связка ключей не
существует. В последнем случае, пользовательская сеансовая связка ключей
будет создана и, если сеансовая связка ключей не была создана, то
пользовательская сеансовая связка ключей будет использована как действующая
сеансовая связка ключей процесса.
.PP
В пользовательской сеансовой связке ключей выполняется поиск
\fBrequest_key\fP(2), если не существует реальная связка ключей сеанса и не
выполняется в противном случае.
.PP
Существует специальный серийный номер, \fBKEY_SPEC_USER_SESSION_KEYRING\fP,
который можно указывать вместо реального серийного номера пользовательской
связки ключей сеанса вызывающего процесса.
.PP
В утилите \fBkeyctl\fP(1) подобным образом можно использовать «\fB@us\fP» вместо
числового идентификатора ключа.
.PP
Пользовательские сеансовые связки ключей не зависят от \fBclone\fP(2),
\fBfork\fP(2), \fBvfork\fP(2), \fBexecve\fP(2) и \fB_exit\fP(2) за исключением того, что
эта связка ключей уничтожается когда запись UID уничтожается при завершении
последнего привязанного процесса.
.PP
Если сеансовая связка ключей пользователя не существует на момент доступа,
то она создаётся.
.PP
Лучше не полагаться на пользовательскую сеансовую связку ключей;
настоятельно рекомендуется, особенно если процесс выполняется с правами
суперпользователя, задавать \fBsession\-keyring\fP(7) явным образом, например с
помощью \fBpam_keyinit\fP(8).
.SH ЗАМЕЧАНИЯ
Поддержка пользовательской сеансовой связки ключей была добавлена для
ситуаций, когда процесс не имеет сеансовой связки ключей, возможно из\-за
того, что был создан способом, не включающим PAM (например, служба,
запущенная \fBinetd\fP(8)). В этом случае, пользовательская сеансовая связка
ключей подставляется вместо \fBsession\-keyring\fP(7).
.SH "СМОТРИТЕ ТАКЖЕ"
.ad l
.nh
\fBkeyctl\fP(1), \fBkeyctl\fP(3), \fBkeyrings\fP(7), \fBpersistent\-keyring\fP(7),
\fBprocess\-keyring\fP(7), \fBsession\-keyring\fP(7), \fBthread\-keyring\fP(7),
\fBuser\-keyring\fP(7)
