.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright (C) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified 2003-08-17 by Walter Harms
.\" Modified 2004-06-23 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH STATFS 2 2017\-09\-15 Linux "Руководство программиста Linux"
.SH ИМЯ
statfs, fstatfs \- возвращает статистику по файловой системе
.SH ОБЗОР
\fB#include <sys/vfs.h> \fP/* или <sys/statfs.h> */
.PP
\fBint statfs(const char *\fP\fIpath\fP\fB, struct statfs *\fP\fIbuf\fP\fB);\fP
.br
\fBint fstatfs(int \fP\fIfd\fP\fB, struct statfs *\fP\fIbuf\fP\fB);\fP
.SH ОПИСАНИЕ
Системный вызов \fBstatfs\fP() возвращает информацию о смонтированной файловой
системе. Значение \fIpath\fP является путём любого файла, расположенного в
смонтированной файловой системе. Значение \fIbuf\fP является указателем на
структуру \fIstatfs\fP, определённую, примерно, следующим образом:
.PP
.in +4n
.EX
struct statfs {
    __fsword_t f_type;    /* тип файловой системы (смотрите далее) */
    __fsword_t f_bsize;   /* оптимальный размер пересылаемых блоков */
    fsblkcnt_t f_blocks;  /* общее количество блоков данных
                             в файловой системе */
    fsblkcnt_t f_bfree;   /* свободных блоков в файловой системе */
    fsblkcnt_t f_bavail;  /* свободных блоков, доступных
                             непривилегированному пользователю */
    fsfilcnt_t f_files;   /* общее количество файловых нод
                             в файловой системе */
    fsfilcnt_t f_ffree;   /* свободных файловых нод в файловой системе */
    fsid_t     f_fsid;    /* ID файловой системы */
    __fsword_t f_namelen; /* максимальная длина имён файлов */
    __fsword_t f_frsize;  /* размер фрагмента (начиная с Linux 2.6) */
    __fsword_t f_flags;   /* флаги монтирования файловой системы
                             (начиная с Linux 2.6.36) */
    __fsword_t f_spare[xxx];
                    /* дополняющие байты, зарезервированные для будущего
                       использования */
};
.EE
.in
.PP
В \fIf_type\fP могут быть указаны следующие типы файловых систем:
.PP
.in +4n
.EX
ADFS_SUPER_MAGIC      0xadf5
AFFS_SUPER_MAGIC      0xadff
AFS_SUPER_MAGIC       0x5346414f
ANON_INODE_FS_MAGIC   0x09041934 /* ФС анонимных инод (для
                                    псевдофайлов без имени;
                                    например, epoll, signalfd, bpf) */
AUTOFS_SUPER_MAGIC    0x0187
BDEVFS_MAGIC          0x62646576
BEFS_SUPER_MAGIC      0x42465331
BFS_MAGIC             0x1badface
BINFMTFS_MAGIC        0x42494e4d
BPF_FS_MAGIC          0xcafe4a11
BTRFS_SUPER_MAGIC     0x9123683e
BTRFS_TEST_MAGIC      0x73727279
CGROUP_SUPER_MAGIC    0x27e0eb   /* псевдофайловая система cgroup */
CGROUP2_SUPER_MAGIC   0x63677270 /* псевдофайловая система cgroup v2 */
CIFS_MAGIC_NUMBER     0xff534d42
CODA_SUPER_MAGIC      0x73757245
COH_SUPER_MAGIC       0x012ff7b7
CRAMFS_MAGIC          0x28cd3d45
DEBUGFS_MAGIC         0x64626720
DEVFS_SUPER_MAGIC     0x1373     /* Linux 2.6.17 и старее */
DEVPTS_SUPER_MAGIC    0x1cd1
ECRYPTFS_SUPER_MAGIC  0xf15f
EFIVARFS_MAGIC        0xde5e81e4
EFS_SUPER_MAGIC       0x00414a53
EXT_SUPER_MAGIC       0x137d     /* Linux 2.0 и старее */
EXT2_OLD_SUPER_MAGIC  0xef51
EXT2_SUPER_MAGIC      0xef53
EXT3_SUPER_MAGIC      0xef53
EXT4_SUPER_MAGIC      0xef53
F2FS_SUPER_MAGIC      0xf2f52010
FUSE_SUPER_MAGIC      0x65735546
FUTEXFS_SUPER_MAGIC   0xbad1dea  /* не используется */
HFS_SUPER_MAGIC       0x4244
HOSTFS_SUPER_MAGIC    0x00c0ffee
HPFS_SUPER_MAGIC      0xf995e849
HUGETLBFS_MAGIC       0x958458f6
ISOFS_SUPER_MAGIC     0x9660
JFFS2_SUPER_MAGIC     0x72b6
JFS_SUPER_MAGIC       0x3153464a
MINIX_SUPER_MAGIC     0x137f     /* первая ФС minix */
MINIX_SUPER_MAGIC2    0x138f     /* 30\-символьная ФС minix */
MINIX2_SUPER_MAGIC    0x2468     /* ФС minix V2 */
MINIX2_SUPER_MAGIC2   0x2478     /* ФС minix V2, имена 30 символов */
MINIX3_SUPER_MAGIC    0x4d5a     /* ФС minix V3, имена 60 символов */
MQUEUE_MAGIC          0x19800202 /* ФС очереди сообщений POSIX */
MSDOS_SUPER_MAGIC     0x4d44
MTD_INODE_FS_MAGIC    0x11307854
NCP_SUPER_MAGIC       0x564c
NFS_SUPER_MAGIC       0x6969
NILFS_SUPER_MAGIC     0x3434
NSFS_MAGIC            0x6e736673
NTFS_SB_MAGIC         0x5346544e
OCFS2_SUPER_MAGIC     0x7461636f
OPENPROM_SUPER_MAGIC  0x9fa1
OVERLAYFS_SUPER_MAGIC 0x794c7630
PIPEFS_MAGIC          0x50495045
PROC_SUPER_MAGIC      0x9fa0     /* ФС /proc */
PSTOREFS_MAGIC        0x6165676c
QNX4_SUPER_MAGIC      0x002f
QNX6_SUPER_MAGIC      0x68191122
RAMFS_MAGIC           0x858458f6
REISERFS_SUPER_MAGIC  0x52654973
ROMFS_MAGIC           0x7275
SECURITYFS_MAGIC      0x73636673
SELINUX_MAGIC         0xf97cff8c
SMACK_MAGIC           0x43415d53
SMB_SUPER_MAGIC       0x517b
SOCKFS_MAGIC          0x534f434b
SQUASHFS_MAGIC        0x73717368
SYSFS_MAGIC           0x62656572
SYSV2_SUPER_MAGIC     0x012ff7b6
SYSV4_SUPER_MAGIC     0x012ff7b5
TMPFS_MAGIC           0x01021994
TRACEFS_MAGIC         0x74726163
UDF_SUPER_MAGIC       0x15013346
UFS_MAGIC             0x00011954
USBDEVICE_SUPER_MAGIC 0x9fa2
V9FS_MAGIC            0x01021997
VXFS_SUPER_MAGIC      0xa501fcf5
XENFS_SUPER_MAGIC     0xabba1974
XENIX_SUPER_MAGIC     0x012ff7b4
XFS_SUPER_MAGIC       0x58465342
_XIAFS_SUPER_MAGIC    0x012fd16d /* Linux 2.0 и старее */
.EE
.in
.PP
Большинство этих констант MAGIC определены в \fI/usr/include/linux/magic.h\fP,
а некоторые находятся прямо в исходном коде ядра.
.PP
.\" XXX Keep this list in sync with statvfs(3)
Поле \fIflags\fP представляет собой битовую маску параметров монтирования
файловой системы. В нём содержится ноль или несколько следующих бит:
.TP 
\fBST_MANDLOCK\fP
Разрешена обязательная (mandatory) блокировка файловой системы (смотрите
\fBfcntl\fP(2)).
.TP 
\fBST_NOATIME\fP
Не обновлять времена доступа; смотрите \fBmount\fP(2).
.TP 
\fBST_NODEV\fP
Запретить доступ к специальным файлам устройств в этой файловой системе.
.TP 
\fBST_NODIRATIME\fP
Не обновлять времена доступа к каталогам; смотрите \fBmount\fP(2).
.TP 
\fBST_NOEXEC\fP
Исполнение программ в этой файловой системе запрещено.
.TP 
\fBST_NOSUID\fP
Биты set\-user\-ID и set\-group\-ID игнорируются в \fBexec\fP(3) для исполняемых
файлов в этой файловой системе.
.TP 
\fBST_RDONLY\fP
Файловая система смонтирована в режиме только для чтения.
.TP 
\fBST_RELATIME\fP
Обновлять atime относительно mtime/ctime; смотрите \fBmount\fP(2).
.TP 
\fBST_SYNCHRONOUS\fP
Выполнять синхронную запись в файловую систему немедленно (смотрите описание
\fBO_SYNC\fP в \fBopen\fP(2)).
.PP
Значение \fIf_fsid\fP до конца не определено (но смотрите далее).
.PP
Если поле не определёно для какой\-то файловой системы, то его значение
устанавливается в 0.
.PP
\fBfstatfs\fP() возвращает такую же информацию об открытом файле через его
ссылку на дескриптор \fIfd\fP.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается 0. В случае ошибки возвращается \-1, а
\fIerrno\fP устанавливается в соответствующее значение.
.SH ОШИБКИ
.TP 
\fBEACCES\fP
(\fBstatfs\fP()) В одном из каталогов префикса пути \fIpath\fP не разрешён поиск
(см. также \fBpath_resolution\fP(7)).
.TP 
\fBEBADF\fP
(\fBfstatfs\fP()) \fIfd\fP не является корректным открытым дескриптором файла.
.TP 
\fBEFAULT\fP
Аргумент \fIbuf\fP или \fIpath\fP указывает на неправильный адрес.
.TP 
\fBEINTR\fP
Вызов был прерван каким\-либо сигналом. Смотрите \fBsignal\fP(7).
.TP 
\fBEIO\fP
При чтении файловой системы произошла ошибка ввода\-вывода.
.TP 
\fBELOOP\fP
(\fBstatfs\fP()) Было обнаружено слишком много символьных ссылок при трансляции
\fIpath\fP.
.TP 
\fBENAMETOOLONG\fP
(\fBstatfs\fP()) Слишком длинное значение аргумента \fIpath\fP.
.TP 
\fBENOENT\fP
(\fBstatfs\fP()) Файл, на который ссылается \fIpath\fP, не существует.
.TP 
\fBENOMEM\fP
Недостаточное количество памяти ядра.
.TP 
\fBENOSYS\fP
Файловая система не поддерживает данный вызов.
.TP 
\fBENOTDIR\fP
(\fBstatfs\fP()) Компонент в префиксе пути \fIpath\fP не является каталогом.
.TP 
\fBEOVERFLOW\fP
Некоторые значения слишком велики, чтобы быть представленными в возвращаемой
структуре.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
Есть только в Linux. Вызов \fBstatfs\fP() основан на подобном из 4.4BSD (но они
используют разные структуры).
.SH ЗАМЕЧАНИЯ
Тип \fI__fsword_t\fP, используемый для различных полей в определении структуры
\fIstatfs\fP, является встроенным типом glibc и не предназначен для
использования вовне. Это подкидывает загадку программисту, который хочет
скопировать или сравнить эти поля с локальными переменными в программе. В
большинстве систем для переменных в этих случаях допустимо использовать тип
\fIunsigned\ int\fP.
.PP
Первые версии системных вызовов Linux \fBstatfs\fP() и \fBfstatfs\fP()
разрабатывались без учёта огромных размеров файлов. В последствии, в Linux
2.6 были добавлены системные вызовы \fBstatfs64\fP() и \fBfstatfs64\fP(), в
которых используется новая структура, \fIstatfs64\fP. Новая структура содержит
те же поля что и первоначальная структура \fIstatfs\fP, но размеры некоторых
полей были увеличены для учёта огромных размеров файлов. Обёрточные функции
в glibc \fBstatfs\fP() и \fBfstatfs\fP() прозрачно скрывают это различие ядер.
.PP
В одних системах есть только файл \fI<sys/vfs.h>\fP, в других также
есть файл \fI<sys/statfs.h>\fP, при чём первый включает
последний. Поэтому, вероятно, лучше включать первый.
.PP
В LSB библиотечные вызовы \fBstatfs\fP() и \fBfstatfs\fP() помечены как
устаревшие, вместе них предлагается использовать \fBstatvfs\fP(2) и
\fBfstatvfs\fP(2).
.SS "Поле f_fsid"
В Solaris, Irix и POSIX имеется системный вызов \fBstatvfs\fP(2), который
возвращает \fIstruct statvfs\fP (определена в \fI<sys/statvfs.h>\fP), и в
ней содержится поле \fIunsigned long\fP \fIf_fsid\fP. В Linux, SunOS, HP\-UX,
4.4BSD имеется системный вызов \fBstatfs\fP(), который возвращает \fIstruct
statfs\fP (определена в \fI<sys/vfs.h>\fP), и в ней содержится \fIfsid_t\fP
\fIf_fsid\fP, где тип \fIfsid_t\fP определён как \fIstruct { int val[2]; }\fP. Того
же придерживается FreeBSD, за исключением того, что в ней используется
включаемый файл \fI<sys/mount.h>\fP.
.PP
Общая идея в том, что в \fIf_fsid\fP содержится какая\-то произвольная
информация, например пара (\fIf_fsid\fP,\fIino\fP) уникально определяющая файл. В
некоторых операционных системах для этого используется номер устройства
(один из вариантов) или номер устройства вместе с типом файловой системы. В
других ОС поле \fIf_fsid\fP доступно только суперпользователю (и равно нулю для
остальных пользователей), так как это поле используется в файловом указателе
(filehandle) файловой системы при экспорте NFS, и выдача его значения влияет
на безопасность.
.PP
В некоторых ОС  \fIfsid\fP может использоваться в качестве второго аргумента
системного вызова \fBsysfs\fP(2).
.SH ДЕФЕКТЫ
.\" broken in commit ff0c7d15f9787b7e8c601533c015295cc68329f8
.\" fixed in commit d70ef97baf048412c395bb5d65791d8fe133a52b
В Linux 2.6.38 и до Linux 3.1 включительно, вызов \fBfstatfs\fP() завершался с
ошибкой \fBENOSYS\fP для файловых дескрипторов, созданных с помощью \fBpipe\fP(2).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBstat\fP(2), \fBstatvfs\fP(3), \fBpath_resolution\fP(7)
