.\" -*- mode: troff; coding: UTF-8 -*-
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Historical remark, aeb, 2004-06-05
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETUID 2 2019\-03\-06 Linux "Руководство программиста Linux"
.SH ИМЯ
getuid, geteuid \- получить идентификатор пользователя
.SH ОБЗОР
\fB#include <unistd.h>\fP
.br
\fB#include <sys/types.h>\fP
.PP
\fBuid_t getuid(void);\fP
.br
\fBuid_t geteuid(void);\fP
.SH ОПИСАНИЕ
\fBgetuid\fP() возвращает фактический идентификатор (ID) пользователя
вызывающего процесса.
.PP
\fBgeteuid\fP() возвращает эффективный идентификатор пользователя вызывающего
процесса.
.SH ОШИБКИ
Функции всегда завершаются успешно.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
POSIX.1\-2001, POSIX.1\-2008, 4.3BSD.
.SH ЗАМЕЧАНИЯ
.SS История
В UNIX\ V6 вызов \fBgetuid\fP() возвращал \fI(euid << 8) + uid\fP. В UNIX\ V7 появились отдельные вызовы \fBgetuid\fP() и \fBgeteuid\fP().
.PP
Первоначальные версии системных вызовов \fBgetuid\fP() и \fBgeteuid\fP() в Linux
поддерживали только 16\-битные идентификаторы пользователей и групп. Позднее
в Linux 2.4 были добавлены вызовы \fBgetuid32\fP() и \fBgeteuid32\fP(),
поддерживающие 32\-битные идентификаторы. В glibc обёрточные функции
\fBgetuid\fP() и \fBgeteuid\fP() работают одинаково вне зависимости от версий
ядра.
.PP
На Alpha вместо пары системных вызовов \fBgetuid\fP() и \fBgeteuid\fP()
предоставляется один \fBgetxuid\fP(), который возвращает пару реальный и
эффективный UID. Обёрточные функции glibc \fBgetuid\fP() и \fBgeteuid\fP()
скрывают это. Подробности об отображении регистров смотрите в \fBsyscall\fP(2).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBgetresuid\fP(2), \fBsetreuid\fP(2), \fBsetuid\fP(2), \fBcredentials\fP(7)
