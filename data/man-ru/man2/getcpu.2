.\" -*- mode: troff; coding: UTF-8 -*-
.\" This man page is Copyright (C) 2006 Andi Kleen <ak@muc.de>.
.\"
.\" %%%LICENSE_START(VERBATIM_ONE_PARA)
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" %%%LICENSE_END
.\"
.\" 2008, mtk, various edits
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETCPU 2 2019\-03\-06 Linux "Руководство программиста Linux"
.SH ИМЯ
getcpu \- определяет ЦП и узел NUMA, на котором выполняется вызывающая нить
.SH ОБЗОР
.nf
\fB#include <linux/getcpu.h>\fP
.PP
\fBint getcpu(unsigned *\fP\fIcpu\fP\fB, unsigned *\fP\fInode\fP\fB, struct getcpu_cache *\fP\fItcache\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
Системный вызов \fBgetcpu\fP() определяет процессор и узел, на котором
вызывающая нить или процесс выполняются в данный момент и записывает их в
виде целых чисел в память, на которую указывают аргументы \fIcpu\fP и
\fInode\fP. Процессор представляется в виде уникального малого целого числа,
закреплённого за определённым ЦП. Узел представляется в виде уникального
идентификатора, закреплённого за определённым узлом NUMA. Если значение
\fIcpu\fP или \fInode\fP равно NULL, то по соответствующему указателю ничего не
записывается.
.PP
Третий аргумент этого системного вызова в настоящее время не используется и
указываться как NULL, не требуется переносимость на Linux 2.6.23 или более
младшие версии (смотрите ЗАМЕЧАНИЯ).
.PP
Информация, помещаемая в \fIcpu\fP, будет находиться там только на время
вызова: unless the CPU affinity has been fixed using
\fBsched_setaffinity\fP(2), the kernel might change the CPU at any time.
(Normally this does not happen because the scheduler tries to minimize
movements between CPUs to keep caches hot, but it is possible.)
Достоверность информации, помещаемой в \fIcpu\fP, гарантируется только на
момент  вызова: если привязка ЦП не была изменена с помощью
\fBsched_setaffinity\fP(2), то ядро может сменить ЦП в любой момент (обычно
этого не происходит, так как планировщик пытается минимизировать перемещения
задач между процессорами для поддержания актуальности кэша,но всё же это
возможно). Вызывающий должен быть готов к ситуации, что информация,
возвращённая в \fIcpu\fP и \fInode\fP, может потерять актуальность уже после
возврата из вызова.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается 0. В случае ошибки возвращается \-1, а
\fIerrno\fP устанавливается в соответствующее значение.
.SH ОШИБКИ
.TP 
\fBEFAULT\fP
Аргументы указывают за пределы адресного пространства вызывающего процесса.
.SH ВЕРСИИ
Системный вызов \fBgetcpu\fP() добавлен в ядре 2.6.19 для x86\-64 и
i386. Библиотечная поддержка добавлена в glibc 2.29 (ранние версии glibc не
содержали обёрточную функцию для этого вызова, нужно было использовать
\fBsyscall\fP(2)).
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
Вызов \fBgetcpu\fP() есть только в Linux.
.SH ЗАМЕЧАНИЯ
Linux старается выполнить данный вызов как можно быстрее (на некоторых
архитектурах это делается через реализацию в \fBvdso\fP(7)). Предназначение
\fBgetcpu\fP() — позволить программам оптимизировать обработку данных на разных
ЦП или выполнить оптимизации NUMA.
.PP
.\" commit 4307d1e5ada595c87f9a4d16db16ba5edb70dcb1
.\" Author: Ingo Molnar <mingo@elte.hu>
.\" Date:   Wed Nov 7 18:37:48 2007 +0100
.\" x86: ignore the sys_getcpu() tcache parameter
.\"
.\" ===== Before kernel 2.6.24: =====
.\" .I tcache
.\" is a pointer to a
.\" .IR "struct getcpu_cache"
.\" that is used as a cache by
.\" .BR getcpu ().
.\" The caller should put the cache into a thread-local variable
.\" if the process is multithreaded,
.\" because the cache cannot be shared between different threads.
.\" .I tcache
.\" can be NULL.
.\" If it is not NULL
.\" .BR getcpu ()
.\" will use it to speed up operation.
.\" The information inside the cache is private to the system call
.\" and should not be accessed by the user program.
.\" The information placed in the cache can change between kernel releases.
.\"
.\" When no cache is specified
.\" .BR getcpu ()
.\" will be slower,
.\" but always retrieve the current CPU and node information.
.\" With a cache
.\" .BR getcpu ()
.\" is faster.
.\" However, the cached information is updated only once per jiffy (see
.\" .BR time (7)).
.\" This means that the information could theoretically be out of date,
.\" although in practice the scheduler's attempt to maintain
.\" soft CPU affinity means that the information is unlikely to change
.\" over the course of the caching interval.
Аргумент \fItcache\fP не используется начиная с Linux 2.6.24. В более старых
ядрах, если этот аргумент не равнялся NULL, то в нём задавался указатель на
буфер, выделяемый вызывающим в локальном хранилище нити, который
использовался для работы механизма кэширования \fBgetcpu\fP(). Использование
кэша могло бы увеличить скорость работы \fBgetcpu\fP(), и расплатой за это было
бы возникновение очень маленькой вероятности, что возвращаемая информация
устарела. Кэширующий механизм стал рассматриваться как вызывающий проблемы
при перемещения нитей между ЦП, и поэтому теперь этот аргумент игнорируется.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBmbind\fP(2), \fBsched_setaffinity\fP(2), \fBset_mempolicy\fP(2),
\fBsched_getcpu\fP(3), \fBcpuset\fP(7), \fBvdso\fP(7)
